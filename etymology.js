/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _parser = __webpack_require__(1);

	window.parseTemplate = _parser.parseTemplate;

	function getEtymology(word, cb) {
		var xhr = new XMLHttpRequest();
		var url = 'https://en.wiktionary.org/w/api.php?action=query&origin=*&prop=revisions&rvprop=content&format=json&titles=' + word.toLowerCase();
		xhr.onreadystatechange = function () {
			if (xhr.readyState !== XMLHttpRequest.DONE || xhr.status !== 200) return;
			var resp = JSON.parse(xhr.responseText);
			var pages = resp.query.pages;
			var content = pages[Object.keys(pages)].revisions[0]["*"];

			var structure = parsePage(content);
			var blends = content.match(/\{\{blend.*\}\}/g);
			if (blends) {
				var res = '';
				blends.forEach(function (blend) {
					var parts = blend.split('|');
					var blendparts = parts.slice(1, parts.length - 1);
					res += 'Blend of ' + blendparts.join(' and ') + '\n';
				});
				return cb(res);
			}
			// YEAH YEAH YEAH!
			cb('No idea!');
		};
		xhr.open('GET', url, true);
		xhr.send();
	}

	function getEtymologyFromMenu(info) {
		var result = getEtymology(info.selectionText, alert);
	}

	chrome.contextMenus.create({
		title: 'Etymology for %s',
		id: 'etymext',
		contexts: ['selection'],
		onclick: getEtymologyFromMenu
	});

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Control_Alt = __webpack_require__(2);
	var Data_Either = __webpack_require__(15);
	var Data_Array = __webpack_require__(69);
	var Data_Maybe = __webpack_require__(60);
	var Data_String = __webpack_require__(90);
	var Text_Parsing_Parser = __webpack_require__(94);
	var Text_Parsing_Parser_String = __webpack_require__(108);
	var Text_Parsing_Parser_Combinators = __webpack_require__(109);
	var Prelude = __webpack_require__(16);
	var Data_List = __webpack_require__(110);
	var Control_Bind = __webpack_require__(20);
	var Data_Identity = __webpack_require__(79);
	var Data_Function = __webpack_require__(5);
	var Data_List_Types = __webpack_require__(111);
	var Data_Functor = __webpack_require__(3);
	var Control_Applicative = __webpack_require__(17);
	var Template = (function () {
	    function Template(value0) {
	        this.value0 = value0;
	    };
	    Template.create = function (value0) {
	        return new Template(value0);
	    };
	    return Template;
	})();
	var template = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("{{"))(function () {
	    return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.sepBy(Data_Identity.monadIdentity)(Data_Array.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Text_Parsing_Parser_String.noneOf(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)([ "|", "}" ])))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("|")))(function (v) {
	        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("}}"))(function () {
	            var tag$prime = (function () {
	                var $12 = Data_List.head(v);
	                if ($12 instanceof Data_Maybe.Nothing) {
	                    return "no-tag";
	                };
	                if ($12 instanceof Data_Maybe.Just) {
	                    return Data_String.fromCharArray($12.value0);
	                };
	                throw new Error("Failed pattern match at Main line 31, column 20 - line 33, column 42: " + [ $12.constructor.name ]);
	            })();
	            var parts$prime = (function () {
	                var $14 = Data_List.tail(v);
	                if ($14 instanceof Data_Maybe.Nothing) {
	                    return Data_List_Types.Nil.value;
	                };
	                if ($14 instanceof Data_Maybe.Just) {
	                    return Data_Functor.map(Data_List_Types.functorList)(Data_String.fromCharArray)($14.value0);
	                };
	                throw new Error("Failed pattern match at Main line 34, column 22 - line 36, column 48: " + [ $14.constructor.name ]);
	            })();
	            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(new Template({
	                tag: tag$prime, 
	                parts: parts$prime
	            }));
	        });
	    });
	});
	var parseTemplate = function (s) {
	    var $16 = Text_Parsing_Parser.runParser(s)(template);
	    if ($16 instanceof Data_Either.Left) {
	        return new Template({
	            tag: "error-tag", 
	            parts: Data_List_Types.Nil.value
	        });
	    };
	    if ($16 instanceof Data_Either.Right) {
	        return $16.value0;
	    };
	    throw new Error("Failed pattern match at Main line 20, column 19 - line 22, column 21: " + [ $16.constructor.name ]);
	};
	var digit = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("0"))(function (v) {
	    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(0);
	}))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("1"))(function (v) {
	    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(1);
	})))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("2"))(function (v) {
	    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(2);
	})))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("3"))(function (v) {
	    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(3);
	})))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("4"))(function (v) {
	    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(4);
	})))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("5"))(function (v) {
	    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(5);
	})))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("6"))(function (v) {
	    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(6);
	})))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("7"))(function (v) {
	    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(7);
	})))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("8"))(function (v) {
	    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(8);
	})))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("9"))(function (v) {
	    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(9);
	}));
	module.exports = {
	    Template: Template, 
	    parseTemplate: parseTemplate
	};


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Data_Functor = __webpack_require__(3);
	var Data_Semigroup = __webpack_require__(12);
	var Alt = function (__superclass_Data$dotFunctor$dotFunctor_0, alt) {
	    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
	    this.alt = alt;
	};
	var altArray = new Alt(function () {
	    return Data_Functor.functorArray;
	}, Data_Semigroup.append(Data_Semigroup.semigroupArray));
	var alt = function (dict) {
	    return dict.alt;
	};
	module.exports = {
	    Alt: Alt, 
	    alt: alt, 
	    altArray: altArray
	};


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(4);
	var Data_Function = __webpack_require__(5);
	var Data_Unit = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(7);
	var Functor = function (map) {
	    this.map = map;
	};
	var map = function (dict) {
	    return dict.map;
	};
	var mapFlipped = function (dictFunctor) {
	    return function (fa) {
	        return function (f) {
	            return map(dictFunctor)(f)(fa);
	        };
	    };
	};
	var $$void = function (dictFunctor) {
	    return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
	};
	var voidLeft = function (dictFunctor) {
	    return function (f) {
	        return function (x) {
	            return map(dictFunctor)(Data_Function["const"](x))(f);
	        };
	    };
	};
	var voidRight = function (dictFunctor) {
	    return function (x) {
	        return map(dictFunctor)(Data_Function["const"](x));
	    };
	};
	var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
	var functorArray = new Functor($foreign.arrayMap);
	var flap = function (dictFunctor) {
	    return function (ff) {
	        return function (x) {
	            return map(dictFunctor)(function (f) {
	                return f(x);
	            })(ff);
	        };
	    };
	};
	module.exports = {
	    Functor: Functor, 
	    flap: flap, 
	    map: map, 
	    mapFlipped: mapFlipped, 
	    "void": $$void, 
	    voidLeft: voidLeft, 
	    voidRight: voidRight, 
	    functorFn: functorFn, 
	    functorArray: functorArray
	};


/***/ },
/* 4 */
/***/ function(module, exports) {

	"use strict";

	exports.arrayMap = function (f) {
	  return function (arr) {
	    var l = arr.length;
	    var result = new Array(l);
	    for (var i = 0; i < l; i++) {
	      result[i] = f(arr[i]);
	    }
	    return result;
	  };
	};

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Control_Category = __webpack_require__(6);
	var on = function (f) {
	    return function (g) {
	        return function (x) {
	            return function (y) {
	                return f(g(x))(g(y));
	            };
	        };
	    };
	};
	var flip = function (f) {
	    return function (b) {
	        return function (a) {
	            return f(a)(b);
	        };
	    };
	};
	var $$const = function (a) {
	    return function (v) {
	        return a;
	    };
	};
	var applyFlipped = function (x) {
	    return function (f) {
	        return f(x);
	    };
	};
	var apply = function (f) {
	    return function (x) {
	        return f(x);
	    };
	};
	module.exports = {
	    apply: apply, 
	    applyFlipped: applyFlipped, 
	    "const": $$const, 
	    flip: flip, 
	    on: on
	};


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Control_Semigroupoid = __webpack_require__(7);
	var Category = function (__superclass_Control$dotSemigroupoid$dotSemigroupoid_0, id) {
	    this["__superclass_Control.Semigroupoid.Semigroupoid_0"] = __superclass_Control$dotSemigroupoid$dotSemigroupoid_0;
	    this.id = id;
	};
	var id = function (dict) {
	    return dict.id;
	};
	var categoryFn = new Category(function () {
	    return Control_Semigroupoid.semigroupoidFn;
	}, function (x) {
	    return x;
	});
	module.exports = {
	    Category: Category, 
	    id: id, 
	    categoryFn: categoryFn
	};


/***/ },
/* 7 */
/***/ function(module, exports) {

	// Generated by psc version 0.10.2
	"use strict";
	var Semigroupoid = function (compose) {
	    this.compose = compose;
	};
	var semigroupoidFn = new Semigroupoid(function (f) {
	    return function (g) {
	        return function (x) {
	            return f(g(x));
	        };
	    };
	});
	var compose = function (dict) {
	    return dict.compose;
	};
	var composeFlipped = function (dictSemigroupoid) {
	    return function (f) {
	        return function (g) {
	            return compose(dictSemigroupoid)(g)(f);
	        };
	    };
	};
	module.exports = {
	    Semigroupoid: Semigroupoid, 
	    compose: compose, 
	    composeFlipped: composeFlipped, 
	    semigroupoidFn: semigroupoidFn
	};


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(9);
	var Data_Show = __webpack_require__(10);
	var showUnit = new Data_Show.Show(function (v) {
	    return "unit";
	});
	module.exports = {
	    showUnit: showUnit, 
	    unit: $foreign.unit
	};


/***/ },
/* 9 */
/***/ function(module, exports) {

	"use strict";

	exports.unit = {};

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(11);
	var Show = function (show) {
	    this.show = show;
	};
	var showString = new Show($foreign.showStringImpl);
	var showNumber = new Show($foreign.showNumberImpl);
	var showInt = new Show($foreign.showIntImpl);
	var showChar = new Show($foreign.showCharImpl);
	var showBoolean = new Show(function (v) {
	    if (v) {
	        return "true";
	    };
	    if (!v) {
	        return "false";
	    };
	    throw new Error("Failed pattern match at Data.Show line 13, column 3 - line 14, column 3: " + [ v.constructor.name ]);
	});
	var show = function (dict) {
	    return dict.show;
	};
	var showArray = function (dictShow) {
	    return new Show($foreign.showArrayImpl(show(dictShow)));
	};
	module.exports = {
	    Show: Show, 
	    show: show, 
	    showBoolean: showBoolean, 
	    showInt: showInt, 
	    showNumber: showNumber, 
	    showChar: showChar, 
	    showString: showString, 
	    showArray: showArray
	};


/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";

	exports.showIntImpl = function (n) {
	  return n.toString();
	};

	exports.showNumberImpl = function (n) {
	  var str = n.toString();
	  return isNaN(str + ".0") ? str : str + ".0";
	};

	exports.showCharImpl = function (c) {
	  var code = c.charCodeAt(0);
	  if (code < 0x20 || code === 0x7F) {
	    switch (c) {
	      case "\x07":
	        return "'\\a'";
	      case "\b":
	        return "'\\b'";
	      case "\f":
	        return "'\\f'";
	      case "\n":
	        return "'\\n'";
	      case "\r":
	        return "'\\r'";
	      case "\t":
	        return "'\\t'";
	      case "\v":
	        return "'\\v'";
	    }
	    return "'\\" + code.toString(10) + "'";
	  }
	  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
	};

	exports.showStringImpl = function (s) {
	  var l = s.length;
	  return "\"" + s.replace(/[\0-\x1F\x7F"\\]/g, function (c, i) {
	    // jshint ignore:line
	    switch (c) {
	      case "\"":
	      case "\\":
	        return "\\" + c;
	      case "\x07":
	        return "\\a";
	      case "\b":
	        return "\\b";
	      case "\f":
	        return "\\f";
	      case "\n":
	        return "\\n";
	      case "\r":
	        return "\\r";
	      case "\t":
	        return "\\t";
	      case "\v":
	        return "\\v";
	    }
	    var k = i + 1;
	    var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
	    return "\\" + c.charCodeAt(0).toString(10) + empty;
	  }) + "\"";
	};

	exports.showArrayImpl = function (f) {
	  return function (xs) {
	    var ss = [];
	    for (var i = 0, l = xs.length; i < l; i++) {
	      ss[i] = f(xs[i]);
	    }
	    return "[" + ss.join(",") + "]";
	  };
	};

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(13);
	var Data_Unit = __webpack_require__(8);
	var Data_Void = __webpack_require__(14);
	var Semigroup = function (append) {
	    this.append = append;
	};
	var semigroupVoid = new Semigroup(function (v) {
	    return Data_Void.absurd;
	});
	var semigroupUnit = new Semigroup(function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	});
	var semigroupString = new Semigroup($foreign.concatString);
	var semigroupArray = new Semigroup($foreign.concatArray);
	var append = function (dict) {
	    return dict.append;
	};
	var semigroupFn = function (dictSemigroup) {
	    return new Semigroup(function (f) {
	        return function (g) {
	            return function (x) {
	                return append(dictSemigroup)(f(x))(g(x));
	            };
	        };
	    });
	};
	module.exports = {
	    Semigroup: Semigroup, 
	    append: append, 
	    semigroupString: semigroupString, 
	    semigroupUnit: semigroupUnit, 
	    semigroupVoid: semigroupVoid, 
	    semigroupFn: semigroupFn, 
	    semigroupArray: semigroupArray
	};


/***/ },
/* 13 */
/***/ function(module, exports) {

	"use strict";

	exports.concatString = function (s1) {
	  return function (s2) {
	    return s1 + s2;
	  };
	};

	exports.concatArray = function (xs) {
	  return function (ys) {
	    if (xs.length === 0) return ys;
	    if (ys.length === 0) return xs;
	    return xs.concat(ys);
	  };
	};

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Data_Show = __webpack_require__(10);
	var Void = function (x) {
	    return x;
	};
	var absurd = function (a) {
	    var spin = function (__copy_v) {
	        var v = __copy_v;
	        tco: while (true) {
	            var __tco_v = v;
	            v = __tco_v;
	            continue tco;
	        };
	    };
	    return spin(a);
	};
	var showVoid = new Data_Show.Show(absurd);
	module.exports = {
	    absurd: absurd, 
	    showVoid: showVoid
	};


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Alt = __webpack_require__(2);
	var Control_Extend = __webpack_require__(45);
	var Data_Bifoldable = __webpack_require__(46);
	var Data_Bifunctor = __webpack_require__(55);
	var Data_Bitraversable = __webpack_require__(56);
	var Data_Foldable = __webpack_require__(57);
	var Data_Functor_Invariant = __webpack_require__(50);
	var Data_Monoid = __webpack_require__(47);
	var Data_Traversable = __webpack_require__(67);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(17);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Data_Show = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Eq = __webpack_require__(31);
	var Data_Ord = __webpack_require__(29);
	var Data_Ordering = __webpack_require__(35);
	var Data_Bounded = __webpack_require__(27);
	var Data_Semiring = __webpack_require__(38);
	var Data_Function = __webpack_require__(5);
	var Left = (function () {
	    function Left(value0) {
	        this.value0 = value0;
	    };
	    Left.create = function (value0) {
	        return new Left(value0);
	    };
	    return Left;
	})();
	var Right = (function () {
	    function Right(value0) {
	        this.value0 = value0;
	    };
	    Right.create = function (value0) {
	        return new Right(value0);
	    };
	    return Right;
	})();
	var showEither = function (dictShow) {
	    return function (dictShow1) {
	        return new Data_Show.Show(function (v) {
	            if (v instanceof Left) {
	                return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
	            };
	            if (v instanceof Right) {
	                return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
	            };
	            throw new Error("Failed pattern match at Data.Either line 159, column 3 - line 160, column 3: " + [ v.constructor.name ]);
	        });
	    };
	};
	var functorEither = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        if (v1 instanceof Left) {
	            return new Left(v1.value0);
	        };
	        if (v1 instanceof Right) {
	            return new Right(v(v1.value0));
	        };
	        throw new Error("Failed pattern match at Data.Either line 35, column 3 - line 35, column 26: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var invariantEither = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorEither));
	var fromRight = function (dictPartial) {
	    return function (v) {
	        var __unused = function (dictPartial1) {
	            return function ($dollar60) {
	                return $dollar60;
	            };
	        };
	        return __unused(dictPartial)((function () {
	            if (v instanceof Right) {
	                return v.value0;
	            };
	            throw new Error("Failed pattern match at Data.Either line 243, column 1 - line 243, column 23: " + [ v.constructor.name ]);
	        })());
	    };
	};
	var fromLeft = function (dictPartial) {
	    return function (v) {
	        var __unused = function (dictPartial1) {
	            return function ($dollar64) {
	                return $dollar64;
	            };
	        };
	        return __unused(dictPartial)((function () {
	            if (v instanceof Left) {
	                return v.value0;
	            };
	            throw new Error("Failed pattern match at Data.Either line 238, column 1 - line 238, column 22: " + [ v.constructor.name ]);
	        })());
	    };
	};
	var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            if (v instanceof Left) {
	                return Data_Monoid.mempty(dictMonoid);
	            };
	            if (v instanceof Right) {
	                return f(v.value0);
	            };
	            throw new Error("Failed pattern match at Data.Either line 183, column 3 - line 183, column 31: " + [ f.constructor.name, v.constructor.name ]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Left) {
	                return z;
	            };
	            if (v1 instanceof Right) {
	                return v(z)(v1.value0);
	            };
	            throw new Error("Failed pattern match at Data.Either line 181, column 3 - line 181, column 26: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Left) {
	                return z;
	            };
	            if (v1 instanceof Right) {
	                return v(v1.value0)(z);
	            };
	            throw new Error("Failed pattern match at Data.Either line 179, column 3 - line 179, column 26: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
	        };
	    };
	});
	var traversableEither = new Data_Traversable.Traversable(function () {
	    return foldableEither;
	}, function () {
	    return functorEither;
	}, function (dictApplicative) {
	    return function (v) {
	        if (v instanceof Left) {
	            return Control_Applicative.pure(dictApplicative)(new Left(v.value0));
	        };
	        if (v instanceof Right) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Right.create)(v.value0);
	        };
	        throw new Error("Failed pattern match at Data.Either line 197, column 3 - line 197, column 36: " + [ v.constructor.name ]);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Left) {
	                return Control_Applicative.pure(dictApplicative)(new Left(v1.value0));
	            };
	            if (v1 instanceof Right) {
	                return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Right.create)(v(v1.value0));
	            };
	            throw new Error("Failed pattern match at Data.Either line 195, column 3 - line 195, column 39: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	});
	var extendEither = new Control_Extend.Extend(function () {
	    return functorEither;
	}, function (v) {
	    return function (v1) {
	        if (v1 instanceof Left) {
	            return new Left(v1.value0);
	        };
	        return new Right(v(v1));
	    };
	});
	var eqEither = function (dictEq) {
	    return function (dictEq1) {
	        return new Data_Eq.Eq(function (x) {
	            return function (y) {
	                if (x instanceof Left && y instanceof Left) {
	                    return Data_Eq.eq(dictEq)(x.value0)(y.value0);
	                };
	                if (x instanceof Right && y instanceof Right) {
	                    return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
	                };
	                return false;
	            };
	        });
	    };
	};
	var ordEither = function (dictOrd) {
	    return function (dictOrd1) {
	        return new Data_Ord.Ord(function () {
	            return eqEither(dictOrd["__superclass_Data.Eq.Eq_0"]())(dictOrd1["__superclass_Data.Eq.Eq_0"]());
	        }, function (x) {
	            return function (y) {
	                if (x instanceof Left && y instanceof Left) {
	                    return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
	                };
	                if (x instanceof Left) {
	                    return Data_Ordering.LT.value;
	                };
	                if (y instanceof Left) {
	                    return Data_Ordering.GT.value;
	                };
	                if (x instanceof Right && y instanceof Right) {
	                    return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
	                };
	                throw new Error("Failed pattern match at Data.Either line 172, column 1 - line 172, column 64: " + [ x.constructor.name, y.constructor.name ]);
	            };
	        });
	    };
	};
	var either = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Left) {
	                return v(v2.value0);
	            };
	            if (v2 instanceof Right) {
	                return v1(v2.value0);
	            };
	            throw new Error("Failed pattern match at Data.Either line 224, column 1 - line 224, column 26: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	};
	var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
	var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
	var boundedEither = function (dictBounded) {
	    return function (dictBounded1) {
	        return new Data_Bounded.Bounded(function () {
	            return ordEither(dictBounded["__superclass_Data.Ord.Ord_0"]())(dictBounded1["__superclass_Data.Ord.Ord_0"]());
	        }, new Left(Data_Bounded.bottom(dictBounded)), new Right(Data_Bounded.top(dictBounded1)));
	    };
	};
	var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Left) {
	                return new Left(v(v2.value0));
	            };
	            if (v2 instanceof Right) {
	                return new Right(v1(v2.value0));
	            };
	            throw new Error("Failed pattern match at Data.Either line 42, column 3 - line 42, column 34: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	});
	var bifoldableEither = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
	    return function (v) {
	        return function (v1) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return v(v2.value0);
	                };
	                if (v2 instanceof Right) {
	                    return v1(v2.value0);
	                };
	                throw new Error("Failed pattern match at Data.Either line 191, column 3 - line 191, column 31: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	            };
	        };
	    };
	}, function (v) {
	    return function (v1) {
	        return function (z) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return v(z)(v2.value0);
	                };
	                if (v2 instanceof Right) {
	                    return v1(z)(v2.value0);
	                };
	                throw new Error("Failed pattern match at Data.Either line 189, column 3 - line 189, column 33: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
	            };
	        };
	    };
	}, function (v) {
	    return function (v1) {
	        return function (z) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return v(v2.value0)(z);
	                };
	                if (v2 instanceof Right) {
	                    return v1(v2.value0)(z);
	                };
	                throw new Error("Failed pattern match at Data.Either line 187, column 3 - line 187, column 33: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
	            };
	        };
	    };
	});
	var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
	    return bifoldableEither;
	}, function () {
	    return bifunctorEither;
	}, function (dictApplicative) {
	    return function (v) {
	        if (v instanceof Left) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Left.create)(v.value0);
	        };
	        if (v instanceof Right) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Right.create)(v.value0);
	        };
	        throw new Error("Failed pattern match at Data.Either line 203, column 3 - line 203, column 35: " + [ v.constructor.name ]);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Left.create)(v(v2.value0));
	                };
	                if (v2 instanceof Right) {
	                    return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Right.create)(v1(v2.value0));
	                };
	                throw new Error("Failed pattern match at Data.Either line 201, column 3 - line 201, column 41: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	            };
	        };
	    };
	});
	var applyEither = new Control_Apply.Apply(function () {
	    return functorEither;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Left) {
	            return new Left(v.value0);
	        };
	        if (v instanceof Right) {
	            return Data_Functor.map(functorEither)(v.value0)(v1);
	        };
	        throw new Error("Failed pattern match at Data.Either line 78, column 3 - line 78, column 28: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var bindEither = new Control_Bind.Bind(function () {
	    return applyEither;
	}, either(function (e) {
	    return function (v) {
	        return new Left(e);
	    };
	})(function (a) {
	    return function (f) {
	        return f(a);
	    };
	}));
	var semigroupEither = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (x) {
	        return function (y) {
	            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
	        };
	    });
	};
	var semiringEither = function (dictSemiring) {
	    return new Data_Semiring.Semiring(function (x) {
	        return function (y) {
	            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.add(dictSemiring))(x))(y);
	        };
	    }, function (x) {
	        return function (y) {
	            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.mul(dictSemiring))(x))(y);
	        };
	    }, new Right(Data_Semiring.one(dictSemiring)), new Right(Data_Semiring.zero(dictSemiring)));
	};
	var applicativeEither = new Control_Applicative.Applicative(function () {
	    return applyEither;
	}, Right.create);
	var monadEither = new Control_Monad.Monad(function () {
	    return applicativeEither;
	}, function () {
	    return bindEither;
	});
	var altEither = new Control_Alt.Alt(function () {
	    return functorEither;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Left) {
	            return v1;
	        };
	        return v;
	    };
	});
	module.exports = {
	    Left: Left, 
	    Right: Right, 
	    either: either, 
	    fromLeft: fromLeft, 
	    fromRight: fromRight, 
	    isLeft: isLeft, 
	    isRight: isRight, 
	    functorEither: functorEither, 
	    invariantEither: invariantEither, 
	    bifunctorEither: bifunctorEither, 
	    applyEither: applyEither, 
	    applicativeEither: applicativeEither, 
	    altEither: altEither, 
	    bindEither: bindEither, 
	    monadEither: monadEither, 
	    extendEither: extendEither, 
	    showEither: showEither, 
	    eqEither: eqEither, 
	    ordEither: ordEither, 
	    boundedEither: boundedEither, 
	    foldableEither: foldableEither, 
	    bifoldableEither: bifoldableEither, 
	    traversableEither: traversableEither, 
	    bitraversableEither: bitraversableEither, 
	    semiringEither: semiringEither, 
	    semigroupEither: semigroupEither
	};


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Control_Applicative = __webpack_require__(17);
	var Control_Apply = __webpack_require__(18);
	var Control_Bind = __webpack_require__(20);
	var Control_Category = __webpack_require__(6);
	var Control_Monad = __webpack_require__(22);
	var Control_Semigroupoid = __webpack_require__(7);
	var Data_Boolean = __webpack_require__(23);
	var Data_BooleanAlgebra = __webpack_require__(24);
	var Data_Bounded = __webpack_require__(27);
	var Data_CommutativeRing = __webpack_require__(40);
	var Data_Eq = __webpack_require__(31);
	var Data_EuclideanRing = __webpack_require__(41);
	var Data_Field = __webpack_require__(43);
	var Data_Function = __webpack_require__(5);
	var Data_Functor = __webpack_require__(3);
	var Data_HeytingAlgebra = __webpack_require__(25);
	var Data_NaturalTransformation = __webpack_require__(44);
	var Data_Ord = __webpack_require__(29);
	var Data_Ordering = __webpack_require__(35);
	var Data_Ring = __webpack_require__(36);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Semiring = __webpack_require__(38);
	var Data_Show = __webpack_require__(10);
	var Data_Unit = __webpack_require__(8);
	var Data_Void = __webpack_require__(14);
	module.exports = {};


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Control_Apply = __webpack_require__(18);
	var Data_Functor = __webpack_require__(3);
	var Data_Unit = __webpack_require__(8);
	var Applicative = function (__superclass_Control$dotApply$dotApply_0, pure) {
	    this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
	    this.pure = pure;
	};
	var pure = function (dict) {
	    return dict.pure;
	};
	var unless = function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (!v) {
	                return v1;
	            };
	            if (v) {
	                return pure(dictApplicative)(Data_Unit.unit);
	            };
	            throw new Error("Failed pattern match at Control.Applicative line 63, column 1 - line 63, column 19: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var when = function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (v) {
	                return v1;
	            };
	            if (!v) {
	                return pure(dictApplicative)(Data_Unit.unit);
	            };
	            throw new Error("Failed pattern match at Control.Applicative line 58, column 1 - line 58, column 16: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var liftA1 = function (dictApplicative) {
	    return function (f) {
	        return function (a) {
	            return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(pure(dictApplicative)(f))(a);
	        };
	    };
	};
	var applicativeFn = new Applicative(function () {
	    return Control_Apply.applyFn;
	}, function (x) {
	    return function (v) {
	        return x;
	    };
	});
	var applicativeArray = new Applicative(function () {
	    return Control_Apply.applyArray;
	}, function (x) {
	    return [ x ];
	});
	module.exports = {
	    Applicative: Applicative, 
	    liftA1: liftA1, 
	    pure: pure, 
	    unless: unless, 
	    when: when, 
	    applicativeFn: applicativeFn, 
	    applicativeArray: applicativeArray
	};


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(19);
	var Data_Functor = __webpack_require__(3);
	var Data_Function = __webpack_require__(5);
	var Control_Category = __webpack_require__(6);
	var Apply = function (__superclass_Data$dotFunctor$dotFunctor_0, apply) {
	    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
	    this.apply = apply;
	};
	var applyFn = new Apply(function () {
	    return Data_Functor.functorFn;
	}, function (f) {
	    return function (g) {
	        return function (x) {
	            return f(x)(g(x));
	        };
	    };
	});
	var applyArray = new Apply(function () {
	    return Data_Functor.functorArray;
	}, $foreign.arrayApply);
	var apply = function (dict) {
	    return dict.apply;
	};
	var applyFirst = function (dictApply) {
	    return function (a) {
	        return function (b) {
	            return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"])(a))(b);
	        };
	    };
	};
	var applySecond = function (dictApply) {
	    return function (a) {
	        return function (b) {
	            return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
	        };
	    };
	};
	var lift2 = function (dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b);
	            };
	        };
	    };
	};
	var lift3 = function (dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b))(c);
	                };
	            };
	        };
	    };
	};
	var lift4 = function (dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return function (d) {
	                        return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b))(c))(d);
	                    };
	                };
	            };
	        };
	    };
	};
	var lift5 = function (dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return function (d) {
	                        return function (e) {
	                            return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b))(c))(d))(e);
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Apply: Apply, 
	    apply: apply, 
	    applyFirst: applyFirst, 
	    applySecond: applySecond, 
	    lift2: lift2, 
	    lift3: lift3, 
	    lift4: lift4, 
	    lift5: lift5, 
	    applyFn: applyFn, 
	    applyArray: applyArray
	};


/***/ },
/* 19 */
/***/ function(module, exports) {

	"use strict";

	exports.arrayApply = function (fs) {
	  return function (xs) {
	    var result = [];
	    var n = 0;
	    for (var i = 0, l = fs.length; i < l; i++) {
	      for (var j = 0, k = xs.length; j < k; j++) {
	        result[n++] = fs[i](xs[j]);
	      }
	    }
	    return result;
	  };
	};

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(21);
	var Control_Applicative = __webpack_require__(17);
	var Control_Apply = __webpack_require__(18);
	var Control_Category = __webpack_require__(6);
	var Data_Function = __webpack_require__(5);
	var Data_Functor = __webpack_require__(3);
	var Bind = function (__superclass_Control$dotApply$dotApply_0, bind) {
	    this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
	    this.bind = bind;
	};
	var bindFn = new Bind(function () {
	    return Control_Apply.applyFn;
	}, function (m) {
	    return function (f) {
	        return function (x) {
	            return f(m(x))(x);
	        };
	    };
	});
	var bindArray = new Bind(function () {
	    return Control_Apply.applyArray;
	}, $foreign.arrayBind);
	var bind = function (dict) {
	    return dict.bind;
	};
	var bindFlipped = function (dictBind) {
	    return Data_Function.flip(bind(dictBind));
	};
	var composeKleisliFlipped = function (dictBind) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return bindFlipped(dictBind)(f)(g(a));
	            };
	        };
	    };
	};
	var composeKleisli = function (dictBind) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return bind(dictBind)(f(a))(g);
	            };
	        };
	    };
	};
	var ifM = function (dictBind) {
	    return function (cond) {
	        return function (t) {
	            return function (f) {
	                return bind(dictBind)(cond)(function (cond$prime) {
	                    if (cond$prime) {
	                        return t;
	                    };
	                    if (!cond$prime) {
	                        return f;
	                    };
	                    throw new Error("Failed pattern match at Control.Bind line 103, column 35 - line 103, column 56: " + [ cond$prime.constructor.name ]);
	                });
	            };
	        };
	    };
	};
	var join = function (dictBind) {
	    return function (m) {
	        return bind(dictBind)(m)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	module.exports = {
	    Bind: Bind, 
	    bind: bind, 
	    bindFlipped: bindFlipped, 
	    composeKleisli: composeKleisli, 
	    composeKleisliFlipped: composeKleisliFlipped, 
	    ifM: ifM, 
	    join: join, 
	    bindFn: bindFn, 
	    bindArray: bindArray
	};


/***/ },
/* 21 */
/***/ function(module, exports) {

	"use strict";

	exports.arrayBind = function (arr) {
	  return function (f) {
	    var result = [];
	    for (var i = 0, l = arr.length; i < l; i++) {
	      Array.prototype.push.apply(result, f(arr[i]));
	    }
	    return result;
	  };
	};

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Control_Applicative = __webpack_require__(17);
	var Control_Apply = __webpack_require__(18);
	var Control_Bind = __webpack_require__(20);
	var Data_Functor = __webpack_require__(3);
	var Data_Unit = __webpack_require__(8);
	var Monad = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotBind$dotBind_1) {
	    this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
	    this["__superclass_Control.Bind.Bind_1"] = __superclass_Control$dotBind$dotBind_1;
	};
	var whenM = function (dictMonad) {
	    return function (mb) {
	        return function (m) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(mb)(function (v) {
	                return Control_Applicative.when(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v)(m);
	            });
	        };
	    };
	};
	var unlessM = function (dictMonad) {
	    return function (mb) {
	        return function (m) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(mb)(function (v) {
	                return Control_Applicative.unless(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v)(m);
	            });
	        };
	    };
	};
	var monadFn = new Monad(function () {
	    return Control_Applicative.applicativeFn;
	}, function () {
	    return Control_Bind.bindFn;
	});
	var monadArray = new Monad(function () {
	    return Control_Applicative.applicativeArray;
	}, function () {
	    return Control_Bind.bindArray;
	});
	var liftM1 = function (dictMonad) {
	    return function (f) {
	        return function (a) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(f(v));
	            });
	        };
	    };
	};
	var ap = function (dictMonad) {
	    return function (f) {
	        return function (a) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f)(function (v) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v1) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v(v1));
	                });
	            });
	        };
	    };
	};
	module.exports = {
	    Monad: Monad, 
	    ap: ap, 
	    liftM1: liftM1, 
	    unlessM: unlessM, 
	    whenM: whenM, 
	    monadFn: monadFn, 
	    monadArray: monadArray
	};


/***/ },
/* 23 */
/***/ function(module, exports) {

	// Generated by psc version 0.10.2
	"use strict";
	var otherwise = true;
	module.exports = {
	    otherwise: otherwise
	};


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Data_HeytingAlgebra = __webpack_require__(25);
	var Data_Unit = __webpack_require__(8);
	var BooleanAlgebra = function (__superclass_Data$dotHeytingAlgebra$dotHeytingAlgebra_0) {
	    this["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"] = __superclass_Data$dotHeytingAlgebra$dotHeytingAlgebra_0;
	};
	var booleanAlgebraUnit = new BooleanAlgebra(function () {
	    return Data_HeytingAlgebra.heytingAlgebraUnit;
	});
	var booleanAlgebraBoolean = new BooleanAlgebra(function () {
	    return Data_HeytingAlgebra.heytingAlgebraBoolean;
	});
	module.exports = {
	    BooleanAlgebra: BooleanAlgebra, 
	    booleanAlgebraBoolean: booleanAlgebraBoolean, 
	    booleanAlgebraUnit: booleanAlgebraUnit
	};


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(26);
	var Data_Unit = __webpack_require__(8);
	var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
	    this.conj = conj;
	    this.disj = disj;
	    this.ff = ff;
	    this.implies = implies;
	    this.not = not;
	    this.tt = tt;
	};
	var tt = function (dict) {
	    return dict.tt;
	};
	var not = function (dict) {
	    return dict.not;
	};
	var implies = function (dict) {
	    return dict.implies;
	};
	var heytingAlgebraUnit = new HeytingAlgebra(function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, Data_Unit.unit, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, function (v) {
	    return Data_Unit.unit;
	}, Data_Unit.unit);
	var ff = function (dict) {
	    return dict.ff;
	};
	var disj = function (dict) {
	    return dict.disj;
	};
	var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
	    return function (b) {
	        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
	    };
	}, $foreign.boolNot, true);
	var conj = function (dict) {
	    return dict.conj;
	};
	var heytingAlgebraFunction = function (dictHeytingAlgebra) {
	    return new HeytingAlgebra(function (f) {
	        return function (g) {
	            return function (a) {
	                return conj(dictHeytingAlgebra)(f(a))(g(a));
	            };
	        };
	    }, function (f) {
	        return function (g) {
	            return function (a) {
	                return disj(dictHeytingAlgebra)(f(a))(g(a));
	            };
	        };
	    }, function (v) {
	        return ff(dictHeytingAlgebra);
	    }, function (f) {
	        return function (g) {
	            return function (a) {
	                return implies(dictHeytingAlgebra)(f(a))(g(a));
	            };
	        };
	    }, function (f) {
	        return function (a) {
	            return not(dictHeytingAlgebra)(f(a));
	        };
	    }, function (v) {
	        return tt(dictHeytingAlgebra);
	    });
	};
	module.exports = {
	    HeytingAlgebra: HeytingAlgebra, 
	    conj: conj, 
	    disj: disj, 
	    ff: ff, 
	    implies: implies, 
	    not: not, 
	    tt: tt, 
	    heytingAlgebraBoolean: heytingAlgebraBoolean, 
	    heytingAlgebraUnit: heytingAlgebraUnit, 
	    heytingAlgebraFunction: heytingAlgebraFunction
	};


/***/ },
/* 26 */
/***/ function(module, exports) {

	"use strict";

	exports.boolConj = function (b1) {
	  return function (b2) {
	    return b1 && b2;
	  };
	};

	exports.boolDisj = function (b1) {
	  return function (b2) {
	    return b1 || b2;
	  };
	};

	exports.boolNot = function (b) {
	  return !b;
	};

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(28);
	var Data_Ord = __webpack_require__(29);
	var Data_Unit = __webpack_require__(8);
	var Data_Ordering = __webpack_require__(35);
	var Bounded = function (__superclass_Data$dotOrd$dotOrd_0, bottom, top) {
	    this["__superclass_Data.Ord.Ord_0"] = __superclass_Data$dotOrd$dotOrd_0;
	    this.bottom = bottom;
	    this.top = top;
	};
	var top = function (dict) {
	    return dict.top;
	};
	var boundedUnit = new Bounded(function () {
	    return Data_Ord.ordUnit;
	}, Data_Unit.unit, Data_Unit.unit);
	var boundedOrdering = new Bounded(function () {
	    return Data_Ord.ordOrdering;
	}, Data_Ordering.LT.value, Data_Ordering.GT.value);
	var boundedInt = new Bounded(function () {
	    return Data_Ord.ordInt;
	}, $foreign.bottomInt, $foreign.topInt);
	var boundedChar = new Bounded(function () {
	    return Data_Ord.ordChar;
	}, $foreign.bottomChar, $foreign.topChar);
	var boundedBoolean = new Bounded(function () {
	    return Data_Ord.ordBoolean;
	}, false, true);
	var bottom = function (dict) {
	    return dict.bottom;
	};
	module.exports = {
	    Bounded: Bounded, 
	    bottom: bottom, 
	    top: top, 
	    boundedBoolean: boundedBoolean, 
	    boundedInt: boundedInt, 
	    boundedChar: boundedChar, 
	    boundedOrdering: boundedOrdering, 
	    boundedUnit: boundedUnit
	};


/***/ },
/* 28 */
/***/ function(module, exports) {

	"use strict";

	exports.topInt = 2147483647;
	exports.bottomInt = -2147483648;

	exports.topChar = String.fromCharCode(65535);
	exports.bottomChar = String.fromCharCode(0);

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(30);
	var Data_Eq = __webpack_require__(31);
	var Data_Function = __webpack_require__(5);
	var Data_Ord_Unsafe = __webpack_require__(33);
	var Data_Ordering = __webpack_require__(35);
	var Data_Ring = __webpack_require__(36);
	var Data_Unit = __webpack_require__(8);
	var Data_Void = __webpack_require__(14);
	var Data_Semiring = __webpack_require__(38);
	var Ord = function (__superclass_Data$dotEq$dotEq_0, compare) {
	    this["__superclass_Data.Eq.Eq_0"] = __superclass_Data$dotEq$dotEq_0;
	    this.compare = compare;
	};
	var ordVoid = new Ord(function () {
	    return Data_Eq.eqVoid;
	}, function (v) {
	    return function (v1) {
	        return Data_Ordering.EQ.value;
	    };
	});
	var ordUnit = new Ord(function () {
	    return Data_Eq.eqUnit;
	}, function (v) {
	    return function (v1) {
	        return Data_Ordering.EQ.value;
	    };
	});
	var ordString = new Ord(function () {
	    return Data_Eq.eqString;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordOrdering = new Ord(function () {
	    return Data_Ordering.eqOrdering;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {
	            return Data_Ordering.EQ.value;
	        };
	        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {
	            return Data_Ordering.EQ.value;
	        };
	        if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {
	            return Data_Ordering.EQ.value;
	        };
	        if (v instanceof Data_Ordering.LT) {
	            return Data_Ordering.LT.value;
	        };
	        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {
	            return Data_Ordering.LT.value;
	        };
	        if (v instanceof Data_Ordering.GT) {
	            return Data_Ordering.GT.value;
	        };
	        throw new Error("Failed pattern match at Data.Ord line 68, column 3 - line 68, column 21: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var ordNumber = new Ord(function () {
	    return Data_Eq.eqNumber;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordInt = new Ord(function () {
	    return Data_Eq.eqInt;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordChar = new Ord(function () {
	    return Data_Eq.eqChar;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordBoolean = new Ord(function () {
	    return Data_Eq.eqBoolean;
	}, Data_Ord_Unsafe.unsafeCompare);
	var compare = function (dict) {
	    return dict.compare;
	};
	var comparing = function (dictOrd) {
	    return function (f) {
	        return Data_Function.on(compare(dictOrd))(f);
	    };
	};
	var greaterThan = function (dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var $22 = compare(dictOrd)(a1)(a2);
	            if ($22 instanceof Data_Ordering.GT) {
	                return true;
	            };
	            return false;
	        };
	    };
	};
	var greaterThanOrEq = function (dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var $23 = compare(dictOrd)(a1)(a2);
	            if ($23 instanceof Data_Ordering.LT) {
	                return false;
	            };
	            return true;
	        };
	    };
	};
	var signum = function (dictOrd) {
	    return function (dictRing) {
	        return function (x) {
	            var $24 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
	            if ($24) {
	                return Data_Semiring.one(dictRing["__superclass_Data.Semiring.Semiring_0"]());
	            };
	            if (!$24) {
	                return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
	            };
	            throw new Error("Failed pattern match at Data.Ord line 163, column 12 - line 163, column 46: " + [ $24.constructor.name ]);
	        };
	    };
	};
	var lessThan = function (dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var $25 = compare(dictOrd)(a1)(a2);
	            if ($25 instanceof Data_Ordering.LT) {
	                return true;
	            };
	            return false;
	        };
	    };
	};
	var lessThanOrEq = function (dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var $26 = compare(dictOrd)(a1)(a2);
	            if ($26 instanceof Data_Ordering.GT) {
	                return false;
	            };
	            return true;
	        };
	    };
	};
	var max = function (dictOrd) {
	    return function (x) {
	        return function (y) {
	            var $27 = compare(dictOrd)(x)(y);
	            if ($27 instanceof Data_Ordering.LT) {
	                return y;
	            };
	            if ($27 instanceof Data_Ordering.EQ) {
	                return x;
	            };
	            if ($27 instanceof Data_Ordering.GT) {
	                return x;
	            };
	            throw new Error("Failed pattern match at Data.Ord line 122, column 3 - line 125, column 12: " + [ $27.constructor.name ]);
	        };
	    };
	};
	var min = function (dictOrd) {
	    return function (x) {
	        return function (y) {
	            var $28 = compare(dictOrd)(x)(y);
	            if ($28 instanceof Data_Ordering.LT) {
	                return x;
	            };
	            if ($28 instanceof Data_Ordering.EQ) {
	                return x;
	            };
	            if ($28 instanceof Data_Ordering.GT) {
	                return y;
	            };
	            throw new Error("Failed pattern match at Data.Ord line 113, column 3 - line 116, column 12: " + [ $28.constructor.name ]);
	        };
	    };
	};
	var ordArray = function (dictOrd) {
	    return new Ord(function () {
	        return Data_Eq.eqArray(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, (function () {
	        var toDelta = function (x) {
	            return function (y) {
	                var $29 = compare(dictOrd)(x)(y);
	                if ($29 instanceof Data_Ordering.EQ) {
	                    return 0;
	                };
	                if ($29 instanceof Data_Ordering.LT) {
	                    return 1;
	                };
	                if ($29 instanceof Data_Ordering.GT) {
	                    return -1;
	                };
	                throw new Error("Failed pattern match at Data.Ord line 60, column 7 - line 65, column 1: " + [ $29.constructor.name ]);
	            };
	        };
	        return function (xs) {
	            return function (ys) {
	                return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
	            };
	        };
	    })());
	};
	var clamp = function (dictOrd) {
	    return function (low) {
	        return function (hi) {
	            return function (x) {
	                return min(dictOrd)(hi)(max(dictOrd)(low)(x));
	            };
	        };
	    };
	};
	var between = function (dictOrd) {
	    return function (low) {
	        return function (hi) {
	            return function (x) {
	                if (lessThan(dictOrd)(x)(low)) {
	                    return false;
	                };
	                if (greaterThan(dictOrd)(x)(hi)) {
	                    return false;
	                };
	                if (true) {
	                    return true;
	                };
	                throw new Error("Failed pattern match at Data.Ord line 150, column 1 - line 153, column 16: " + [ low.constructor.name, hi.constructor.name, x.constructor.name ]);
	            };
	        };
	    };
	};
	var abs = function (dictOrd) {
	    return function (dictRing) {
	        return function (x) {
	            var $33 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
	            if ($33) {
	                return x;
	            };
	            if (!$33) {
	                return Data_Ring.negate(dictRing)(x);
	            };
	            throw new Error("Failed pattern match at Data.Ord line 158, column 9 - line 158, column 42: " + [ $33.constructor.name ]);
	        };
	    };
	};
	module.exports = {
	    Ord: Ord, 
	    abs: abs, 
	    between: between, 
	    clamp: clamp, 
	    compare: compare, 
	    comparing: comparing, 
	    greaterThan: greaterThan, 
	    greaterThanOrEq: greaterThanOrEq, 
	    lessThan: lessThan, 
	    lessThanOrEq: lessThanOrEq, 
	    max: max, 
	    min: min, 
	    signum: signum, 
	    ordBoolean: ordBoolean, 
	    ordInt: ordInt, 
	    ordNumber: ordNumber, 
	    ordString: ordString, 
	    ordChar: ordChar, 
	    ordUnit: ordUnit, 
	    ordVoid: ordVoid, 
	    ordArray: ordArray, 
	    ordOrdering: ordOrdering
	};


/***/ },
/* 30 */
/***/ function(module, exports) {

	"use strict";

	exports.ordArrayImpl = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var i = 0;
	      var xlen = xs.length;
	      var ylen = ys.length;
	      while (i < xlen && i < ylen) {
	        var x = xs[i];
	        var y = ys[i];
	        var o = f(x)(y);
	        if (o !== 0) {
	          return o;
	        }
	        i++;
	      }
	      if (xlen === ylen) {
	        return 0;
	      } else if (xlen > ylen) {
	        return -1;
	      } else {
	        return 1;
	      }
	    };
	  };
	};

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(32);
	var Data_Unit = __webpack_require__(8);
	var Data_Void = __webpack_require__(14);
	var Eq = function (eq) {
	    this.eq = eq;
	};
	var eqVoid = new Eq(function (v) {
	    return function (v1) {
	        return true;
	    };
	});
	var eqUnit = new Eq(function (v) {
	    return function (v1) {
	        return true;
	    };
	});
	var eqString = new Eq($foreign.refEq);
	var eqNumber = new Eq($foreign.refEq);
	var eqInt = new Eq($foreign.refEq);
	var eqChar = new Eq($foreign.refEq);
	var eqBoolean = new Eq($foreign.refEq);
	var eq = function (dict) {
	    return dict.eq;
	};
	var eqArray = function (dictEq) {
	    return new Eq($foreign.eqArrayImpl(eq(dictEq)));
	};
	var notEq = function (dictEq) {
	    return function (x) {
	        return function (y) {
	            return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
	        };
	    };
	};
	module.exports = {
	    Eq: Eq, 
	    eq: eq, 
	    notEq: notEq, 
	    eqBoolean: eqBoolean, 
	    eqInt: eqInt, 
	    eqNumber: eqNumber, 
	    eqChar: eqChar, 
	    eqString: eqString, 
	    eqUnit: eqUnit, 
	    eqVoid: eqVoid, 
	    eqArray: eqArray
	};


/***/ },
/* 32 */
/***/ function(module, exports) {

	"use strict";

	exports.refEq = function (r1) {
	  return function (r2) {
	    return r1 === r2;
	  };
	};

	exports.refIneq = function (r1) {
	  return function (r2) {
	    return r1 !== r2;
	  };
	};

	exports.eqArrayImpl = function (f) {
	  return function (xs) {
	    return function (ys) {
	      if (xs.length !== ys.length) return false;
	      for (var i = 0; i < xs.length; i++) {
	        if (!f(xs[i])(ys[i])) return false;
	      }
	      return true;
	    };
	  };
	};

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(34);
	var Data_Ordering = __webpack_require__(35);
	var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
	module.exports = {
	    unsafeCompare: unsafeCompare
	};


/***/ },
/* 34 */
/***/ function(module, exports) {

	"use strict";

	exports.unsafeCompareImpl = function (lt) {
	  return function (eq) {
	    return function (gt) {
	      return function (x) {
	        return function (y) {
	          return x < y ? lt : x === y ? eq : gt;
	        };
	      };
	    };
	  };
	};

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Data_Eq = __webpack_require__(31);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Show = __webpack_require__(10);
	var LT = (function () {
	    function LT() {

	    };
	    LT.value = new LT();
	    return LT;
	})();
	var GT = (function () {
	    function GT() {

	    };
	    GT.value = new GT();
	    return GT;
	})();
	var EQ = (function () {
	    function EQ() {

	    };
	    EQ.value = new EQ();
	    return EQ;
	})();
	var showOrdering = new Data_Show.Show(function (v) {
	    if (v instanceof LT) {
	        return "LT";
	    };
	    if (v instanceof GT) {
	        return "GT";
	    };
	    if (v instanceof EQ) {
	        return "EQ";
	    };
	    throw new Error("Failed pattern match at Data.Ordering line 27, column 3 - line 28, column 3: " + [ v.constructor.name ]);
	});
	var semigroupOrdering = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        if (v instanceof LT) {
	            return LT.value;
	        };
	        if (v instanceof GT) {
	            return GT.value;
	        };
	        if (v instanceof EQ) {
	            return v1;
	        };
	        throw new Error("Failed pattern match at Data.Ordering line 22, column 3 - line 22, column 19: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var invert = function (v) {
	    if (v instanceof GT) {
	        return LT.value;
	    };
	    if (v instanceof EQ) {
	        return EQ.value;
	    };
	    if (v instanceof LT) {
	        return GT.value;
	    };
	    throw new Error("Failed pattern match at Data.Ordering line 34, column 1 - line 34, column 15: " + [ v.constructor.name ]);
	};
	var eqOrdering = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        if (v instanceof LT && v1 instanceof LT) {
	            return true;
	        };
	        if (v instanceof GT && v1 instanceof GT) {
	            return true;
	        };
	        if (v instanceof EQ && v1 instanceof EQ) {
	            return true;
	        };
	        return false;
	    };
	});
	module.exports = {
	    LT: LT, 
	    GT: GT, 
	    EQ: EQ, 
	    invert: invert, 
	    eqOrdering: eqOrdering, 
	    semigroupOrdering: semigroupOrdering, 
	    showOrdering: showOrdering
	};


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(37);
	var Data_Semiring = __webpack_require__(38);
	var Data_Unit = __webpack_require__(8);
	var Ring = function (__superclass_Data$dotSemiring$dotSemiring_0, sub) {
	    this["__superclass_Data.Semiring.Semiring_0"] = __superclass_Data$dotSemiring$dotSemiring_0;
	    this.sub = sub;
	};
	var sub = function (dict) {
	    return dict.sub;
	};
	var ringUnit = new Ring(function () {
	    return Data_Semiring.semiringUnit;
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	});
	var ringNumber = new Ring(function () {
	    return Data_Semiring.semiringNumber;
	}, $foreign.numSub);
	var ringInt = new Ring(function () {
	    return Data_Semiring.semiringInt;
	}, $foreign.intSub);
	var negate = function (dictRing) {
	    return function (a) {
	        return sub(dictRing)(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()))(a);
	    };
	};
	module.exports = {
	    Ring: Ring, 
	    negate: negate, 
	    sub: sub, 
	    ringInt: ringInt, 
	    ringNumber: ringNumber, 
	    ringUnit: ringUnit
	};


/***/ },
/* 37 */
/***/ function(module, exports) {

	"use strict";

	exports.intSub = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x - y | 0;
	  };
	};

	exports.numSub = function (n1) {
	  return function (n2) {
	    return n1 - n2;
	  };
	};

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(39);
	var Data_Unit = __webpack_require__(8);
	var Semiring = function (add, mul, one, zero) {
	    this.add = add;
	    this.mul = mul;
	    this.one = one;
	    this.zero = zero;
	};
	var zero = function (dict) {
	    return dict.zero;
	};
	var semiringUnit = new Semiring(function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, Data_Unit.unit, Data_Unit.unit);
	var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
	var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
	var one = function (dict) {
	    return dict.one;
	};
	var mul = function (dict) {
	    return dict.mul;
	};
	var add = function (dict) {
	    return dict.add;
	};
	module.exports = {
	    Semiring: Semiring, 
	    add: add, 
	    mul: mul, 
	    one: one, 
	    zero: zero, 
	    semiringInt: semiringInt, 
	    semiringNumber: semiringNumber, 
	    semiringUnit: semiringUnit
	};


/***/ },
/* 39 */
/***/ function(module, exports) {

	"use strict";

	exports.intAdd = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x + y | 0;
	  };
	};

	exports.intMul = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x * y | 0;
	  };
	};

	exports.numAdd = function (n1) {
	  return function (n2) {
	    return n1 + n2;
	  };
	};

	exports.numMul = function (n1) {
	  return function (n2) {
	    return n1 * n2;
	  };
	};

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Data_Ring = __webpack_require__(36);
	var Data_Semiring = __webpack_require__(38);
	var Data_Unit = __webpack_require__(8);
	var CommutativeRing = function (__superclass_Data$dotRing$dotRing_0) {
	    this["__superclass_Data.Ring.Ring_0"] = __superclass_Data$dotRing$dotRing_0;
	};
	var commutativeRingUnit = new CommutativeRing(function () {
	    return Data_Ring.ringUnit;
	});
	var commutativeRingNumber = new CommutativeRing(function () {
	    return Data_Ring.ringNumber;
	});
	var commutativeRingInt = new CommutativeRing(function () {
	    return Data_Ring.ringInt;
	});
	module.exports = {
	    CommutativeRing: CommutativeRing, 
	    commutativeRingInt: commutativeRingInt, 
	    commutativeRingNumber: commutativeRingNumber, 
	    commutativeRingUnit: commutativeRingUnit
	};


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(42);
	var Data_CommutativeRing = __webpack_require__(40);
	var Data_Ring = __webpack_require__(36);
	var Data_Semiring = __webpack_require__(38);
	var Data_Unit = __webpack_require__(8);
	var EuclideanRing = function (__superclass_Data$dotCommutativeRing$dotCommutativeRing_0, degree, div, mod) {
	    this["__superclass_Data.CommutativeRing.CommutativeRing_0"] = __superclass_Data$dotCommutativeRing$dotCommutativeRing_0;
	    this.degree = degree;
	    this.div = div;
	    this.mod = mod;
	};
	var mod = function (dict) {
	    return dict.mod;
	};
	var euclideanRingUnit = new EuclideanRing(function () {
	    return Data_CommutativeRing.commutativeRingUnit;
	}, function (v) {
	    return 1;
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	});
	var euclideanRingNumber = new EuclideanRing(function () {
	    return Data_CommutativeRing.commutativeRingNumber;
	}, function (v) {
	    return 1;
	}, $foreign.numDiv, function (v) {
	    return function (v1) {
	        return 0.0;
	    };
	});
	var euclideanRingInt = new EuclideanRing(function () {
	    return Data_CommutativeRing.commutativeRingInt;
	}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
	var div = function (dict) {
	    return dict.div;
	};
	var degree = function (dict) {
	    return dict.degree;
	};
	module.exports = {
	    EuclideanRing: EuclideanRing, 
	    degree: degree, 
	    div: div, 
	    mod: mod, 
	    euclideanRingInt: euclideanRingInt, 
	    euclideanRingNumber: euclideanRingNumber, 
	    euclideanRingUnit: euclideanRingUnit
	};


/***/ },
/* 42 */
/***/ function(module, exports) {

	"use strict";

	exports.intDegree = function (x) {
	  return Math.abs(x);
	};

	exports.intDiv = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x / y | 0;
	  };
	};

	exports.intMod = function (x) {
	  return function (y) {
	    return x % y;
	  };
	};

	exports.numDiv = function (n1) {
	  return function (n2) {
	    return n1 / n2;
	  };
	};

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Data_CommutativeRing = __webpack_require__(40);
	var Data_EuclideanRing = __webpack_require__(41);
	var Data_Ring = __webpack_require__(36);
	var Data_Semiring = __webpack_require__(38);
	var Data_Unit = __webpack_require__(8);
	var Field = function (__superclass_Data$dotEuclideanRing$dotEuclideanRing_0) {
	    this["__superclass_Data.EuclideanRing.EuclideanRing_0"] = __superclass_Data$dotEuclideanRing$dotEuclideanRing_0;
	};
	var fieldUnit = new Field(function () {
	    return Data_EuclideanRing.euclideanRingUnit;
	});
	var fieldNumber = new Field(function () {
	    return Data_EuclideanRing.euclideanRingNumber;
	});
	module.exports = {
	    Field: Field, 
	    fieldNumber: fieldNumber, 
	    fieldUnit: fieldUnit
	};


/***/ },
/* 44 */
/***/ function(module, exports) {

	// Generated by psc version 0.10.2
	"use strict";
	module.exports = {};


/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Control_Category = __webpack_require__(6);
	var Data_Functor = __webpack_require__(3);
	var Data_Semigroup = __webpack_require__(12);
	var Extend = function (__superclass_Data$dotFunctor$dotFunctor_0, extend) {
	    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
	    this.extend = extend;
	};
	var extendFn = function (dictSemigroup) {
	    return new Extend(function () {
	        return Data_Functor.functorFn;
	    }, function (f) {
	        return function (g) {
	            return function (w) {
	                return f(function (w$prime) {
	                    return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));
	                });
	            };
	        };
	    });
	};
	var extend = function (dict) {
	    return dict.extend;
	};
	var extendFlipped = function (dictExtend) {
	    return function (w) {
	        return function (f) {
	            return extend(dictExtend)(f)(w);
	        };
	    };
	};
	var duplicate = function (dictExtend) {
	    return extend(dictExtend)(Control_Category.id(Control_Category.categoryFn));
	};
	var composeCoKleisliFlipped = function (dictExtend) {
	    return function (f) {
	        return function (g) {
	            return function (w) {
	                return f(extend(dictExtend)(g)(w));
	            };
	        };
	    };
	};
	var composeCoKleisli = function (dictExtend) {
	    return function (f) {
	        return function (g) {
	            return function (w) {
	                return g(extend(dictExtend)(f)(w));
	            };
	        };
	    };
	};
	module.exports = {
	    Extend: Extend, 
	    composeCoKleisli: composeCoKleisli, 
	    composeCoKleisliFlipped: composeCoKleisliFlipped, 
	    duplicate: duplicate, 
	    extend: extend, 
	    extendFlipped: extendFlipped, 
	    extendFn: extendFn
	};


/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Apply = __webpack_require__(18);
	var Data_Monoid = __webpack_require__(47);
	var Data_Monoid_Conj = __webpack_require__(48);
	var Data_Monoid_Disj = __webpack_require__(52);
	var Data_Monoid_Dual = __webpack_require__(53);
	var Data_Monoid_Endo = __webpack_require__(54);
	var Data_Newtype = __webpack_require__(51);
	var Control_Semigroupoid = __webpack_require__(7);
	var Control_Applicative = __webpack_require__(17);
	var Data_Unit = __webpack_require__(8);
	var Control_Category = __webpack_require__(6);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Function = __webpack_require__(5);
	var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
	    this.bifoldMap = bifoldMap;
	    this.bifoldl = bifoldl;
	    this.bifoldr = bifoldr;
	};
	var bifoldr = function (dict) {
	    return dict.bifoldr;
	};
	var bitraverse_ = function (dictBifoldable) {
	    return function (dictApplicative) {
	        return function (f) {
	            return function (g) {
	                return bifoldr(dictBifoldable)(function ($18) {
	                    return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(f($18));
	                })(function ($19) {
	                    return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(g($19));
	                })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
	            };
	        };
	    };
	};
	var bifor_ = function (dictBifoldable) {
	    return function (dictApplicative) {
	        return function (t) {
	            return function (f) {
	                return function (g) {
	                    return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
	                };
	            };
	        };
	    };
	};
	var bisequence_ = function (dictBifoldable) {
	    return function (dictApplicative) {
	        return bitraverse_(dictBifoldable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var bifoldl = function (dict) {
	    return dict.bifoldl;
	};
	var bifoldMapDefaultR = function (dictBifoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return function (g) {
	                return function (p) {
	                    return bifoldr(dictBifoldable)(function ($20) {
	                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f($20));
	                    })(function ($21) {
	                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(g($21));
	                    })(Data_Monoid.mempty(dictMonoid))(p);
	                };
	            };
	        };
	    };
	};
	var bifoldMapDefaultL = function (dictBifoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return function (g) {
	                return function (p) {
	                    return bifoldl(dictBifoldable)(function (m) {
	                        return function (a) {
	                            return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(m)(f(a));
	                        };
	                    })(function (m) {
	                        return function (b) {
	                            return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(m)(g(b));
	                        };
	                    })(Data_Monoid.mempty(dictMonoid))(p);
	                };
	            };
	        };
	    };
	};
	var bifoldMap = function (dict) {
	    return dict.bifoldMap;
	};
	var bifoldlDefault = function (dictBifoldable) {
	    return function (f) {
	        return function (g) {
	            return function (z) {
	                return function (p) {
	                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($22) {
	                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f)($22)));
	                    })(function ($23) {
	                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(g)($23)));
	                    })(p)))(z);
	                };
	            };
	        };
	    };
	};
	var bifoldrDefault = function (dictBifoldable) {
	    return function (f) {
	        return function (g) {
	            return function (z) {
	                return function (p) {
	                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo)(function ($24) {
	                        return Data_Monoid_Endo.Endo(f($24));
	                    })(function ($25) {
	                        return Data_Monoid_Endo.Endo(g($25));
	                    })(p))(z);
	                };
	            };
	        };
	    };
	};
	var bifold = function (dictBifoldable) {
	    return function (dictMonoid) {
	        return bifoldMap(dictBifoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var biany = function (dictBifoldable) {
	    return function (dictBooleanAlgebra) {
	        return function (p) {
	            return function (q) {
	                return function ($26) {
	                    return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]()))(function ($27) {
	                        return Data_Monoid_Disj.Disj(p($27));
	                    })(function ($28) {
	                        return Data_Monoid_Disj.Disj(q($28));
	                    })($26));
	                };
	            };
	        };
	    };
	};
	var biall = function (dictBifoldable) {
	    return function (dictBooleanAlgebra) {
	        return function (p) {
	            return function (q) {
	                return function ($29) {
	                    return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]()))(function ($30) {
	                        return Data_Monoid_Conj.Conj(p($30));
	                    })(function ($31) {
	                        return Data_Monoid_Conj.Conj(q($31));
	                    })($29));
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Bifoldable: Bifoldable, 
	    biall: biall, 
	    biany: biany, 
	    bifold: bifold, 
	    bifoldMap: bifoldMap, 
	    bifoldMapDefaultL: bifoldMapDefaultL, 
	    bifoldMapDefaultR: bifoldMapDefaultR, 
	    bifoldl: bifoldl, 
	    bifoldlDefault: bifoldlDefault, 
	    bifoldr: bifoldr, 
	    bifoldrDefault: bifoldrDefault, 
	    bifor_: bifor_, 
	    bisequence_: bisequence_, 
	    bitraverse_: bitraverse_
	};


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Unit = __webpack_require__(8);
	var Data_Function = __webpack_require__(5);
	var Data_Ord = __webpack_require__(29);
	var Data_Eq = __webpack_require__(31);
	var Data_EuclideanRing = __webpack_require__(41);
	var Data_Boolean = __webpack_require__(23);
	var Monoid = function (__superclass_Data$dotSemigroup$dotSemigroup_0, mempty) {
	    this["__superclass_Data.Semigroup.Semigroup_0"] = __superclass_Data$dotSemigroup$dotSemigroup_0;
	    this.mempty = mempty;
	};
	var monoidUnit = new Monoid(function () {
	    return Data_Semigroup.semigroupUnit;
	}, Data_Unit.unit);
	var monoidString = new Monoid(function () {
	    return Data_Semigroup.semigroupString;
	}, "");
	var monoidArray = new Monoid(function () {
	    return Data_Semigroup.semigroupArray;
	}, [  ]);
	var mempty = function (dict) {
	    return dict.mempty;
	};
	var monoidFn = function (dictMonoid) {
	    return new Monoid(function () {
	        return Data_Semigroup.semigroupFn(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Data_Function["const"](mempty(dictMonoid)));
	};
	var power = function (dictMonoid) {
	    return function (x) {
	        var go = function (p) {
	            if (p <= 0) {
	                return mempty(dictMonoid);
	            };
	            if (p === 1) {
	                return x;
	            };
	            if (p % 2 === 0) {
	                var x$prime = go(p / 2 | 0);
	                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(x$prime)(x$prime);
	            };
	            if (Data_Boolean.otherwise) {
	                var x$prime = go(p / 2 | 0);
	                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(x$prime)(Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(x$prime)(x));
	            };
	            throw new Error("Failed pattern match at Data.Monoid line 49, column 3 - line 53, column 57: " + [ p.constructor.name ]);
	        };
	        return go;
	    };
	};
	module.exports = {
	    Monoid: Monoid, 
	    mempty: mempty, 
	    power: power, 
	    monoidUnit: monoidUnit, 
	    monoidFn: monoidFn, 
	    monoidString: monoidString, 
	    monoidArray: monoidArray
	};


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Comonad = __webpack_require__(49);
	var Control_Extend = __webpack_require__(45);
	var Data_Functor_Invariant = __webpack_require__(50);
	var Data_HeytingAlgebra = __webpack_require__(25);
	var Data_Monoid = __webpack_require__(47);
	var Data_Newtype = __webpack_require__(51);
	var Data_Eq = __webpack_require__(31);
	var Data_Ord = __webpack_require__(29);
	var Data_Bounded = __webpack_require__(27);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(17);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Data_Show = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Semiring = __webpack_require__(38);
	var Conj = function (x) {
	    return x;
	};
	var showConj = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Conj " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semiringConj = function (dictHeytingAlgebra) {
	    return new Data_Semiring.Semiring(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra));
	};
	var semigroupConj = function (dictHeytingAlgebra) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    });
	};
	var ordConj = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeConj = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Conj);
	var monoidConj = function (dictHeytingAlgebra) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupConj(dictHeytingAlgebra);
	    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
	};
	var invariantConj = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorConj = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendConj = new Control_Extend.Extend(function () {
	    return functorConj;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqConj = function (dictEq) {
	    return dictEq;
	};
	var comonadConj = new Control_Comonad.Comonad(function () {
	    return extendConj;
	}, Data_Newtype.unwrap(newtypeConj));
	var boundedConj = function (dictBounded) {
	    return dictBounded;
	};
	var applyConj = new Control_Apply.Apply(function () {
	    return functorConj;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindConj = new Control_Bind.Bind(function () {
	    return applyConj;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeConj = new Control_Applicative.Applicative(function () {
	    return applyConj;
	}, Conj);
	var monadConj = new Control_Monad.Monad(function () {
	    return applicativeConj;
	}, function () {
	    return bindConj;
	});
	module.exports = {
	    Conj: Conj, 
	    newtypeConj: newtypeConj, 
	    eqConj: eqConj, 
	    ordConj: ordConj, 
	    boundedConj: boundedConj, 
	    functorConj: functorConj, 
	    invariantConj: invariantConj, 
	    applyConj: applyConj, 
	    applicativeConj: applicativeConj, 
	    bindConj: bindConj, 
	    monadConj: monadConj, 
	    extendConj: extendConj, 
	    comonadConj: comonadConj, 
	    showConj: showConj, 
	    semigroupConj: semigroupConj, 
	    monoidConj: monoidConj, 
	    semiringConj: semiringConj
	};


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Control_Extend = __webpack_require__(45);
	var Data_Functor = __webpack_require__(3);
	var Comonad = function (__superclass_Control$dotExtend$dotExtend_0, extract) {
	    this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
	    this.extract = extract;
	};
	var extract = function (dict) {
	    return dict.extract;
	};
	module.exports = {
	    Comonad: Comonad, 
	    extract: extract
	};


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Data_Functor = __webpack_require__(3);
	var Invariant = function (imap) {
	    this.imap = imap;
	};
	var imapF = function (dictFunctor) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map(dictFunctor)(f);
	        };
	    };
	};
	var invariantArray = new Invariant(imapF(Data_Functor.functorArray));
	var invariantFn = new Invariant(imapF(Data_Functor.functorFn));
	var imap = function (dict) {
	    return dict.imap;
	};
	module.exports = {
	    Invariant: Invariant, 
	    imap: imap, 
	    imapF: imapF, 
	    invariantFn: invariantFn, 
	    invariantArray: invariantArray
	};


/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Semigroupoid = __webpack_require__(7);
	var Data_Functor = __webpack_require__(3);
	var Newtype = function (unwrap, wrap) {
	    this.unwrap = unwrap;
	    this.wrap = wrap;
	};
	var wrap = function (dict) {
	    return dict.wrap;
	};
	var unwrap = function (dict) {
	    return dict.unwrap;
	};
	var underF = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (dictNewtype) {
	            return function (dictNewtype1) {
	                return function (v) {
	                    return function (f) {
	                        return function ($28) {
	                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($28)));
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	var under = function (dictNewtype) {
	    return function (dictNewtype1) {
	        return function (v) {
	            return function (f) {
	                return function ($29) {
	                    return unwrap(dictNewtype1)(f(wrap(dictNewtype)($29)));
	                };
	            };
	        };
	    };
	};
	var un = function (dictNewtype) {
	    return function (v) {
	        return unwrap(dictNewtype);
	    };
	};
	var overF = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (dictNewtype) {
	            return function (dictNewtype1) {
	                return function (v) {
	                    return function (f) {
	                        return function ($30) {
	                            return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($30)));
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	var over = function (dictNewtype) {
	    return function (dictNewtype1) {
	        return function (v) {
	            return function (f) {
	                return function ($31) {
	                    return wrap(dictNewtype1)(f(unwrap(dictNewtype)($31)));
	                };
	            };
	        };
	    };
	};
	var op = function (dictNewtype) {
	    return un(dictNewtype);
	};
	var alaF = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (dictNewtype) {
	            return function (dictNewtype1) {
	                return function (v) {
	                    return function (f) {
	                        return function ($32) {
	                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($32)));
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	var ala = function (dictFunctor) {
	    return function (dictNewtype) {
	        return function (dictNewtype1) {
	            return function (v) {
	                return function (f) {
	                    return Data_Functor.map(dictFunctor)(unwrap(dictNewtype))(f(wrap(dictNewtype1)));
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Newtype: Newtype, 
	    ala: ala, 
	    alaF: alaF, 
	    op: op, 
	    over: over, 
	    overF: overF, 
	    un: un, 
	    under: under, 
	    underF: underF, 
	    unwrap: unwrap, 
	    wrap: wrap
	};


/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Comonad = __webpack_require__(49);
	var Control_Extend = __webpack_require__(45);
	var Data_Functor_Invariant = __webpack_require__(50);
	var Data_HeytingAlgebra = __webpack_require__(25);
	var Data_Monoid = __webpack_require__(47);
	var Data_Newtype = __webpack_require__(51);
	var Data_Eq = __webpack_require__(31);
	var Data_Ord = __webpack_require__(29);
	var Data_Bounded = __webpack_require__(27);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(17);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Data_Show = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Semiring = __webpack_require__(38);
	var Disj = function (x) {
	    return x;
	};
	var showDisj = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Disj " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semiringDisj = function (dictHeytingAlgebra) {
	    return new Data_Semiring.Semiring(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra));
	};
	var semigroupDisj = function (dictHeytingAlgebra) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    });
	};
	var ordDisj = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeDisj = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Disj);
	var monoidDisj = function (dictHeytingAlgebra) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupDisj(dictHeytingAlgebra);
	    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
	};
	var invariantDisj = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorDisj = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendDisj = new Control_Extend.Extend(function () {
	    return functorDisj;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqDisj = function (dictEq) {
	    return dictEq;
	};
	var comonadDisj = new Control_Comonad.Comonad(function () {
	    return extendDisj;
	}, Data_Newtype.unwrap(newtypeDisj));
	var boundedDisj = function (dictBounded) {
	    return dictBounded;
	};
	var applyDisj = new Control_Apply.Apply(function () {
	    return functorDisj;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindDisj = new Control_Bind.Bind(function () {
	    return applyDisj;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeDisj = new Control_Applicative.Applicative(function () {
	    return applyDisj;
	}, Disj);
	var monadDisj = new Control_Monad.Monad(function () {
	    return applicativeDisj;
	}, function () {
	    return bindDisj;
	});
	module.exports = {
	    Disj: Disj, 
	    newtypeDisj: newtypeDisj, 
	    eqDisj: eqDisj, 
	    ordDisj: ordDisj, 
	    boundedDisj: boundedDisj, 
	    functorDisj: functorDisj, 
	    invariantDisj: invariantDisj, 
	    applyDisj: applyDisj, 
	    applicativeDisj: applicativeDisj, 
	    bindDisj: bindDisj, 
	    monadDisj: monadDisj, 
	    extendDisj: extendDisj, 
	    comonadDisj: comonadDisj, 
	    showDisj: showDisj, 
	    semigroupDisj: semigroupDisj, 
	    monoidDisj: monoidDisj, 
	    semiringDisj: semiringDisj
	};


/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Comonad = __webpack_require__(49);
	var Control_Extend = __webpack_require__(45);
	var Data_Functor_Invariant = __webpack_require__(50);
	var Data_Monoid = __webpack_require__(47);
	var Data_Newtype = __webpack_require__(51);
	var Data_Eq = __webpack_require__(31);
	var Data_Ord = __webpack_require__(29);
	var Data_Bounded = __webpack_require__(27);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(17);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Data_Show = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(12);
	var Dual = function (x) {
	    return x;
	};
	var showDual = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Dual " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semigroupDual = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semigroup.append(dictSemigroup)(v1)(v);
	        };
	    });
	};
	var ordDual = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeDual = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Dual);
	var monoidDual = function (dictMonoid) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupDual(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Data_Monoid.mempty(dictMonoid));
	};
	var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorDual = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendDual = new Control_Extend.Extend(function () {
	    return functorDual;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqDual = function (dictEq) {
	    return dictEq;
	};
	var comonadDual = new Control_Comonad.Comonad(function () {
	    return extendDual;
	}, Data_Newtype.unwrap(newtypeDual));
	var boundedDual = function (dictBounded) {
	    return dictBounded;
	};
	var applyDual = new Control_Apply.Apply(function () {
	    return functorDual;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindDual = new Control_Bind.Bind(function () {
	    return applyDual;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeDual = new Control_Applicative.Applicative(function () {
	    return applyDual;
	}, Dual);
	var monadDual = new Control_Monad.Monad(function () {
	    return applicativeDual;
	}, function () {
	    return bindDual;
	});
	module.exports = {
	    Dual: Dual, 
	    newtypeDual: newtypeDual, 
	    eqDual: eqDual, 
	    ordDual: ordDual, 
	    boundedDual: boundedDual, 
	    functorDual: functorDual, 
	    invariantDual: invariantDual, 
	    applyDual: applyDual, 
	    applicativeDual: applicativeDual, 
	    bindDual: bindDual, 
	    monadDual: monadDual, 
	    extendDual: extendDual, 
	    comonadDual: comonadDual, 
	    showDual: showDual, 
	    semigroupDual: semigroupDual, 
	    monoidDual: monoidDual
	};


/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Data_Functor_Invariant = __webpack_require__(50);
	var Data_Monoid = __webpack_require__(47);
	var Data_Newtype = __webpack_require__(51);
	var Control_Semigroupoid = __webpack_require__(7);
	var Data_Semigroup = __webpack_require__(12);
	var Control_Category = __webpack_require__(6);
	var Endo = function (x) {
	    return x;
	};
	var semigroupEndo = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        return function ($11) {
	            return v(v1($11));
	        };
	    };
	});
	var newtypeEndo = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Endo);
	var monoidEndo = new Data_Monoid.Monoid(function () {
	    return semigroupEndo;
	}, Control_Category.id(Control_Category.categoryFn));
	var invariantEndo = new Data_Functor_Invariant.Invariant(function (ab) {
	    return function (ba) {
	        return function (v) {
	            return function ($12) {
	                return ab(v(ba($12)));
	            };
	        };
	    };
	});
	module.exports = {
	    Endo: Endo, 
	    newtypeEndo: newtypeEndo, 
	    invariantEndo: invariantEndo, 
	    semigroupEndo: semigroupEndo, 
	    monoidEndo: monoidEndo
	};


/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Control_Category = __webpack_require__(6);
	var Bifunctor = function (bimap) {
	    this.bimap = bimap;
	};
	var bimap = function (dict) {
	    return dict.bimap;
	};
	var lmap = function (dictBifunctor) {
	    return function (f) {
	        return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var rmap = function (dictBifunctor) {
	    return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn));
	};
	module.exports = {
	    Bifunctor: Bifunctor, 
	    bimap: bimap, 
	    lmap: lmap, 
	    rmap: rmap
	};


/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Data_Bifoldable = __webpack_require__(46);
	var Data_Bifunctor = __webpack_require__(55);
	var Control_Category = __webpack_require__(6);
	var Bitraversable = function (__superclass_Data$dotBifoldable$dotBifoldable_1, __superclass_Data$dotBifunctor$dotBifunctor_0, bisequence, bitraverse) {
	    this["__superclass_Data.Bifoldable.Bifoldable_1"] = __superclass_Data$dotBifoldable$dotBifoldable_1;
	    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
	    this.bisequence = bisequence;
	    this.bitraverse = bitraverse;
	};
	var bitraverse = function (dict) {
	    return dict.bitraverse;
	};
	var bisequenceDefault = function (dictBitraversable) {
	    return function (dictApplicative) {
	        return function (t) {
	            return bitraverse(dictBitraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn))(t);
	        };
	    };
	};
	var bisequence = function (dict) {
	    return dict.bisequence;
	};
	var bitraverseDefault = function (dictBitraversable) {
	    return function (dictApplicative) {
	        return function (f) {
	            return function (g) {
	                return function (t) {
	                    return bisequence(dictBitraversable)(dictApplicative)(Data_Bifunctor.bimap(dictBitraversable["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g)(t));
	                };
	            };
	        };
	    };
	};
	var bifor = function (dictBitraversable) {
	    return function (dictApplicative) {
	        return function (t) {
	            return function (f) {
	                return function (g) {
	                    return bitraverse(dictBitraversable)(dictApplicative)(f)(g)(t);
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Bitraversable: Bitraversable, 
	    bifor: bifor, 
	    bisequence: bisequence, 
	    bisequenceDefault: bisequenceDefault, 
	    bitraverse: bitraverse, 
	    bitraverseDefault: bitraverseDefault
	};


/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(58);
	var Prelude = __webpack_require__(16);
	var Control_Plus = __webpack_require__(59);
	var Data_Maybe = __webpack_require__(60);
	var Data_Maybe_First = __webpack_require__(63);
	var Data_Maybe_Last = __webpack_require__(64);
	var Data_Monoid = __webpack_require__(47);
	var Data_Monoid_Additive = __webpack_require__(65);
	var Data_Monoid_Conj = __webpack_require__(48);
	var Data_Monoid_Disj = __webpack_require__(52);
	var Data_Monoid_Dual = __webpack_require__(53);
	var Data_Monoid_Endo = __webpack_require__(54);
	var Data_Monoid_Multiplicative = __webpack_require__(66);
	var Data_Newtype = __webpack_require__(51);
	var Control_Alt = __webpack_require__(2);
	var Control_Semigroupoid = __webpack_require__(7);
	var Control_Apply = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(17);
	var Data_Unit = __webpack_require__(8);
	var Data_Function = __webpack_require__(5);
	var Control_Category = __webpack_require__(6);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Eq = __webpack_require__(31);
	var Data_Ordering = __webpack_require__(35);
	var Data_Ord = __webpack_require__(29);
	var Data_Semiring = __webpack_require__(38);
	var Data_Functor = __webpack_require__(3);
	var Data_HeytingAlgebra = __webpack_require__(25);
	var Foldable = function (foldMap, foldl, foldr) {
	    this.foldMap = foldMap;
	    this.foldl = foldl;
	    this.foldr = foldr;
	};
	var foldr = function (dict) {
	    return dict.foldr;
	};
	var oneOf = function (dictFoldable) {
	    return function (dictPlus) {
	        return foldr(dictFoldable)(Control_Alt.alt(dictPlus["__superclass_Control.Alt.Alt_0"]()))(Control_Plus.empty(dictPlus));
	    };
	};
	var traverse_ = function (dictApplicative) {
	    return function (dictFoldable) {
	        return function (f) {
	            return foldr(dictFoldable)(function ($169) {
	                return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(f($169));
	            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
	        };
	    };
	};
	var for_ = function (dictApplicative) {
	    return function (dictFoldable) {
	        return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
	    };
	};
	var sequence_ = function (dictApplicative) {
	    return function (dictFoldable) {
	        return traverse_(dictApplicative)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var foldl = function (dict) {
	    return dict.foldl;
	};
	var intercalate = function (dictFoldable) {
	    return function (dictMonoid) {
	        return function (sep) {
	            return function (xs) {
	                var go = function (v) {
	                    return function (x) {
	                        if (v.init) {
	                            return {
	                                init: false, 
	                                acc: x
	                            };
	                        };
	                        return {
	                            init: false, 
	                            acc: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.acc)(Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(sep)(x))
	                        };
	                    };
	                };
	                return (foldl(dictFoldable)(go)({
	                    init: true, 
	                    acc: Data_Monoid.mempty(dictMonoid)
	                })(xs)).acc;
	            };
	        };
	    };
	};
	var maximumBy = function (dictFoldable) {
	    return function (cmp) {
	        var max$prime = function (v) {
	            return function (v1) {
	                if (v instanceof Data_Maybe.Nothing) {
	                    return new Data_Maybe.Just(v1);
	                };
	                if (v instanceof Data_Maybe.Just) {
	                    return new Data_Maybe.Just((function () {
	                        var $92 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);
	                        if ($92) {
	                            return v.value0;
	                        };
	                        if (!$92) {
	                            return v1;
	                        };
	                        throw new Error("Failed pattern match at Data.Foldable line 291, column 27 - line 291, column 57: " + [ $92.constructor.name ]);
	                    })());
	                };
	                throw new Error("Failed pattern match at Data.Foldable line 290, column 3 - line 290, column 27: " + [ v.constructor.name, v1.constructor.name ]);
	            };
	        };
	        return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
	    };
	};
	var maximum = function (dictOrd) {
	    return function (dictFoldable) {
	        return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
	    };
	};
	var minimumBy = function (dictFoldable) {
	    return function (cmp) {
	        var min$prime = function (v) {
	            return function (v1) {
	                if (v instanceof Data_Maybe.Nothing) {
	                    return new Data_Maybe.Just(v1);
	                };
	                if (v instanceof Data_Maybe.Just) {
	                    return new Data_Maybe.Just((function () {
	                        var $96 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);
	                        if ($96) {
	                            return v.value0;
	                        };
	                        if (!$96) {
	                            return v1;
	                        };
	                        throw new Error("Failed pattern match at Data.Foldable line 304, column 27 - line 304, column 57: " + [ $96.constructor.name ]);
	                    })());
	                };
	                throw new Error("Failed pattern match at Data.Foldable line 303, column 3 - line 303, column 27: " + [ v.constructor.name, v1.constructor.name ]);
	            };
	        };
	        return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
	    };
	};
	var minimum = function (dictOrd) {
	    return function (dictFoldable) {
	        return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
	    };
	};
	var product = function (dictFoldable) {
	    return function (dictSemiring) {
	        return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
	    };
	};
	var sum = function (dictFoldable) {
	    return function (dictSemiring) {
	        return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
	    };
	};
	var foldableMultiplicative = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableMaybe = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            if (v instanceof Data_Maybe.Nothing) {
	                return Data_Monoid.mempty(dictMonoid);
	            };
	            if (v instanceof Data_Maybe.Just) {
	                return f(v.value0);
	            };
	            throw new Error("Failed pattern match at Data.Foldable line 126, column 3 - line 126, column 30: " + [ f.constructor.name, v.constructor.name ]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Data_Maybe.Nothing) {
	                return z;
	            };
	            if (v1 instanceof Data_Maybe.Just) {
	                return v(z)(v1.value0);
	            };
	            throw new Error("Failed pattern match at Data.Foldable line 124, column 3 - line 124, column 25: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Data_Maybe.Nothing) {
	                return z;
	            };
	            if (v1 instanceof Data_Maybe.Just) {
	                return v(v1.value0)(z);
	            };
	            throw new Error("Failed pattern match at Data.Foldable line 122, column 3 - line 122, column 25: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
	        };
	    };
	});
	var foldableDual = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableDisj = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableConj = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableAdditive = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldMapDefaultR = function (dictFoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return function (xs) {
	                return foldr(dictFoldable)(function (x) {
	                    return function (acc) {
	                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
	                    };
	                })(Data_Monoid.mempty(dictMonoid))(xs);
	            };
	        };
	    };
	};
	var foldableArray = new Foldable(function (dictMonoid) {
	    return foldMapDefaultR(foldableArray)(dictMonoid);
	}, $foreign.foldlArray, $foreign.foldrArray);
	var foldMapDefaultL = function (dictFoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return function (xs) {
	                return foldl(dictFoldable)(function (acc) {
	                    return function (x) {
	                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
	                    };
	                })(Data_Monoid.mempty(dictMonoid))(xs);
	            };
	        };
	    };
	};
	var foldMap = function (dict) {
	    return dict.foldMap;
	};
	var foldableFirst = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldl(foldableMaybe)(f)(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldr(foldableMaybe)(f)(z)(v);
	        };
	    };
	});
	var foldableLast = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldl(foldableMaybe)(f)(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldr(foldableMaybe)(f)(z)(v);
	        };
	    };
	});
	var foldlDefault = function (dictFoldable) {
	    return function (c) {
	        return function (u) {
	            return function (xs) {
	                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($170) {
	                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c)($170)));
	                })(xs)))(u);
	            };
	        };
	    };
	};
	var foldrDefault = function (dictFoldable) {
	    return function (c) {
	        return function (u) {
	            return function (xs) {
	                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(function ($171) {
	                    return Data_Monoid_Endo.Endo(c($171));
	                })(xs))(u);
	            };
	        };
	    };
	};
	var fold = function (dictFoldable) {
	    return function (dictMonoid) {
	        return foldMap(dictFoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var findMap = function (dictFoldable) {
	    return function (p) {
	        var go = function (v) {
	            return function (v1) {
	                if (v instanceof Data_Maybe.Nothing) {
	                    return p(v1);
	                };
	                return v;
	            };
	        };
	        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
	    };
	};
	var find = function (dictFoldable) {
	    return function (p) {
	        var go = function (v) {
	            return function (v1) {
	                if (v instanceof Data_Maybe.Nothing && p(v1)) {
	                    return new Data_Maybe.Just(v1);
	                };
	                return v;
	            };
	        };
	        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
	    };
	};
	var any = function (dictFoldable) {
	    return function (dictHeytingAlgebra) {
	        return function (p) {
	            return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)))(p);
	        };
	    };
	};
	var elem = function (dictFoldable) {
	    return function (dictEq) {
	        return function ($172) {
	            return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($172));
	        };
	    };
	};
	var notElem = function (dictFoldable) {
	    return function (dictEq) {
	        return function (x) {
	            return function ($173) {
	                return !elem(dictFoldable)(dictEq)(x)($173);
	            };
	        };
	    };
	};
	var or = function (dictFoldable) {
	    return function (dictHeytingAlgebra) {
	        return any(dictFoldable)(dictHeytingAlgebra)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var all = function (dictFoldable) {
	    return function (dictHeytingAlgebra) {
	        return function (p) {
	            return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)))(p);
	        };
	    };
	};
	var and = function (dictFoldable) {
	    return function (dictHeytingAlgebra) {
	        return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	module.exports = {
	    Foldable: Foldable, 
	    all: all, 
	    and: and, 
	    any: any, 
	    elem: elem, 
	    find: find, 
	    findMap: findMap, 
	    fold: fold, 
	    foldMap: foldMap, 
	    foldMapDefaultL: foldMapDefaultL, 
	    foldMapDefaultR: foldMapDefaultR, 
	    foldl: foldl, 
	    foldlDefault: foldlDefault, 
	    foldr: foldr, 
	    foldrDefault: foldrDefault, 
	    for_: for_, 
	    intercalate: intercalate, 
	    maximum: maximum, 
	    maximumBy: maximumBy, 
	    minimum: minimum, 
	    minimumBy: minimumBy, 
	    notElem: notElem, 
	    oneOf: oneOf, 
	    or: or, 
	    product: product, 
	    sequence_: sequence_, 
	    sum: sum, 
	    traverse_: traverse_, 
	    foldableArray: foldableArray, 
	    foldableMaybe: foldableMaybe, 
	    foldableFirst: foldableFirst, 
	    foldableLast: foldableLast, 
	    foldableAdditive: foldableAdditive, 
	    foldableDual: foldableDual, 
	    foldableDisj: foldableDisj, 
	    foldableConj: foldableConj, 
	    foldableMultiplicative: foldableMultiplicative
	};


/***/ },
/* 58 */
/***/ function(module, exports) {

	"use strict";

	exports.foldrArray = function (f) {
	  return function (init) {
	    return function (xs) {
	      var acc = init;
	      var len = xs.length;
	      for (var i = len - 1; i >= 0; i--) {
	        acc = f(xs[i])(acc);
	      }
	      return acc;
	    };
	  };
	};

	exports.foldlArray = function (f) {
	  return function (init) {
	    return function (xs) {
	      var acc = init;
	      var len = xs.length;
	      for (var i = 0; i < len; i++) {
	        acc = f(acc)(xs[i]);
	      }
	      return acc;
	    };
	  };
	};

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Control_Alt = __webpack_require__(2);
	var Data_Functor = __webpack_require__(3);
	var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
	    this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
	    this.empty = empty;
	};
	var plusArray = new Plus(function () {
	    return Control_Alt.altArray;
	}, [  ]);
	var empty = function (dict) {
	    return dict.empty;
	};
	module.exports = {
	    Plus: Plus, 
	    empty: empty, 
	    plusArray: plusArray
	};


/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Alt = __webpack_require__(2);
	var Control_Alternative = __webpack_require__(61);
	var Control_Extend = __webpack_require__(45);
	var Control_MonadZero = __webpack_require__(62);
	var Control_Plus = __webpack_require__(59);
	var Data_Functor_Invariant = __webpack_require__(50);
	var Data_Monoid = __webpack_require__(47);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(17);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Eq = __webpack_require__(31);
	var Data_Ord = __webpack_require__(29);
	var Data_Ordering = __webpack_require__(35);
	var Data_Bounded = __webpack_require__(27);
	var Data_Show = __webpack_require__(10);
	var Data_Unit = __webpack_require__(8);
	var Data_Function = __webpack_require__(5);
	var Control_Category = __webpack_require__(6);
	var Nothing = (function () {
	    function Nothing() {

	    };
	    Nothing.value = new Nothing();
	    return Nothing;
	})();
	var Just = (function () {
	    function Just(value0) {
	        this.value0 = value0;
	    };
	    Just.create = function (value0) {
	        return new Just(value0);
	    };
	    return Just;
	})();
	var showMaybe = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        if (v instanceof Just) {
	            return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
	        };
	        if (v instanceof Nothing) {
	            return "Nothing";
	        };
	        throw new Error("Failed pattern match at Data.Maybe line 202, column 3 - line 203, column 3: " + [ v.constructor.name ]);
	    });
	};
	var semigroupMaybe = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            if (v instanceof Nothing) {
	                return v1;
	            };
	            if (v1 instanceof Nothing) {
	                return v;
	            };
	            if (v instanceof Just && v1 instanceof Just) {
	                return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 175, column 3 - line 175, column 23: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    });
	};
	var monoidMaybe = function (dictSemigroup) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupMaybe(dictSemigroup);
	    }, Nothing.value);
	};
	var maybe$prime = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Nothing) {
	                return v(Data_Unit.unit);
	            };
	            if (v2 instanceof Just) {
	                return v1(v2.value0);
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 227, column 1 - line 227, column 28: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	};
	var maybe = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Nothing) {
	                return v;
	            };
	            if (v2 instanceof Just) {
	                return v1(v2.value0);
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 214, column 1 - line 214, column 22: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	};
	var isNothing = maybe(true)(Data_Function["const"](false));
	var isJust = maybe(false)(Data_Function["const"](true));
	var functorMaybe = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        if (v1 instanceof Just) {
	            return new Just(v(v1.value0));
	        };
	        return Nothing.value;
	    };
	});
	var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
	var fromMaybe$prime = function (a) {
	    return maybe$prime(a)(Control_Category.id(Control_Category.categoryFn));
	};
	var fromMaybe = function (a) {
	    return maybe(a)(Control_Category.id(Control_Category.categoryFn));
	};
	var fromJust = function (dictPartial) {
	    return function (v) {
	        var __unused = function (dictPartial1) {
	            return function ($dollar33) {
	                return $dollar33;
	            };
	        };
	        return __unused(dictPartial)((function () {
	            if (v instanceof Just) {
	                return v.value0;
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 265, column 1 - line 265, column 21: " + [ v.constructor.name ]);
	        })());
	    };
	};
	var extendMaybe = new Control_Extend.Extend(function () {
	    return functorMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v1 instanceof Nothing) {
	            return Nothing.value;
	        };
	        return new Just(v(v1));
	    };
	});
	var eqMaybe = function (dictEq) {
	    return new Data_Eq.Eq(function (x) {
	        return function (y) {
	            if (x instanceof Nothing && y instanceof Nothing) {
	                return true;
	            };
	            if (x instanceof Just && y instanceof Just) {
	                return Data_Eq.eq(dictEq)(x.value0)(y.value0);
	            };
	            return false;
	        };
	    });
	};
	var ordMaybe = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqMaybe(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (x) {
	        return function (y) {
	            if (x instanceof Nothing && y instanceof Nothing) {
	                return Data_Ordering.EQ.value;
	            };
	            if (x instanceof Nothing) {
	                return Data_Ordering.LT.value;
	            };
	            if (y instanceof Nothing) {
	                return Data_Ordering.GT.value;
	            };
	            if (x instanceof Just && y instanceof Just) {
	                return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 192, column 1 - line 192, column 51: " + [ x.constructor.name, y.constructor.name ]);
	        };
	    });
	};
	var boundedMaybe = function (dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordMaybe(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Nothing.value, new Just(Data_Bounded.top(dictBounded)));
	};
	var applyMaybe = new Control_Apply.Apply(function () {
	    return functorMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Just) {
	            return Data_Functor.map(functorMaybe)(v.value0)(v1);
	        };
	        if (v instanceof Nothing) {
	            return Nothing.value;
	        };
	        throw new Error("Failed pattern match at Data.Maybe line 67, column 3 - line 67, column 31: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var bindMaybe = new Control_Bind.Bind(function () {
	    return applyMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Just) {
	            return v1(v.value0);
	        };
	        if (v instanceof Nothing) {
	            return Nothing.value;
	        };
	        throw new Error("Failed pattern match at Data.Maybe line 126, column 3 - line 126, column 24: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var applicativeMaybe = new Control_Applicative.Applicative(function () {
	    return applyMaybe;
	}, Just.create);
	var monadMaybe = new Control_Monad.Monad(function () {
	    return applicativeMaybe;
	}, function () {
	    return bindMaybe;
	});
	var altMaybe = new Control_Alt.Alt(function () {
	    return functorMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Nothing) {
	            return v1;
	        };
	        return v;
	    };
	});
	var plusMaybe = new Control_Plus.Plus(function () {
	    return altMaybe;
	}, Nothing.value);
	var alternativeMaybe = new Control_Alternative.Alternative(function () {
	    return applicativeMaybe;
	}, function () {
	    return plusMaybe;
	});
	var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
	    return alternativeMaybe;
	}, function () {
	    return monadMaybe;
	});
	module.exports = {
	    Nothing: Nothing, 
	    Just: Just, 
	    fromJust: fromJust, 
	    fromMaybe: fromMaybe, 
	    "fromMaybe'": fromMaybe$prime, 
	    isJust: isJust, 
	    isNothing: isNothing, 
	    maybe: maybe, 
	    "maybe'": maybe$prime, 
	    functorMaybe: functorMaybe, 
	    applyMaybe: applyMaybe, 
	    applicativeMaybe: applicativeMaybe, 
	    altMaybe: altMaybe, 
	    plusMaybe: plusMaybe, 
	    alternativeMaybe: alternativeMaybe, 
	    bindMaybe: bindMaybe, 
	    monadMaybe: monadMaybe, 
	    monadZeroMaybe: monadZeroMaybe, 
	    extendMaybe: extendMaybe, 
	    invariantMaybe: invariantMaybe, 
	    semigroupMaybe: semigroupMaybe, 
	    monoidMaybe: monoidMaybe, 
	    eqMaybe: eqMaybe, 
	    ordMaybe: ordMaybe, 
	    boundedMaybe: boundedMaybe, 
	    showMaybe: showMaybe
	};


/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Control_Alt = __webpack_require__(2);
	var Control_Applicative = __webpack_require__(17);
	var Control_Apply = __webpack_require__(18);
	var Control_Plus = __webpack_require__(59);
	var Data_Functor = __webpack_require__(3);
	var Alternative = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotPlus$dotPlus_1) {
	    this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
	    this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
	};
	var alternativeArray = new Alternative(function () {
	    return Control_Applicative.applicativeArray;
	}, function () {
	    return Control_Plus.plusArray;
	});
	module.exports = {
	    Alternative: Alternative, 
	    alternativeArray: alternativeArray
	};


/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Control_Alt = __webpack_require__(2);
	var Control_Alternative = __webpack_require__(61);
	var Control_Applicative = __webpack_require__(17);
	var Control_Apply = __webpack_require__(18);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Control_Plus = __webpack_require__(59);
	var Data_Functor = __webpack_require__(3);
	var Data_Unit = __webpack_require__(8);
	var MonadZero = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Control$dotMonad$dotMonad_0) {
	    this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	};
	var monadZeroArray = new MonadZero(function () {
	    return Control_Alternative.alternativeArray;
	}, function () {
	    return Control_Monad.monadArray;
	});
	var guard = function (dictMonadZero) {
	    return function (v) {
	        if (v) {
	            return Control_Applicative.pure((dictMonadZero["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Unit.unit);
	        };
	        if (!v) {
	            return Control_Plus.empty((dictMonadZero["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
	        };
	        throw new Error("Failed pattern match at Control.MonadZero line 52, column 1 - line 52, column 23: " + [ v.constructor.name ]);
	    };
	};
	module.exports = {
	    MonadZero: MonadZero, 
	    guard: guard, 
	    monadZeroArray: monadZeroArray
	};


/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Extend = __webpack_require__(45);
	var Data_Functor_Invariant = __webpack_require__(50);
	var Data_Maybe = __webpack_require__(60);
	var Data_Monoid = __webpack_require__(47);
	var Data_Newtype = __webpack_require__(51);
	var Data_Eq = __webpack_require__(31);
	var Data_Ord = __webpack_require__(29);
	var Data_Bounded = __webpack_require__(27);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(17);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Data_Show = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(12);
	var First = function (x) {
	    return x;
	};
	var showFirst = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "First (" + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
	    });
	};
	var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        if (v instanceof Data_Maybe.Just) {
	            return v;
	        };
	        return v1;
	    };
	});
	var ordFirst = function (dictOrd) {
	    return Data_Maybe.ordMaybe(dictOrd);
	};
	var newtypeFirst = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, First);
	var monoidFirst = new Data_Monoid.Monoid(function () {
	    return semigroupFirst;
	}, Data_Maybe.Nothing.value);
	var monadFirst = Data_Maybe.monadMaybe;
	var invariantFirst = Data_Maybe.invariantMaybe;
	var functorFirst = Data_Maybe.functorMaybe;
	var extendFirst = Data_Maybe.extendMaybe;
	var eqFirst = function (dictEq) {
	    return Data_Maybe.eqMaybe(dictEq);
	};
	var boundedFirst = function (dictBounded) {
	    return Data_Maybe.boundedMaybe(dictBounded);
	};
	var bindFirst = Data_Maybe.bindMaybe;
	var applyFirst = Data_Maybe.applyMaybe;
	var applicativeFirst = Data_Maybe.applicativeMaybe;
	module.exports = {
	    First: First, 
	    newtypeFirst: newtypeFirst, 
	    eqFirst: eqFirst, 
	    ordFirst: ordFirst, 
	    boundedFirst: boundedFirst, 
	    functorFirst: functorFirst, 
	    invariantFirst: invariantFirst, 
	    applyFirst: applyFirst, 
	    applicativeFirst: applicativeFirst, 
	    bindFirst: bindFirst, 
	    monadFirst: monadFirst, 
	    extendFirst: extendFirst, 
	    showFirst: showFirst, 
	    semigroupFirst: semigroupFirst, 
	    monoidFirst: monoidFirst
	};


/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Extend = __webpack_require__(45);
	var Data_Functor_Invariant = __webpack_require__(50);
	var Data_Maybe = __webpack_require__(60);
	var Data_Monoid = __webpack_require__(47);
	var Data_Newtype = __webpack_require__(51);
	var Data_Eq = __webpack_require__(31);
	var Data_Ord = __webpack_require__(29);
	var Data_Bounded = __webpack_require__(27);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(17);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Data_Show = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(12);
	var Last = function (x) {
	    return x;
	};
	var showLast = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Last " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
	    });
	};
	var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        if (v1 instanceof Data_Maybe.Just) {
	            return v1;
	        };
	        if (v1 instanceof Data_Maybe.Nothing) {
	            return v;
	        };
	        throw new Error("Failed pattern match at Data.Maybe.Last line 48, column 3 - line 48, column 39: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var ordLast = function (dictOrd) {
	    return Data_Maybe.ordMaybe(dictOrd);
	};
	var newtypeLast = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Last);
	var monoidLast = new Data_Monoid.Monoid(function () {
	    return semigroupLast;
	}, Data_Maybe.Nothing.value);
	var monadLast = Data_Maybe.monadMaybe;
	var invariantLast = Data_Maybe.invariantMaybe;
	var functorLast = Data_Maybe.functorMaybe;
	var extendLast = Data_Maybe.extendMaybe;
	var eqLast = function (dictEq) {
	    return Data_Maybe.eqMaybe(dictEq);
	};
	var boundedLast = function (dictBounded) {
	    return Data_Maybe.boundedMaybe(dictBounded);
	};
	var bindLast = Data_Maybe.bindMaybe;
	var applyLast = Data_Maybe.applyMaybe;
	var applicativeLast = Data_Maybe.applicativeMaybe;
	module.exports = {
	    Last: Last, 
	    newtypeLast: newtypeLast, 
	    eqLast: eqLast, 
	    ordLast: ordLast, 
	    boundedLast: boundedLast, 
	    functorLast: functorLast, 
	    invariantLast: invariantLast, 
	    applyLast: applyLast, 
	    applicativeLast: applicativeLast, 
	    bindLast: bindLast, 
	    monadLast: monadLast, 
	    extendLast: extendLast, 
	    showLast: showLast, 
	    semigroupLast: semigroupLast, 
	    monoidLast: monoidLast
	};


/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Comonad = __webpack_require__(49);
	var Control_Extend = __webpack_require__(45);
	var Data_Functor_Invariant = __webpack_require__(50);
	var Data_Monoid = __webpack_require__(47);
	var Data_Newtype = __webpack_require__(51);
	var Data_Eq = __webpack_require__(31);
	var Data_Ord = __webpack_require__(29);
	var Data_Bounded = __webpack_require__(27);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(17);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Data_Show = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Semiring = __webpack_require__(38);
	var Additive = function (x) {
	    return x;
	};
	var showAdditive = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Additive " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semigroupAdditive = function (dictSemiring) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semiring.add(dictSemiring)(v)(v1);
	        };
	    });
	};
	var ordAdditive = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeAdditive = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Additive);
	var monoidAdditive = function (dictSemiring) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupAdditive(dictSemiring);
	    }, Data_Semiring.zero(dictSemiring));
	};
	var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorAdditive = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendAdditive = new Control_Extend.Extend(function () {
	    return functorAdditive;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqAdditive = function (dictEq) {
	    return dictEq;
	};
	var comonadAdditive = new Control_Comonad.Comonad(function () {
	    return extendAdditive;
	}, Data_Newtype.unwrap(newtypeAdditive));
	var boundedAdditive = function (dictBounded) {
	    return dictBounded;
	};
	var applyAdditive = new Control_Apply.Apply(function () {
	    return functorAdditive;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindAdditive = new Control_Bind.Bind(function () {
	    return applyAdditive;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeAdditive = new Control_Applicative.Applicative(function () {
	    return applyAdditive;
	}, Additive);
	var monadAdditive = new Control_Monad.Monad(function () {
	    return applicativeAdditive;
	}, function () {
	    return bindAdditive;
	});
	module.exports = {
	    Additive: Additive, 
	    newtypeAdditive: newtypeAdditive, 
	    eqAdditive: eqAdditive, 
	    ordAdditive: ordAdditive, 
	    boundedAdditive: boundedAdditive, 
	    functorAdditive: functorAdditive, 
	    invariantAdditive: invariantAdditive, 
	    applyAdditive: applyAdditive, 
	    applicativeAdditive: applicativeAdditive, 
	    bindAdditive: bindAdditive, 
	    monadAdditive: monadAdditive, 
	    extendAdditive: extendAdditive, 
	    comonadAdditive: comonadAdditive, 
	    showAdditive: showAdditive, 
	    semigroupAdditive: semigroupAdditive, 
	    monoidAdditive: monoidAdditive
	};


/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Comonad = __webpack_require__(49);
	var Control_Extend = __webpack_require__(45);
	var Data_Functor_Invariant = __webpack_require__(50);
	var Data_Monoid = __webpack_require__(47);
	var Data_Newtype = __webpack_require__(51);
	var Data_Eq = __webpack_require__(31);
	var Data_Ord = __webpack_require__(29);
	var Data_Bounded = __webpack_require__(27);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(17);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Data_Show = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Semiring = __webpack_require__(38);
	var Multiplicative = function (x) {
	    return x;
	};
	var showMultiplicative = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Multiplicative " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semigroupMultiplicative = function (dictSemiring) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semiring.mul(dictSemiring)(v)(v1);
	        };
	    });
	};
	var ordMultiplicative = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeMultiplicative = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Multiplicative);
	var monoidMultiplicative = function (dictSemiring) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupMultiplicative(dictSemiring);
	    }, Data_Semiring.one(dictSemiring));
	};
	var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorMultiplicative = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendMultiplicative = new Control_Extend.Extend(function () {
	    return functorMultiplicative;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqMultiplicative = function (dictEq) {
	    return dictEq;
	};
	var comonadMultiplicative = new Control_Comonad.Comonad(function () {
	    return extendMultiplicative;
	}, Data_Newtype.unwrap(newtypeMultiplicative));
	var boundedMultiplicative = function (dictBounded) {
	    return dictBounded;
	};
	var applyMultiplicative = new Control_Apply.Apply(function () {
	    return functorMultiplicative;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindMultiplicative = new Control_Bind.Bind(function () {
	    return applyMultiplicative;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeMultiplicative = new Control_Applicative.Applicative(function () {
	    return applyMultiplicative;
	}, Multiplicative);
	var monadMultiplicative = new Control_Monad.Monad(function () {
	    return applicativeMultiplicative;
	}, function () {
	    return bindMultiplicative;
	});
	module.exports = {
	    Multiplicative: Multiplicative, 
	    newtypeMultiplicative: newtypeMultiplicative, 
	    eqMultiplicative: eqMultiplicative, 
	    ordMultiplicative: ordMultiplicative, 
	    boundedMultiplicative: boundedMultiplicative, 
	    functorMultiplicative: functorMultiplicative, 
	    invariantMultiplicative: invariantMultiplicative, 
	    applyMultiplicative: applyMultiplicative, 
	    applicativeMultiplicative: applicativeMultiplicative, 
	    bindMultiplicative: bindMultiplicative, 
	    monadMultiplicative: monadMultiplicative, 
	    extendMultiplicative: extendMultiplicative, 
	    comonadMultiplicative: comonadMultiplicative, 
	    showMultiplicative: showMultiplicative, 
	    semigroupMultiplicative: semigroupMultiplicative, 
	    monoidMultiplicative: monoidMultiplicative
	};


/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(68);
	var Prelude = __webpack_require__(16);
	var Data_Foldable = __webpack_require__(57);
	var Data_Maybe = __webpack_require__(60);
	var Data_Maybe_First = __webpack_require__(63);
	var Data_Maybe_Last = __webpack_require__(64);
	var Data_Monoid_Additive = __webpack_require__(65);
	var Data_Monoid_Conj = __webpack_require__(48);
	var Data_Monoid_Disj = __webpack_require__(52);
	var Data_Monoid_Dual = __webpack_require__(53);
	var Data_Monoid_Multiplicative = __webpack_require__(66);
	var Control_Apply = __webpack_require__(18);
	var Data_Functor = __webpack_require__(3);
	var Control_Applicative = __webpack_require__(17);
	var Control_Category = __webpack_require__(6);
	var StateL = function (x) {
	    return x;
	};
	var StateR = function (x) {
	    return x;
	};
	var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Data$dotFunctor$dotFunctor_0, sequence, traverse) {
	    this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
	    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
	    this.sequence = sequence;
	    this.traverse = traverse;
	};
	var traverse = function (dict) {
	    return dict.traverse;
	};
	var traversableMultiplicative = new Traversable(function () {
	    return Data_Foldable.foldableMultiplicative;
	}, function () {
	    return Data_Monoid_Multiplicative.functorMultiplicative;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
	        };
	    };
	});
	var traversableMaybe = new Traversable(function () {
	    return Data_Foldable.foldableMaybe;
	}, function () {
	    return Data_Maybe.functorMaybe;
	}, function (dictApplicative) {
	    return function (v) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe.Just.create)(v.value0);
	        };
	        throw new Error("Failed pattern match at Data.Traversable line 85, column 3 - line 85, column 35: " + [ v.constructor.name ]);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Data_Maybe.Nothing) {
	                return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
	            };
	            if (v1 instanceof Data_Maybe.Just) {
	                return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe.Just.create)(v(v1.value0));
	            };
	            throw new Error("Failed pattern match at Data.Traversable line 83, column 3 - line 83, column 37: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	});
	var traversableDual = new Traversable(function () {
	    return Data_Foldable.foldableDual;
	}, function () {
	    return Data_Monoid_Dual.functorDual;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Dual.Dual)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Dual.Dual)(f(v));
	        };
	    };
	});
	var traversableDisj = new Traversable(function () {
	    return Data_Foldable.foldableDisj;
	}, function () {
	    return Data_Monoid_Disj.functorDisj;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Disj.Disj)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Disj.Disj)(f(v));
	        };
	    };
	});
	var traversableConj = new Traversable(function () {
	    return Data_Foldable.foldableConj;
	}, function () {
	    return Data_Monoid_Conj.functorConj;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Conj.Conj)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Conj.Conj)(f(v));
	        };
	    };
	});
	var traversableAdditive = new Traversable(function () {
	    return Data_Foldable.foldableAdditive;
	}, function () {
	    return Data_Monoid_Additive.functorAdditive;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Additive.Additive)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Additive.Additive)(f(v));
	        };
	    };
	});
	var stateR = function (v) {
	    return v;
	};
	var stateL = function (v) {
	    return v;
	};
	var sequenceDefault = function (dictTraversable) {
	    return function (dictApplicative) {
	        return function (tma) {
	            return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(tma);
	        };
	    };
	};
	var traversableArray = new Traversable(function () {
	    return Data_Foldable.foldableArray;
	}, function () {
	    return Data_Functor.functorArray;
	}, function (dictApplicative) {
	    return sequenceDefault(traversableArray)(dictApplicative);
	}, function (dictApplicative) {
	    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]()))(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Control_Applicative.pure(dictApplicative));
	});
	var sequence = function (dict) {
	    return dict.sequence;
	};
	var traversableFirst = new Traversable(function () {
	    return Data_Foldable.foldableFirst;
	}, function () {
	    return Data_Maybe_First.functorFirst;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
	        };
	    };
	});
	var traversableLast = new Traversable(function () {
	    return Data_Foldable.foldableLast;
	}, function () {
	    return Data_Maybe_Last.functorLast;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
	        };
	    };
	});
	var traverseDefault = function (dictTraversable) {
	    return function (dictApplicative) {
	        return function (f) {
	            return function (ta) {
	                return sequence(dictTraversable)(dictApplicative)(Data_Functor.map(dictTraversable["__superclass_Data.Functor.Functor_0"]())(f)(ta));
	            };
	        };
	    };
	};
	var functorStateR = new Data_Functor.Functor(function (f) {
	    return function (k) {
	        return function (s) {
	            var $75 = stateR(k)(s);
	            return {
	                accum: $75.accum, 
	                value: f($75.value)
	            };
	        };
	    };
	});
	var functorStateL = new Data_Functor.Functor(function (f) {
	    return function (k) {
	        return function (s) {
	            var $78 = stateL(k)(s);
	            return {
	                accum: $78.accum, 
	                value: f($78.value)
	            };
	        };
	    };
	});
	var $$for = function (dictApplicative) {
	    return function (dictTraversable) {
	        return function (x) {
	            return function (f) {
	                return traverse(dictTraversable)(dictApplicative)(f)(x);
	            };
	        };
	    };
	};
	var applyStateR = new Control_Apply.Apply(function () {
	    return functorStateR;
	}, function (f) {
	    return function (x) {
	        return function (s) {
	            var $81 = stateR(x)(s);
	            var $82 = stateR(f)($81.accum);
	            return {
	                accum: $82.accum, 
	                value: $82.value($81.value)
	            };
	        };
	    };
	});
	var applyStateL = new Control_Apply.Apply(function () {
	    return functorStateL;
	}, function (f) {
	    return function (x) {
	        return function (s) {
	            var $87 = stateL(f)(s);
	            var $88 = stateL(x)($87.accum);
	            return {
	                accum: $88.accum, 
	                value: $87.value($88.value)
	            };
	        };
	    };
	});
	var applicativeStateR = new Control_Applicative.Applicative(function () {
	    return applyStateR;
	}, function (a) {
	    return function (s) {
	        return {
	            accum: s, 
	            value: a
	        };
	    };
	});
	var mapAccumR = function (dictTraversable) {
	    return function (f) {
	        return function (s0) {
	            return function (xs) {
	                return stateR(traverse(dictTraversable)(applicativeStateR)(function (a) {
	                    return function (s) {
	                        return f(s)(a);
	                    };
	                })(xs))(s0);
	            };
	        };
	    };
	};
	var scanr = function (dictTraversable) {
	    return function (f) {
	        return function (b0) {
	            return function (xs) {
	                return (mapAccumR(dictTraversable)(function (b) {
	                    return function (a) {
	                        var b$prime = f(a)(b);
	                        return {
	                            accum: b$prime, 
	                            value: b$prime
	                        };
	                    };
	                })(b0)(xs)).value;
	            };
	        };
	    };
	};
	var applicativeStateL = new Control_Applicative.Applicative(function () {
	    return applyStateL;
	}, function (a) {
	    return function (s) {
	        return {
	            accum: s, 
	            value: a
	        };
	    };
	});
	var mapAccumL = function (dictTraversable) {
	    return function (f) {
	        return function (s0) {
	            return function (xs) {
	                return stateL(traverse(dictTraversable)(applicativeStateL)(function (a) {
	                    return function (s) {
	                        return f(s)(a);
	                    };
	                })(xs))(s0);
	            };
	        };
	    };
	};
	var scanl = function (dictTraversable) {
	    return function (f) {
	        return function (b0) {
	            return function (xs) {
	                return (mapAccumL(dictTraversable)(function (b) {
	                    return function (a) {
	                        var b$prime = f(b)(a);
	                        return {
	                            accum: b$prime, 
	                            value: b$prime
	                        };
	                    };
	                })(b0)(xs)).value;
	            };
	        };
	    };
	};
	module.exports = {
	    Traversable: Traversable, 
	    "for": $$for, 
	    mapAccumL: mapAccumL, 
	    mapAccumR: mapAccumR, 
	    scanl: scanl, 
	    scanr: scanr, 
	    sequence: sequence, 
	    sequenceDefault: sequenceDefault, 
	    traverse: traverse, 
	    traverseDefault: traverseDefault, 
	    traversableArray: traversableArray, 
	    traversableMaybe: traversableMaybe, 
	    traversableFirst: traversableFirst, 
	    traversableLast: traversableLast, 
	    traversableAdditive: traversableAdditive, 
	    traversableDual: traversableDual, 
	    traversableConj: traversableConj, 
	    traversableDisj: traversableDisj, 
	    traversableMultiplicative: traversableMultiplicative
	};


/***/ },
/* 68 */
/***/ function(module, exports) {

	"use strict";

	// jshint maxparams: 3

	exports.traverseArrayImpl = function () {
	  function Cont(fn) {
	    this.fn = fn;
	  }

	  var emptyList = {};

	  var ConsCell = function ConsCell(head, tail) {
	    this.head = head;
	    this.tail = tail;
	  };

	  function consList(x) {
	    return function (xs) {
	      return new ConsCell(x, xs);
	    };
	  }

	  function listToArray(list) {
	    var arr = [];
	    while (list !== emptyList) {
	      arr.push(list.head);
	      list = list.tail;
	    }
	    return arr;
	  }

	  return function (apply) {
	    return function (map) {
	      return function (pure) {
	        return function (f) {
	          var buildFrom = function buildFrom(x, ys) {
	            return apply(map(consList)(f(x)))(ys);
	          };

	          var go = function go(acc, currentLen, xs) {
	            if (currentLen === 0) {
	              return acc;
	            } else {
	              var last = xs[currentLen - 1];
	              return new Cont(function () {
	                return go(buildFrom(last, acc), currentLen - 1, xs);
	              });
	            }
	          };

	          return function (array) {
	            var result = go(pure(emptyList), array.length, array);
	            while (result instanceof Cont) {
	              result = result.fn();
	            }

	            return map(listToArray)(result);
	          };
	        };
	      };
	    };
	  };
	}();

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(70);
	var Prelude = __webpack_require__(16);
	var Control_Alt = __webpack_require__(2);
	var Control_Alternative = __webpack_require__(61);
	var Control_Lazy = __webpack_require__(71);
	var Control_Monad_Rec_Class = __webpack_require__(72);
	var Data_Foldable = __webpack_require__(57);
	var Data_Maybe = __webpack_require__(60);
	var Data_NonEmpty = __webpack_require__(84);
	var Data_Traversable = __webpack_require__(67);
	var Data_Tuple = __webpack_require__(85);
	var Data_Unfoldable = __webpack_require__(88);
	var Partial_Unsafe = __webpack_require__(80);
	var Data_Function = __webpack_require__(5);
	var Data_Ord = __webpack_require__(29);
	var Data_Semiring = __webpack_require__(38);
	var Data_Boolean = __webpack_require__(23);
	var Data_Ordering = __webpack_require__(35);
	var Data_Ring = __webpack_require__(36);
	var Data_Eq = __webpack_require__(31);
	var Data_HeytingAlgebra = __webpack_require__(25);
	var Control_Apply = __webpack_require__(18);
	var Data_Functor = __webpack_require__(3);
	var Control_Applicative = __webpack_require__(17);
	var Control_Semigroupoid = __webpack_require__(7);
	var Control_Bind = __webpack_require__(20);
	var Data_Semigroup = __webpack_require__(12);
	var Control_Category = __webpack_require__(6);
	var zipWithA = function (dictApplicative) {
	    return function (f) {
	        return function (xs) {
	            return function (ys) {
	                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
	            };
	        };
	    };
	};
	var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
	var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var unzip = $foreign["uncons'"](function (v) {
	    return new Data_Tuple.Tuple([  ], [  ]);
	})(function (v) {
	    return function (ts) {
	        var $44 = unzip(ts);
	        return new Data_Tuple.Tuple($foreign.cons(v.value0)($44.value0), $foreign.cons(v.value1)($44.value1));
	    };
	});
	var unsafeIndex = function (dictPartial) {
	    return $foreign.unsafeIndexImpl;
	};
	var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
	    return function (xs) {
	        return new Data_Maybe.Just({
	            head: x, 
	            tail: xs
	        });
	    };
	});
	var toUnfoldable = function (dictUnfoldable) {
	    return function (xs) {
	        var len = $foreign.length(xs);
	        var f = function (i) {
	            if (i < len) {
	                return new Data_Maybe.Just(new Data_Tuple.Tuple(Partial_Unsafe.unsafePartial(function (dictPartial) {
	                    return unsafeIndex(dictPartial)(xs)(i);
	                }), i + 1 | 0));
	            };
	            if (Data_Boolean.otherwise) {
	                return Data_Maybe.Nothing.value;
	            };
	            throw new Error("Failed pattern match at Data.Array line 133, column 1 - line 138, column 26: " + [ i.constructor.name ]);
	        };
	        return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
	    };
	};
	var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
	    return function (xs) {
	        return new Data_Maybe.Just(xs);
	    };
	});
	var sortBy = function (comp) {
	    return function (xs) {
	        var comp$prime = function (x) {
	            return function (y) {
	                var $51 = comp(x)(y);
	                if ($51 instanceof Data_Ordering.GT) {
	                    return 1;
	                };
	                if ($51 instanceof Data_Ordering.EQ) {
	                    return 0;
	                };
	                if ($51 instanceof Data_Ordering.LT) {
	                    return -1;
	                };
	                throw new Error("Failed pattern match at Data.Array line 467, column 15 - line 472, column 1: " + [ $51.constructor.name ]);
	            };
	        };
	        return $foreign.sortImpl(comp$prime)(xs);
	    };
	};
	var sort = function (dictOrd) {
	    return function (xs) {
	        return sortBy(Data_Ord.compare(dictOrd))(xs);
	    };
	};
	var singleton = function (a) {
	    return [ a ];
	};
	var $$null = function (xs) {
	    return $foreign.length(xs) === 0;
	};
	var nubBy = function (eq) {
	    return function (xs) {
	        var $52 = uncons(xs);
	        if ($52 instanceof Data_Maybe.Just) {
	            return $foreign.cons($52.value0.head)(nubBy(eq)($foreign.filter(function (y) {
	                return !eq($52.value0.head)(y);
	            })($52.value0.tail)));
	        };
	        if ($52 instanceof Data_Maybe.Nothing) {
	            return [  ];
	        };
	        throw new Error("Failed pattern match at Data.Array line 568, column 3 - line 570, column 18: " + [ $52.constructor.name ]);
	    };
	};
	var nub = function (dictEq) {
	    return nubBy(Data_Eq.eq(dictEq));
	};
	var mapWithIndex = function (f) {
	    return function (xs) {
	        return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1))(xs);
	    };
	};
	var some = function (dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Apply.apply((dictAlternative["__superclass_Control.Applicative.Applicative_0"]())["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Data.Functor.Functor_0"]())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
	                return many(dictAlternative)(dictLazy)(v);
	            }));
	        };
	    };
	};
	var many = function (dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Alt.alt((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())([  ]));
	        };
	    };
	};
	var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var init = function (xs) {
	    if ($$null(xs)) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (Data_Boolean.otherwise) {
	        return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1)(xs));
	    };
	    throw new Error("Failed pattern match at Data.Array line 249, column 1 - line 251, column 55: " + [ xs.constructor.name ]);
	};
	var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var last = function (xs) {
	    return index(xs)($foreign.length(xs) - 1);
	};
	var unsnoc = function (xs) {
	    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
	        return function (v1) {
	            return {
	                init: v, 
	                last: v1
	            };
	        };
	    })(init(xs)))(last(xs));
	};
	var modifyAt = function (i) {
	    return function (f) {
	        return function (xs) {
	            var go = function (x) {
	                return updateAt(i)(f(x))(xs);
	            };
	            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
	        };
	    };
	};
	var span = function (p) {
	    return function (arr) {
	        var go = function (__copy_i) {
	            var i = __copy_i;
	            tco: while (true) {
	                var $56 = index(arr)(i);
	                if ($56 instanceof Data_Maybe.Just) {
	                    var $57 = p($56.value0);
	                    if ($57) {
	                        var __tco_i = i + 1 | 0;
	                        i = __tco_i;
	                        continue tco;
	                    };
	                    if (!$57) {
	                        return new Data_Maybe.Just(i);
	                    };
	                    throw new Error("Failed pattern match at Data.Array line 529, column 17 - line 529, column 49: " + [ $57.constructor.name ]);
	                };
	                if ($56 instanceof Data_Maybe.Nothing) {
	                    return Data_Maybe.Nothing.value;
	                };
	                throw new Error("Failed pattern match at Data.Array line 528, column 5 - line 530, column 25: " + [ $56.constructor.name ]);
	            };
	        };
	        var breakIndex = go(0);
	        if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {
	            return {
	                init: [  ], 
	                rest: arr
	            };
	        };
	        if (breakIndex instanceof Data_Maybe.Just) {
	            return {
	                init: $foreign.slice(0)(breakIndex.value0)(arr), 
	                rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
	            };
	        };
	        if (breakIndex instanceof Data_Maybe.Nothing) {
	            return {
	                init: arr, 
	                rest: [  ]
	            };
	        };
	        throw new Error("Failed pattern match at Data.Array line 515, column 3 - line 521, column 30: " + [ breakIndex.constructor.name ]);
	    };
	};
	var takeWhile = function (p) {
	    return function (xs) {
	        return (span(p)(xs)).init;
	    };
	};
	var head = function (xs) {
	    return index(xs)(0);
	};
	var groupBy = function (op) {
	    var go = function (__copy_acc) {
	        return function (__copy_xs) {
	            var acc = __copy_acc;
	            var xs = __copy_xs;
	            tco: while (true) {
	                var $62 = uncons(xs);
	                if ($62 instanceof Data_Maybe.Just) {
	                    var sp = span(op($62.value0.head))($62.value0.tail);
	                    var __tco_acc = $foreign.cons(new Data_NonEmpty.NonEmpty($62.value0.head, sp.init))(acc);
	                    acc = __tco_acc;
	                    xs = sp.rest;
	                    continue tco;
	                };
	                if ($62 instanceof Data_Maybe.Nothing) {
	                    return $foreign.reverse(acc);
	                };
	                throw new Error("Failed pattern match at Data.Array line 554, column 15 - line 558, column 27: " + [ $62.constructor.name ]);
	            };
	        };
	    };
	    return go([  ]);
	};
	var group = function (dictEq) {
	    return function (xs) {
	        return groupBy(Data_Eq.eq(dictEq))(xs);
	    };
	};
	var group$prime = function (dictOrd) {
	    return function ($77) {
	        return group(dictOrd["__superclass_Data.Eq.Eq_0"]())(sort(dictOrd)($77));
	    };
	};
	var fromFoldable = function (dictFoldable) {
	    return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
	};
	var foldRecM = function (dictMonadRec) {
	    return function (f) {
	        return function (a) {
	            return function (array) {
	                var go = function (res) {
	                    return function (i) {
	                        if (i >= $foreign.length(array)) {
	                            return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Control_Monad_Rec_Class.Done(res));
	                        };
	                        if (Data_Boolean.otherwise) {
	                            return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(f(res)(Partial_Unsafe.unsafePartial(function (dictPartial) {
	                                return unsafeIndex(dictPartial)(array)(i);
	                            })))(function (v) {
	                                return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Control_Monad_Rec_Class.Loop({
	                                    a: v, 
	                                    b: i + 1 | 0
	                                }));
	                            });
	                        };
	                        throw new Error("Failed pattern match at Data.Array line 669, column 3 - line 673, column 42: " + [ res.constructor.name, i.constructor.name ]);
	                    };
	                };
	                return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(go)(a)(0);
	            };
	        };
	    };
	};
	var foldM = function (dictMonad) {
	    return function (f) {
	        return function (a) {
	            return $foreign["uncons'"](function (v) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(a);
	            })(function (b) {
	                return function (bs) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f(a)(b))(function (a$prime) {
	                        return foldM(dictMonad)(f)(a$prime)(bs);
	                    });
	                };
	            });
	        };
	    };
	};
	var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var insertBy = function (cmp) {
	    return function (x) {
	        return function (ys) {
	            var i = Data_Maybe.maybe(0)(function (v) {
	                return v + 1 | 0;
	            })(findLastIndex(function (y) {
	                return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
	            })(ys));
	            return Partial_Unsafe.unsafePartial(function (dictPartial) {
	                return Data_Maybe.fromJust(dictPartial)(insertAt(i)(x)(ys));
	            });
	        };
	    };
	};
	var insert = function (dictOrd) {
	    return insertBy(Data_Ord.compare(dictOrd));
	};
	var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var intersectBy = function (eq) {
	    return function (xs) {
	        return function (ys) {
	            return $foreign.filter(function (x) {
	                return Data_Maybe.isJust(findIndex(eq(x))(ys));
	            })(xs);
	        };
	    };
	};
	var intersect = function (dictEq) {
	    return intersectBy(Data_Eq.eq(dictEq));
	};
	var elemLastIndex = function (dictEq) {
	    return function (x) {
	        return findLastIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var elemIndex = function (dictEq) {
	    return function (x) {
	        return findIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var dropWhile = function (p) {
	    return function (xs) {
	        return (span(p)(xs)).rest;
	    };
	};
	var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var deleteBy = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2.length === 0) {
	                return [  ];
	            };
	            return Data_Maybe.maybe(v2)(function (i) {
	                return Partial_Unsafe.unsafePartial(function (dictPartial) {
	                    return Data_Maybe.fromJust(dictPartial)(deleteAt(i)(v2));
	                });
	            })(findIndex(v(v1))(v2));
	        };
	    };
	};
	var unionBy = function (eq) {
	    return function (xs) {
	        return function (ys) {
	            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
	        };
	    };
	};
	var union = function (dictEq) {
	    return unionBy(Data_Eq.eq(dictEq));
	};
	var $$delete = function (dictEq) {
	    return deleteBy(Data_Eq.eq(dictEq));
	};
	var difference = function (dictEq) {
	    return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictEq));
	};
	var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
	var mapMaybe = function (f) {
	    return concatMap(function ($78) {
	        return Data_Maybe.maybe([  ])(singleton)(f($78));
	    });
	};
	var filterA = function (dictApplicative) {
	    return function (p) {
	        return function ($79) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(mapMaybe(function (v) {
	                if (v.value1) {
	                    return new Data_Maybe.Just(v.value0);
	                };
	                if (!v.value1) {
	                    return Data_Maybe.Nothing.value;
	                };
	                throw new Error("Failed pattern match at Data.Array line 430, column 38 - line 430, column 67: " + [ v.value1.constructor.name ]);
	            }))(Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(function (x) {
	                return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Tuple.Tuple.create(x))(p(x));
	            })($79));
	        };
	    };
	};
	var filterM = function (dictMonad) {
	    return filterA(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	};
	var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
	var alterAt = function (i) {
	    return function (f) {
	        return function (xs) {
	            var go = function (x) {
	                var $75 = f(x);
	                if ($75 instanceof Data_Maybe.Nothing) {
	                    return deleteAt(i)(xs);
	                };
	                if ($75 instanceof Data_Maybe.Just) {
	                    return updateAt(i)($75.value0)(xs);
	                };
	                throw new Error("Failed pattern match at Data.Array line 389, column 10 - line 391, column 32: " + [ $75.constructor.name ]);
	            };
	            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
	        };
	    };
	};
	module.exports = {
	    alterAt: alterAt, 
	    catMaybes: catMaybes, 
	    concatMap: concatMap, 
	    "delete": $$delete, 
	    deleteAt: deleteAt, 
	    deleteBy: deleteBy, 
	    difference: difference, 
	    dropWhile: dropWhile, 
	    elemIndex: elemIndex, 
	    elemLastIndex: elemLastIndex, 
	    filterA: filterA, 
	    filterM: filterM, 
	    findIndex: findIndex, 
	    findLastIndex: findLastIndex, 
	    foldM: foldM, 
	    foldRecM: foldRecM, 
	    fromFoldable: fromFoldable, 
	    group: group, 
	    "group'": group$prime, 
	    groupBy: groupBy, 
	    head: head, 
	    index: index, 
	    init: init, 
	    insert: insert, 
	    insertAt: insertAt, 
	    insertBy: insertBy, 
	    intersect: intersect, 
	    intersectBy: intersectBy, 
	    last: last, 
	    many: many, 
	    mapMaybe: mapMaybe, 
	    mapWithIndex: mapWithIndex, 
	    modifyAt: modifyAt, 
	    nub: nub, 
	    nubBy: nubBy, 
	    "null": $$null, 
	    singleton: singleton, 
	    some: some, 
	    sort: sort, 
	    sortBy: sortBy, 
	    span: span, 
	    tail: tail, 
	    takeWhile: takeWhile, 
	    toUnfoldable: toUnfoldable, 
	    uncons: uncons, 
	    union: union, 
	    unionBy: unionBy, 
	    unsafeIndex: unsafeIndex, 
	    unsnoc: unsnoc, 
	    unzip: unzip, 
	    updateAt: updateAt, 
	    zip: zip, 
	    zipWithA: zipWithA, 
	    concat: $foreign.concat, 
	    cons: $foreign.cons, 
	    drop: $foreign.drop, 
	    filter: $foreign.filter, 
	    length: $foreign.length, 
	    partition: $foreign.partition, 
	    range: $foreign.range, 
	    replicate: $foreign.replicate, 
	    reverse: $foreign.reverse, 
	    slice: $foreign.slice, 
	    snoc: $foreign.snoc, 
	    take: $foreign.take, 
	    zipWith: $foreign.zipWith
	};


/***/ },
/* 70 */
/***/ function(module, exports) {

	"use strict";

	//------------------------------------------------------------------------------
	// Array creation --------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.range = function (start) {
	  return function (end) {
	    var step = start > end ? -1 : 1;
	    var result = [];
	    for (var i = start, n = 0; i !== end; i += step) {
	      result[n++] = i;
	    }
	    result[n] = i;
	    return result;
	  };
	};

	exports.replicate = function (count) {
	  return function (value) {
	    var result = [];
	    var n = 0;
	    for (var i = 0; i < count; i++) {
	      result[n++] = value;
	    }
	    return result;
	  };
	};

	exports.fromFoldableImpl = function () {
	  // jshint maxparams: 2
	  function Cons(head, tail) {
	    this.head = head;
	    this.tail = tail;
	  }
	  var emptyList = {};

	  function curryCons(head) {
	    return function (tail) {
	      return new Cons(head, tail);
	    };
	  }

	  function listToArray(list) {
	    var result = [];
	    var count = 0;
	    while (list !== emptyList) {
	      result[count++] = list.head;
	      list = list.tail;
	    }
	    return result;
	  }

	  return function (foldr) {
	    return function (xs) {
	      return listToArray(foldr(curryCons)(emptyList)(xs));
	    };
	  };
	}();

	//------------------------------------------------------------------------------
	// Array size ------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.length = function (xs) {
	  return xs.length;
	};

	//------------------------------------------------------------------------------
	// Extending arrays ------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.cons = function (e) {
	  return function (l) {
	    return [e].concat(l);
	  };
	};

	exports.snoc = function (l) {
	  return function (e) {
	    var l1 = l.slice();
	    l1.push(e);
	    return l1;
	  };
	};

	//------------------------------------------------------------------------------
	// Non-indexed reads -----------------------------------------------------------
	//------------------------------------------------------------------------------

	exports["uncons'"] = function (empty) {
	  return function (next) {
	    return function (xs) {
	      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
	    };
	  };
	};

	//------------------------------------------------------------------------------
	// Indexed operations ----------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.indexImpl = function (just) {
	  return function (nothing) {
	    return function (xs) {
	      return function (i) {
	        return i < 0 || i >= xs.length ? nothing : just(xs[i]);
	      };
	    };
	  };
	};

	exports.findIndexImpl = function (just) {
	  return function (nothing) {
	    return function (f) {
	      return function (xs) {
	        for (var i = 0, l = xs.length; i < l; i++) {
	          if (f(xs[i])) return just(i);
	        }
	        return nothing;
	      };
	    };
	  };
	};

	exports.findLastIndexImpl = function (just) {
	  return function (nothing) {
	    return function (f) {
	      return function (xs) {
	        for (var i = xs.length - 1; i >= 0; i--) {
	          if (f(xs[i])) return just(i);
	        }
	        return nothing;
	      };
	    };
	  };
	};

	exports._insertAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (a) {
	        return function (l) {
	          if (i < 0 || i > l.length) return nothing;
	          var l1 = l.slice();
	          l1.splice(i, 0, a);
	          return just(l1);
	        };
	      };
	    };
	  };
	};

	exports._deleteAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (l) {
	        if (i < 0 || i >= l.length) return nothing;
	        var l1 = l.slice();
	        l1.splice(i, 1);
	        return just(l1);
	      };
	    };
	  };
	};

	exports._updateAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (a) {
	        return function (l) {
	          if (i < 0 || i >= l.length) return nothing;
	          var l1 = l.slice();
	          l1[i] = a;
	          return just(l1);
	        };
	      };
	    };
	  };
	};

	//------------------------------------------------------------------------------
	// Transformations -------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.reverse = function (l) {
	  return l.slice().reverse();
	};

	exports.concat = function (xss) {
	  var result = [];
	  for (var i = 0, l = xss.length; i < l; i++) {
	    var xs = xss[i];
	    for (var j = 0, m = xs.length; j < m; j++) {
	      result.push(xs[j]);
	    }
	  }
	  return result;
	};

	exports.filter = function (f) {
	  return function (xs) {
	    return xs.filter(f);
	  };
	};

	exports.partition = function (f) {
	  return function (xs) {
	    var yes = [];
	    var no = [];
	    for (var i = 0; i < xs.length; i++) {
	      var x = xs[i];
	      if (f(x)) yes.push(x);else no.push(x);
	    }
	    return { yes: yes, no: no };
	  };
	};

	//------------------------------------------------------------------------------
	// Sorting ---------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.sortImpl = function (f) {
	  return function (l) {
	    // jshint maxparams: 2
	    return l.slice().sort(function (x, y) {
	      return f(x)(y);
	    });
	  };
	};

	//------------------------------------------------------------------------------
	// Subarrays -------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.slice = function (s) {
	  return function (e) {
	    return function (l) {
	      return l.slice(s, e);
	    };
	  };
	};

	exports.take = function (n) {
	  return function (l) {
	    return n < 1 ? [] : l.slice(0, n);
	  };
	};

	exports.drop = function (n) {
	  return function (l) {
	    return n < 1 ? l : l.slice(n);
	  };
	};

	//------------------------------------------------------------------------------
	// Zipping ---------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.zipWith = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var l = xs.length < ys.length ? xs.length : ys.length;
	      var result = new Array(l);
	      for (var i = 0; i < l; i++) {
	        result[i] = f(xs[i])(ys[i]);
	      }
	      return result;
	    };
	  };
	};

	//------------------------------------------------------------------------------
	// Partial ---------------------------------------------------------------------
	//------------------------------------------------------------------------------

	exports.unsafeIndexImpl = function (xs) {
	  return function (n) {
	    return xs[n];
	  };
	};

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Data_Unit = __webpack_require__(8);
	var Lazy = function (defer) {
	    this.defer = defer;
	};
	var defer = function (dict) {
	    return dict.defer;
	};
	var fix = function (dictLazy) {
	    return function (f) {
	        return defer(dictLazy)(function (v) {
	            return f(fix(dictLazy)(f));
	        });
	    };
	};
	module.exports = {
	    Lazy: Lazy, 
	    defer: defer, 
	    fix: fix
	};


/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Monad_Eff = __webpack_require__(73);
	var Control_Monad_Eff_Unsafe = __webpack_require__(75);
	var Control_Monad_ST = __webpack_require__(77);
	var Data_Either = __webpack_require__(15);
	var Data_Identity = __webpack_require__(79);
	var Data_Bifunctor = __webpack_require__(55);
	var Partial_Unsafe = __webpack_require__(80);
	var Data_Functor = __webpack_require__(3);
	var Control_Semigroupoid = __webpack_require__(7);
	var Control_Bind = __webpack_require__(20);
	var Control_Applicative = __webpack_require__(17);
	var Data_Unit = __webpack_require__(8);
	var Loop = (function () {
	    function Loop(value0) {
	        this.value0 = value0;
	    };
	    Loop.create = function (value0) {
	        return new Loop(value0);
	    };
	    return Loop;
	})();
	var Done = (function () {
	    function Done(value0) {
	        this.value0 = value0;
	    };
	    Done.create = function (value0) {
	        return new Done(value0);
	    };
	    return Done;
	})();
	var MonadRec = function (__superclass_Control$dotMonad$dotMonad_0, tailRecM) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.tailRecM = tailRecM;
	};
	var tailRecM = function (dict) {
	    return dict.tailRecM;
	};
	var tailRecM2 = function (dictMonadRec) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return tailRecM(dictMonadRec)(function (o) {
	                    return f(o.a)(o.b);
	                })({
	                    a: a, 
	                    b: b
	                });
	            };
	        };
	    };
	};
	var tailRecM3 = function (dictMonadRec) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return tailRecM(dictMonadRec)(function (o) {
	                        return f(o.a)(o.b)(o.c);
	                    })({
	                        a: a, 
	                        b: b, 
	                        c: c
	                    });
	                };
	            };
	        };
	    };
	};
	var tailRecEff = function (f) {
	    return function (a) {
	        var fromDone = Partial_Unsafe.unsafePartial(function (dictPartial) {
	            return function (v) {
	                var __unused = function (dictPartial1) {
	                    return function ($dollar15) {
	                        return $dollar15;
	                    };
	                };
	                return __unused(dictPartial)((function () {
	                    if (v instanceof Done) {
	                        return v.value0;
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Rec.Class line 130, column 14 - line 130, column 42: " + [ v.constructor.name ]);
	                })());
	            };
	        });
	        var f$prime = function ($47) {
	            return Control_Monad_Eff_Unsafe.unsafeCoerceEff(f($47));
	        };
	        return function __do() {
	            var v = f$prime(a)();
	            var v1 = {
	                value: v
	            };
	            (function () {
	                while (!(function __do() {
	                    var v2 = v1.value;
	                    if (v2 instanceof Loop) {
	                        var v3 = f$prime(v2.value0)();
	                        v1.value = v3;
	                        return false;
	                    };
	                    if (v2 instanceof Done) {
	                        return true;
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Rec.Class line 119, column 5 - line 124, column 26: " + [ v2.constructor.name ]);
	                })()) {

	                };
	                return {};
	            })();
	            return Data_Functor.map(Control_Monad_Eff.functorEff)(fromDone)(Control_Monad_ST.readSTRef(v1))();
	        };
	    };
	};
	var tailRec = function (f) {
	    var go = function (__copy_v) {
	        var v = __copy_v;
	        tco: while (true) {
	            if (v instanceof Loop) {
	                var __tco_v = f(v.value0);
	                v = __tco_v;
	                continue tco;
	            };
	            if (v instanceof Done) {
	                return v.value0;
	            };
	            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 93, column 1 - line 96, column 18: " + [ v.constructor.name ]);
	        };
	    };
	    return function ($48) {
	        return go(f($48));
	    };
	};
	var monadRecIdentity = new MonadRec(function () {
	    return Data_Identity.monadIdentity;
	}, function (f) {
	    var runIdentity = function (v) {
	        return v;
	    };
	    return function ($49) {
	        return Data_Identity.Identity(tailRec(function ($50) {
	            return runIdentity(f($50));
	        })($49));
	    };
	});
	var monadRecEither = new MonadRec(function () {
	    return Data_Either.monadEither;
	}, function (f) {
	    return function (a0) {
	        var g = function (v) {
	            if (v instanceof Data_Either.Left) {
	                return new Done(new Data_Either.Left(v.value0));
	            };
	            if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
	                return new Loop(f(v.value0.value0));
	            };
	            if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
	                return new Done(new Data_Either.Right(v.value0.value0));
	            };
	            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 108, column 7 - line 108, column 33: " + [ v.constructor.name ]);
	        };
	        return tailRec(g)(f(a0));
	    };
	});
	var monadRecEff = new MonadRec(function () {
	    return Control_Monad_Eff.monadEff;
	}, tailRecEff);
	var functorStep = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        if (v instanceof Loop) {
	            return new Loop(v.value0);
	        };
	        if (v instanceof Done) {
	            return new Done(f(v.value0));
	        };
	        throw new Error("Failed pattern match at Control.Monad.Rec.Class line 28, column 3 - line 28, column 26: " + [ f.constructor.name, v.constructor.name ]);
	    };
	});
	var forever = function (dictMonadRec) {
	    return function (ma) {
	        return tailRecM(dictMonadRec)(function (u) {
	            return Data_Functor.voidRight((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(new Loop(u))(ma);
	        })(Data_Unit.unit);
	    };
	};
	var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Loop) {
	                return new Loop(v(v2.value0));
	            };
	            if (v2 instanceof Done) {
	                return new Done(v1(v2.value0));
	            };
	            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 32, column 3 - line 32, column 34: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	});
	module.exports = {
	    Loop: Loop, 
	    Done: Done, 
	    MonadRec: MonadRec, 
	    forever: forever, 
	    tailRec: tailRec, 
	    tailRecM: tailRecM, 
	    tailRecM2: tailRecM2, 
	    tailRecM3: tailRecM3, 
	    functorStep: functorStep, 
	    bifunctorStep: bifunctorStep, 
	    monadRecIdentity: monadRecIdentity, 
	    monadRecEff: monadRecEff, 
	    monadRecEither: monadRecEither
	};


/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(74);
	var Control_Applicative = __webpack_require__(17);
	var Control_Apply = __webpack_require__(18);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Data_Functor = __webpack_require__(3);
	var Data_Unit = __webpack_require__(8);
	var monadEff = new Control_Monad.Monad(function () {
	    return applicativeEff;
	}, function () {
	    return bindEff;
	});
	var bindEff = new Control_Bind.Bind(function () {
	    return applyEff;
	}, $foreign.bindE);
	var applyEff = new Control_Apply.Apply(function () {
	    return functorEff;
	}, Control_Monad.ap(monadEff));
	var applicativeEff = new Control_Applicative.Applicative(function () {
	    return applyEff;
	}, $foreign.pureE);
	var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
	module.exports = {
	    functorEff: functorEff, 
	    applyEff: applyEff, 
	    applicativeEff: applicativeEff, 
	    bindEff: bindEff, 
	    monadEff: monadEff, 
	    forE: $foreign.forE, 
	    foreachE: $foreign.foreachE, 
	    runPure: $foreign.runPure, 
	    untilE: $foreign.untilE, 
	    whileE: $foreign.whileE
	};


/***/ },
/* 74 */
/***/ function(module, exports) {

	"use strict";

	exports.pureE = function (a) {
	  return function () {
	    return a;
	  };
	};

	exports.bindE = function (a) {
	  return function (f) {
	    return function () {
	      return f(a())();
	    };
	  };
	};

	exports.runPure = function (f) {
	  return f();
	};

	exports.untilE = function (f) {
	  return function () {
	    while (!f()) {}
	    return {};
	  };
	};

	exports.whileE = function (f) {
	  return function (a) {
	    return function () {
	      while (f()) {
	        a();
	      }
	      return {};
	    };
	  };
	};

	exports.forE = function (lo) {
	  return function (hi) {
	    return function (f) {
	      return function () {
	        for (var i = lo; i < hi; i++) {
	          f(i)();
	        }
	      };
	    };
	  };
	};

	exports.foreachE = function (as) {
	  return function (f) {
	    return function () {
	      for (var i = 0, l = as.length; i < l; i++) {
	        f(as[i])();
	      }
	    };
	  };
	};

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(76);
	var Control_Monad_Eff = __webpack_require__(73);
	var Control_Semigroupoid = __webpack_require__(7);
	var unsafePerformEff = function ($0) {
	    return Control_Monad_Eff.runPure($foreign.unsafeCoerceEff($0));
	};
	module.exports = {
	    unsafePerformEff: unsafePerformEff, 
	    unsafeCoerceEff: $foreign.unsafeCoerceEff
	};


/***/ },
/* 76 */
/***/ function(module, exports) {

	"use strict";

	exports.unsafeCoerceEff = function (f) {
	  return f;
	};

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(78);
	var Control_Monad_Eff = __webpack_require__(73);
	var pureST = function (st) {
	    return Control_Monad_Eff.runPure($foreign.runST(st));
	};
	module.exports = {
	    pureST: pureST, 
	    modifySTRef: $foreign.modifySTRef, 
	    newSTRef: $foreign.newSTRef, 
	    readSTRef: $foreign.readSTRef, 
	    runST: $foreign.runST, 
	    writeSTRef: $foreign.writeSTRef
	};


/***/ },
/* 78 */
/***/ function(module, exports) {

	"use strict";

	exports.newSTRef = function (val) {
	  return function () {
	    return { value: val };
	  };
	};

	exports.readSTRef = function (ref) {
	  return function () {
	    return ref.value;
	  };
	};

	exports.modifySTRef = function (ref) {
	  return function (f) {
	    return function () {
	      /* jshint boss: true */
	      return ref.value = f(ref.value);
	    };
	  };
	};

	exports.writeSTRef = function (ref) {
	  return function (a) {
	    return function () {
	      /* jshint boss: true */
	      return ref.value = a;
	    };
	  };
	};

	exports.runST = function (f) {
	  return f;
	};

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Alt = __webpack_require__(2);
	var Control_Comonad = __webpack_require__(49);
	var Control_Extend = __webpack_require__(45);
	var Data_Foldable = __webpack_require__(57);
	var Data_Functor_Invariant = __webpack_require__(50);
	var Data_Monoid = __webpack_require__(47);
	var Data_Newtype = __webpack_require__(51);
	var Data_Traversable = __webpack_require__(67);
	var Data_Eq = __webpack_require__(31);
	var Data_Ord = __webpack_require__(29);
	var Data_Bounded = __webpack_require__(27);
	var Data_HeytingAlgebra = __webpack_require__(25);
	var Data_BooleanAlgebra = __webpack_require__(24);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Semiring = __webpack_require__(38);
	var Data_EuclideanRing = __webpack_require__(41);
	var Data_Ring = __webpack_require__(36);
	var Data_CommutativeRing = __webpack_require__(40);
	var Data_Field = __webpack_require__(43);
	var Data_Show = __webpack_require__(10);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(17);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Identity = function (x) {
	    return x;
	};
	var showIdentity = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Identity " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semiringIdentity = function (dictSemiring) {
	    return dictSemiring;
	};
	var semigroupIdenity = function (dictSemigroup) {
	    return dictSemigroup;
	};
	var ringIdentity = function (dictRing) {
	    return dictRing;
	};
	var ordIdentity = function (dictOrd) {
	    return dictOrd;
	};
	var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Identity);
	var monoidIdentity = function (dictMonoid) {
	    return dictMonoid;
	};
	var heytingAlgebraIdentity = function (dictHeytingAlgebra) {
	    return dictHeytingAlgebra;
	};
	var functorIdentity = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
	var foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var traversableIdentity = new Data_Traversable.Traversable(function () {
	    return foldableIdentity;
	}, function () {
	    return functorIdentity;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Identity)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Identity)(f(v));
	        };
	    };
	});
	var fieldIdentity = function (dictField) {
	    return dictField;
	};
	var extendIdentity = new Control_Extend.Extend(function () {
	    return functorIdentity;
	}, function (f) {
	    return function (m) {
	        return f(m);
	    };
	});
	var euclideanRingIdentity = function (dictEuclideanRing) {
	    return dictEuclideanRing;
	};
	var eqIdentity = function (dictEq) {
	    return dictEq;
	};
	var comonadIdentity = new Control_Comonad.Comonad(function () {
	    return extendIdentity;
	}, function (v) {
	    return v;
	});
	var commutativeRingIdentity = function (dictCommutativeRing) {
	    return dictCommutativeRing;
	};
	var boundedIdentity = function (dictBounded) {
	    return dictBounded;
	};
	var booleanAlgebraIdentity = function (dictBooleanAlgebra) {
	    return dictBooleanAlgebra;
	};
	var applyIdentity = new Control_Apply.Apply(function () {
	    return functorIdentity;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindIdentity = new Control_Bind.Bind(function () {
	    return applyIdentity;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeIdentity = new Control_Applicative.Applicative(function () {
	    return applyIdentity;
	}, Identity);
	var monadIdentity = new Control_Monad.Monad(function () {
	    return applicativeIdentity;
	}, function () {
	    return bindIdentity;
	});
	var altIdentity = new Control_Alt.Alt(function () {
	    return functorIdentity;
	}, function (x) {
	    return function (v) {
	        return x;
	    };
	});
	module.exports = {
	    Identity: Identity, 
	    newtypeIdentity: newtypeIdentity, 
	    eqIdentity: eqIdentity, 
	    ordIdentity: ordIdentity, 
	    boundedIdentity: boundedIdentity, 
	    heytingAlgebraIdentity: heytingAlgebraIdentity, 
	    booleanAlgebraIdentity: booleanAlgebraIdentity, 
	    semigroupIdenity: semigroupIdenity, 
	    monoidIdentity: monoidIdentity, 
	    semiringIdentity: semiringIdentity, 
	    euclideanRingIdentity: euclideanRingIdentity, 
	    ringIdentity: ringIdentity, 
	    commutativeRingIdentity: commutativeRingIdentity, 
	    fieldIdentity: fieldIdentity, 
	    showIdentity: showIdentity, 
	    functorIdentity: functorIdentity, 
	    invariantIdentity: invariantIdentity, 
	    altIdentity: altIdentity, 
	    applyIdentity: applyIdentity, 
	    applicativeIdentity: applicativeIdentity, 
	    bindIdentity: bindIdentity, 
	    monadIdentity: monadIdentity, 
	    extendIdentity: extendIdentity, 
	    comonadIdentity: comonadIdentity, 
	    foldableIdentity: foldableIdentity, 
	    traversableIdentity: traversableIdentity
	};


/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(81);
	var Partial = __webpack_require__(82);
	var unsafeCrashWith = function (msg) {
	    return $foreign.unsafePartial(function (dictPartial) {
	        return Partial.crashWith(dictPartial)(msg);
	    });
	};
	module.exports = {
	    unsafeCrashWith: unsafeCrashWith, 
	    unsafePartial: $foreign.unsafePartial
	};


/***/ },
/* 81 */
/***/ function(module, exports) {

	"use strict";

	// module Partial.Unsafe

	exports.unsafePartial = function (f) {
	  return f();
	};

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(83);
	var crash = function (dictPartial) {
	    return $foreign.crashWith(dictPartial)("Partial.crash: partial function");
	};
	module.exports = {
	    crash: crash, 
	    crashWith: $foreign.crashWith
	};


/***/ },
/* 83 */
/***/ function(module, exports) {

	"use strict";

	// module Partial

	exports.crashWith = function () {
	  return function (msg) {
	    throw new Error(msg);
	  };
	};

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Alt = __webpack_require__(2);
	var Control_Alternative = __webpack_require__(61);
	var Control_Plus = __webpack_require__(59);
	var Data_Foldable = __webpack_require__(57);
	var Data_Traversable = __webpack_require__(67);
	var Data_Show = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Eq = __webpack_require__(31);
	var Data_HeytingAlgebra = __webpack_require__(25);
	var Data_Ord = __webpack_require__(29);
	var Data_Ordering = __webpack_require__(35);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(17);
	var Control_Category = __webpack_require__(6);
	var NonEmpty = (function () {
	    function NonEmpty(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    NonEmpty.create = function (value0) {
	        return function (value1) {
	            return new NonEmpty(value0, value1);
	        };
	    };
	    return NonEmpty;
	})();
	var tail = function (v) {
	    return v.value1;
	};
	var singleton = function (dictPlus) {
	    return function (a) {
	        return new NonEmpty(a, Control_Plus.empty(dictPlus));
	    };
	};
	var showNonEmpty = function (dictShow) {
	    return function (dictShow1) {
	        return new Data_Show.Show(function (v) {
	            return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
	        });
	    };
	};
	var oneOf = function (dictAlternative) {
	    return function (v) {
	        return Control_Alt.alt((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())(v.value0))(v.value1);
	    };
	};
	var head = function (v) {
	    return v.value0;
	};
	var functorNonEmpty = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return new NonEmpty(f(v.value0), Data_Functor.map(dictFunctor)(f)(v.value1));
	        };
	    });
	};
	var fromNonEmpty = function (f) {
	    return function (v) {
	        return f(v.value0)(v.value1);
	    };
	};
	var foldl1 = function (dictFoldable) {
	    return function (f) {
	        return function (v) {
	            return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
	        };
	    };
	};
	var foldableNonEmpty = function (dictFoldable) {
	    return new Data_Foldable.Foldable(function (dictMonoid) {
	        return function (f) {
	            return function (v) {
	                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
	            };
	        };
	    }, function (f) {
	        return function (b) {
	            return function (v) {
	                return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
	            };
	        };
	    }, function (f) {
	        return function (b) {
	            return function (v) {
	                return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
	            };
	        };
	    });
	};
	var traversableNonEmpty = function (dictTraversable) {
	    return new Data_Traversable.Traversable(function () {
	        return foldableNonEmpty(dictTraversable["__superclass_Data.Foldable.Foldable_1"]());
	    }, function () {
	        return functorNonEmpty(dictTraversable["__superclass_Data.Functor.Functor_0"]());
	    }, function (dictApplicative) {
	        return function (v) {
	            return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(NonEmpty.create)(v.value0))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
	        };
	    }, function (dictApplicative) {
	        return function (f) {
	            return function (v) {
	                return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(NonEmpty.create)(f(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
	            };
	        };
	    });
	};
	var foldMap1 = function (dictSemigroup) {
	    return function (dictFoldable) {
	        return function (f) {
	            return function (v) {
	                return Data_Foldable.foldl(dictFoldable)(function (s) {
	                    return function (a1) {
	                        return Data_Semigroup.append(dictSemigroup)(s)(f(a1));
	                    };
	                })(f(v.value0))(v.value1);
	            };
	        };
	    };
	};
	var fold1 = function (dictSemigroup) {
	    return function (dictFoldable) {
	        return foldMap1(dictSemigroup)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var eqNonEmpty = function (dictEq) {
	    return function (dictEq1) {
	        return new Data_Eq.Eq(function (x) {
	            return function (y) {
	                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
	            };
	        });
	    };
	};
	var ordNonEmpty = function (dictOrd) {
	    return function (dictOrd1) {
	        return new Data_Ord.Ord(function () {
	            return eqNonEmpty(dictOrd["__superclass_Data.Eq.Eq_0"]())(dictOrd1["__superclass_Data.Eq.Eq_0"]());
	        }, function (x) {
	            return function (y) {
	                var $101 = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
	                if ($101 instanceof Data_Ordering.LT) {
	                    return Data_Ordering.LT.value;
	                };
	                if ($101 instanceof Data_Ordering.GT) {
	                    return Data_Ordering.GT.value;
	                };
	                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
	            };
	        });
	    };
	};
	module.exports = {
	    NonEmpty: NonEmpty, 
	    fold1: fold1, 
	    foldMap1: foldMap1, 
	    foldl1: foldl1, 
	    fromNonEmpty: fromNonEmpty, 
	    head: head, 
	    oneOf: oneOf, 
	    singleton: singleton, 
	    tail: tail, 
	    showNonEmpty: showNonEmpty, 
	    eqNonEmpty: eqNonEmpty, 
	    ordNonEmpty: ordNonEmpty, 
	    functorNonEmpty: functorNonEmpty, 
	    foldableNonEmpty: foldableNonEmpty, 
	    traversableNonEmpty: traversableNonEmpty
	};


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Biapplicative = __webpack_require__(86);
	var Control_Biapply = __webpack_require__(87);
	var Control_Comonad = __webpack_require__(49);
	var Control_Extend = __webpack_require__(45);
	var Control_Lazy = __webpack_require__(71);
	var Data_Bifoldable = __webpack_require__(46);
	var Data_Bifunctor = __webpack_require__(55);
	var Data_Bitraversable = __webpack_require__(56);
	var Data_Foldable = __webpack_require__(57);
	var Data_Functor_Invariant = __webpack_require__(50);
	var Data_HeytingAlgebra = __webpack_require__(25);
	var Data_Maybe = __webpack_require__(60);
	var Data_Maybe_First = __webpack_require__(63);
	var Data_Monoid = __webpack_require__(47);
	var Data_Newtype = __webpack_require__(51);
	var Data_Traversable = __webpack_require__(67);
	var Data_Show = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Eq = __webpack_require__(31);
	var Data_Ord = __webpack_require__(29);
	var Data_Ordering = __webpack_require__(35);
	var Data_Bounded = __webpack_require__(27);
	var Control_Semigroupoid = __webpack_require__(7);
	var Data_Semiring = __webpack_require__(38);
	var Data_Ring = __webpack_require__(36);
	var Data_CommutativeRing = __webpack_require__(40);
	var Data_BooleanAlgebra = __webpack_require__(24);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(17);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Data_Function = __webpack_require__(5);
	var Data_Unit = __webpack_require__(8);
	var Tuple = (function () {
	    function Tuple(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Tuple.create = function (value0) {
	        return function (value1) {
	            return new Tuple(value0, value1);
	        };
	    };
	    return Tuple;
	})();
	var uncurry = function (f) {
	    return function (v) {
	        return f(v.value0)(v.value1);
	    };
	};
	var swap = function (v) {
	    return new Tuple(v.value1, v.value0);
	};
	var snd = function (v) {
	    return v.value1;
	};
	var showTuple = function (dictShow) {
	    return function (dictShow1) {
	        return new Data_Show.Show(function (v) {
	            return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
	        });
	    };
	};
	var semiringTuple = function (dictSemiring) {
	    return function (dictSemiring1) {
	        return new Data_Semiring.Semiring(function (v) {
	            return function (v1) {
	                return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
	            };
	        }, function (v) {
	            return function (v1) {
	                return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
	            };
	        }, new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)), new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1)));
	    };
	};
	var semigroupoidTuple = new Control_Semigroupoid.Semigroupoid(function (v) {
	    return function (v1) {
	        return new Tuple(v1.value0, v.value1);
	    };
	});
	var semigroupTuple = function (dictSemigroup) {
	    return function (dictSemigroup1) {
	        return new Data_Semigroup.Semigroup(function (v) {
	            return function (v1) {
	                return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
	            };
	        });
	    };
	};
	var ringTuple = function (dictRing) {
	    return function (dictRing1) {
	        return new Data_Ring.Ring(function () {
	            return semiringTuple(dictRing["__superclass_Data.Semiring.Semiring_0"]())(dictRing1["__superclass_Data.Semiring.Semiring_0"]());
	        }, function (v) {
	            return function (v1) {
	                return new Tuple(Data_Ring.sub(dictRing)(v.value0)(v1.value0), Data_Ring.sub(dictRing1)(v.value1)(v1.value1));
	            };
	        });
	    };
	};
	var monoidTuple = function (dictMonoid) {
	    return function (dictMonoid1) {
	        return new Data_Monoid.Monoid(function () {
	            return semigroupTuple(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(dictMonoid1["__superclass_Data.Semigroup.Semigroup_0"]());
	        }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
	    };
	};
	var lookup = function (dictFoldable) {
	    return function (dictEq) {
	        return function (a) {
	            return function ($255) {
	                return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
	                    var $135 = Data_Eq.eq(dictEq)(a)(v.value0);
	                    if ($135) {
	                        return new Data_Maybe.Just(v.value1);
	                    };
	                    if (!$135) {
	                        return Data_Maybe.Nothing.value;
	                    };
	                    throw new Error("Failed pattern match at Data.Tuple line 170, column 55 - line 170, column 90: " + [ $135.constructor.name ]);
	                })($255));
	            };
	        };
	    };
	};
	var heytingAlgebraTuple = function (dictHeytingAlgebra) {
	    return function (dictHeytingAlgebra1) {
	        return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
	            return function (v1) {
	                return new Tuple(Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.conj(dictHeytingAlgebra1)(v.value1)(v1.value1));
	            };
	        }, function (v) {
	            return function (v1) {
	                return new Tuple(Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.disj(dictHeytingAlgebra1)(v.value1)(v1.value1));
	            };
	        }, new Tuple(Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra1)), function (v) {
	            return function (v1) {
	                return new Tuple(Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.implies(dictHeytingAlgebra1)(v.value1)(v1.value1));
	            };
	        }, function (v) {
	            return new Tuple(Data_HeytingAlgebra.not(dictHeytingAlgebra)(v.value0), Data_HeytingAlgebra.not(dictHeytingAlgebra1)(v.value1));
	        }, new Tuple(Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra1)));
	    };
	};
	var functorTuple = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return new Tuple(v.value0, f(v.value1));
	    };
	});
	var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
	var fst = function (v) {
	    return v.value0;
	};
	var lazyTuple = function (dictLazy) {
	    return function (dictLazy1) {
	        return new Control_Lazy.Lazy(function (f) {
	            return new Tuple(Control_Lazy.defer(dictLazy)(function (v) {
	                return fst(f(Data_Unit.unit));
	            }), Control_Lazy.defer(dictLazy1)(function (v) {
	                return snd(f(Data_Unit.unit));
	            }));
	        });
	    };
	};
	var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v.value1);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v.value1);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v.value1)(z);
	        };
	    };
	});
	var traversableTuple = new Data_Traversable.Traversable(function () {
	    return foldableTuple;
	}, function () {
	    return functorTuple;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Tuple.create(v.value0))(v.value1);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Tuple.create(v.value0))(f(v.value1));
	        };
	    };
	});
	var extendTuple = new Control_Extend.Extend(function () {
	    return functorTuple;
	}, function (f) {
	    return function (v) {
	        return new Tuple(v.value0, f(v));
	    };
	});
	var eqTuple = function (dictEq) {
	    return function (dictEq1) {
	        return new Data_Eq.Eq(function (x) {
	            return function (y) {
	                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
	            };
	        });
	    };
	};
	var ordTuple = function (dictOrd) {
	    return function (dictOrd1) {
	        return new Data_Ord.Ord(function () {
	            return eqTuple(dictOrd["__superclass_Data.Eq.Eq_0"]())(dictOrd1["__superclass_Data.Eq.Eq_0"]());
	        }, function (x) {
	            return function (y) {
	                var $201 = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
	                if ($201 instanceof Data_Ordering.LT) {
	                    return Data_Ordering.LT.value;
	                };
	                if ($201 instanceof Data_Ordering.GT) {
	                    return Data_Ordering.GT.value;
	                };
	                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
	            };
	        });
	    };
	};
	var curry = function (f) {
	    return function (a) {
	        return function (b) {
	            return f(new Tuple(a, b));
	        };
	    };
	};
	var comonadTuple = new Control_Comonad.Comonad(function () {
	    return extendTuple;
	}, snd);
	var commutativeRingTuple = function (dictCommutativeRing) {
	    return function (dictCommutativeRing1) {
	        return new Data_CommutativeRing.CommutativeRing(function () {
	            return ringTuple(dictCommutativeRing["__superclass_Data.Ring.Ring_0"]())(dictCommutativeRing1["__superclass_Data.Ring.Ring_0"]());
	        });
	    };
	};
	var boundedTuple = function (dictBounded) {
	    return function (dictBounded1) {
	        return new Data_Bounded.Bounded(function () {
	            return ordTuple(dictBounded["__superclass_Data.Ord.Ord_0"]())(dictBounded1["__superclass_Data.Ord.Ord_0"]());
	        }, new Tuple(Data_Bounded.bottom(dictBounded), Data_Bounded.bottom(dictBounded1)), new Tuple(Data_Bounded.top(dictBounded), Data_Bounded.top(dictBounded1)));
	    };
	};
	var booleanAlgebraTuple = function (dictBooleanAlgebra) {
	    return function (dictBooleanAlgebra1) {
	        return new Data_BooleanAlgebra.BooleanAlgebra(function () {
	            return heytingAlgebraTuple(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]())(dictBooleanAlgebra1["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]());
	        });
	    };
	};
	var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return new Tuple(f(v.value0), g(v.value1));
	        };
	    };
	});
	var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
	    return function (f) {
	        return function (g) {
	            return function (v) {
	                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(v.value0))(g(v.value1));
	            };
	        };
	    };
	}, function (f) {
	    return function (g) {
	        return function (z) {
	            return function (v) {
	                return g(f(z)(v.value0))(v.value1);
	            };
	        };
	    };
	}, function (f) {
	    return function (g) {
	        return function (z) {
	            return function (v) {
	                return f(v.value0)(g(v.value1)(z));
	            };
	        };
	    };
	});
	var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
	    return bifoldableTuple;
	}, function () {
	    return bifunctorTuple;
	}, function (dictApplicative) {
	    return function (v) {
	        return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Tuple.create)(v.value0))(v.value1);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (g) {
	            return function (v) {
	                return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Tuple.create)(f(v.value0)))(g(v.value1));
	            };
	        };
	    };
	});
	var biapplyTuple = new Control_Biapply.Biapply(function () {
	    return bifunctorTuple;
	}, function (v) {
	    return function (v1) {
	        return new Tuple(v.value0(v1.value0), v.value1(v1.value1));
	    };
	});
	var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
	    return biapplyTuple;
	}, Tuple.create);
	var applyTuple = function (dictSemigroup) {
	    return new Control_Apply.Apply(function () {
	        return functorTuple;
	    }, function (v) {
	        return function (v1) {
	            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
	        };
	    });
	};
	var bindTuple = function (dictSemigroup) {
	    return new Control_Bind.Bind(function () {
	        return applyTuple(dictSemigroup);
	    }, function (v) {
	        return function (f) {
	            var $250 = f(v.value1);
	            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)($250.value0), $250.value1);
	        };
	    });
	};
	var applicativeTuple = function (dictMonoid) {
	    return new Control_Applicative.Applicative(function () {
	        return applyTuple(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
	};
	var monadTuple = function (dictMonoid) {
	    return new Control_Monad.Monad(function () {
	        return applicativeTuple(dictMonoid);
	    }, function () {
	        return bindTuple(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    });
	};
	module.exports = {
	    Tuple: Tuple, 
	    curry: curry, 
	    fst: fst, 
	    lookup: lookup, 
	    snd: snd, 
	    swap: swap, 
	    uncurry: uncurry, 
	    showTuple: showTuple, 
	    eqTuple: eqTuple, 
	    ordTuple: ordTuple, 
	    boundedTuple: boundedTuple, 
	    semigroupoidTuple: semigroupoidTuple, 
	    semigroupTuple: semigroupTuple, 
	    monoidTuple: monoidTuple, 
	    semiringTuple: semiringTuple, 
	    ringTuple: ringTuple, 
	    commutativeRingTuple: commutativeRingTuple, 
	    heytingAlgebraTuple: heytingAlgebraTuple, 
	    booleanAlgebraTuple: booleanAlgebraTuple, 
	    functorTuple: functorTuple, 
	    invariantTuple: invariantTuple, 
	    bifunctorTuple: bifunctorTuple, 
	    applyTuple: applyTuple, 
	    biapplyTuple: biapplyTuple, 
	    applicativeTuple: applicativeTuple, 
	    biapplicativeTuple: biapplicativeTuple, 
	    bindTuple: bindTuple, 
	    monadTuple: monadTuple, 
	    extendTuple: extendTuple, 
	    comonadTuple: comonadTuple, 
	    lazyTuple: lazyTuple, 
	    foldableTuple: foldableTuple, 
	    bifoldableTuple: bifoldableTuple, 
	    traversableTuple: traversableTuple, 
	    bitraversableTuple: bitraversableTuple
	};


/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Control_Biapply = __webpack_require__(87);
	var Biapplicative = function (__superclass_Control$dotBiapply$dotBiapply_0, bipure) {
	    this["__superclass_Control.Biapply.Biapply_0"] = __superclass_Control$dotBiapply$dotBiapply_0;
	    this.bipure = bipure;
	};
	var bipure = function (dict) {
	    return dict.bipure;
	};
	module.exports = {
	    Biapplicative: Biapplicative, 
	    bipure: bipure
	};


/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Data_Function = __webpack_require__(5);
	var Data_Bifunctor = __webpack_require__(55);
	var Control_Category = __webpack_require__(6);
	var Biapply = function (__superclass_Data$dotBifunctor$dotBifunctor_0, biapply) {
	    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
	    this.biapply = biapply;
	};
	var biapply = function (dict) {
	    return dict.biapply;
	};
	var biapplyFirst = function (dictBiapply) {
	    return function (a) {
	        return function (b) {
	            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(Data_Function["const"](Control_Category.id(Control_Category.categoryFn))))(a))(b);
	        };
	    };
	};
	var biapplySecond = function (dictBiapply) {
	    return function (a) {
	        return function (b) {
	            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(Data_Function["const"])(Data_Function["const"]))(a))(b);
	        };
	    };
	};
	var bilift2 = function (dictBiapply) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return function (b) {
	                    return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b);
	                };
	            };
	        };
	    };
	};
	var bilift3 = function (dictBiapply) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return function (b) {
	                    return function (c) {
	                        return biapply(dictBiapply)(biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b))(c);
	                    };
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Biapply: Biapply, 
	    biapply: biapply, 
	    biapplyFirst: biapplyFirst, 
	    biapplySecond: biapplySecond, 
	    bilift2: bilift2, 
	    bilift3: bilift3
	};


/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(89);
	var Prelude = __webpack_require__(16);
	var Data_Maybe = __webpack_require__(60);
	var Data_Traversable = __webpack_require__(67);
	var Data_Tuple = __webpack_require__(85);
	var Partial_Unsafe = __webpack_require__(80);
	var Data_Ord = __webpack_require__(29);
	var Data_Ring = __webpack_require__(36);
	var Data_Function = __webpack_require__(5);
	var Data_Unit = __webpack_require__(8);
	var Data_Functor = __webpack_require__(3);
	var Unfoldable = function (unfoldr) {
	    this.unfoldr = unfoldr;
	};
	var unfoldr = function (dict) {
	    return dict.unfoldr;
	};
	var unfoldableArray = new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Partial_Unsafe.unsafePartial(function (dictPartial) {
	    return Data_Maybe.fromJust(dictPartial);
	}))(Data_Tuple.fst)(Data_Tuple.snd));
	var replicate = function (dictUnfoldable) {
	    return function (n) {
	        return function (v) {
	            var step = function (i) {
	                var $8 = i <= 0;
	                if ($8) {
	                    return Data_Maybe.Nothing.value;
	                };
	                if (!$8) {
	                    return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1));
	                };
	                throw new Error("Failed pattern match at Data.Unfoldable line 59, column 7 - line 60, column 34: " + [ $8.constructor.name ]);
	            };
	            return unfoldr(dictUnfoldable)(step)(n);
	        };
	    };
	};
	var replicateA = function (dictApplicative) {
	    return function (dictUnfoldable) {
	        return function (dictTraversable) {
	            return function (n) {
	                return function (m) {
	                    return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
	                };
	            };
	        };
	    };
	};
	var singleton = function (dictUnfoldable) {
	    return replicate(dictUnfoldable)(1);
	};
	var none = function (dictUnfoldable) {
	    return unfoldr(dictUnfoldable)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Unit.unit);
	};
	var fromMaybe = function (dictUnfoldable) {
	    return unfoldr(dictUnfoldable)(function (b) {
	        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Maybe.Nothing.value))(b);
	    });
	};
	module.exports = {
	    Unfoldable: Unfoldable, 
	    fromMaybe: fromMaybe, 
	    none: none, 
	    replicate: replicate, 
	    replicateA: replicateA, 
	    singleton: singleton, 
	    unfoldr: unfoldr, 
	    unfoldableArray: unfoldableArray
	};


/***/ },
/* 89 */
/***/ function(module, exports) {

	"use strict";

	exports.unfoldrArrayImpl = function (isNothing) {
	  return function (fromJust) {
	    return function (fst) {
	      return function (snd) {
	        return function (f) {
	          return function (b) {
	            var result = [];
	            while (true) {
	              var maybe = f(b);
	              if (isNothing(maybe)) return result;
	              var tuple = fromJust(maybe);
	              result.push(fst(tuple));
	              b = snd(tuple);
	            }
	          };
	        };
	      };
	    };
	  };
	};

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(91);
	var Prelude = __webpack_require__(16);
	var Data_Maybe = __webpack_require__(60);
	var Data_Newtype = __webpack_require__(51);
	var Data_String_Unsafe = __webpack_require__(92);
	var Data_Eq = __webpack_require__(31);
	var Data_Ord = __webpack_require__(29);
	var Data_Show = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Semiring = __webpack_require__(38);
	var Data_Ordering = __webpack_require__(35);
	var Data_Ring = __webpack_require__(36);
	var Data_Function = __webpack_require__(5);
	var Control_Semigroupoid = __webpack_require__(7);
	var Replacement = function (x) {
	    return x;
	};
	var Pattern = function (x) {
	    return x;
	};
	var uncons = function (v) {
	    if (v === "") {
	        return Data_Maybe.Nothing.value;
	    };
	    return new Data_Maybe.Just({
	        head: Data_String_Unsafe.charAt(0)(v), 
	        tail: $foreign.drop(1)(v)
	    });
	};
	var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var takeWhile = function (p) {
	    return function (s) {
	        return $foreign.take($foreign.count(p)(s))(s);
	    };
	};
	var splitAt = $foreign._splitAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var showReplacement = new Data_Show.Show(function (v) {
	    return "(Replacement " + (v + ")");
	});
	var showPattern = new Data_Show.Show(function (v) {
	    return "(Pattern " + (v + ")");
	});
	var $$null = function (s) {
	    return s === "";
	};
	var newtypeReplacement = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Replacement);
	var newtypePattern = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, Pattern);
	var localeCompare = $foreign._localeCompare(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
	var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var stripSuffix = function (v) {
	    return function (str) {
	        var $32 = lastIndexOf(v)(str);
	        if ($32 instanceof Data_Maybe.Just && $32.value0 === $foreign.length(str) - $foreign.length(v)) {
	            return Data_Maybe.Just.create($foreign.take($32.value0)(str));
	        };
	        return Data_Maybe.Nothing.value;
	    };
	};
	var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var stripPrefix = function (v) {
	    return function (str) {
	        var $36 = indexOf(v)(str);
	        if ($36 instanceof Data_Maybe.Just && $36.value0 === 0) {
	            return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
	        };
	        return Data_Maybe.Nothing.value;
	    };
	};
	var eqReplacement = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return x === y;
	    };
	});
	var ordReplacement = new Data_Ord.Ord(function () {
	    return eqReplacement;
	}, function (x) {
	    return function (y) {
	        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
	    };
	});
	var eqPattern = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return x === y;
	    };
	});
	var ordPattern = new Data_Ord.Ord(function () {
	    return eqPattern;
	}, function (x) {
	    return function (y) {
	        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
	    };
	});
	var dropWhile = function (p) {
	    return function (s) {
	        return $foreign.drop($foreign.count(p)(s))(s);
	    };
	};
	var contains = function (pat) {
	    return function ($46) {
	        return Data_Maybe.isJust(indexOf(pat)($46));
	    };
	};
	var charCodeAt = $foreign._charCodeAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	module.exports = {
	    Pattern: Pattern, 
	    Replacement: Replacement, 
	    charAt: charAt, 
	    charCodeAt: charCodeAt, 
	    contains: contains, 
	    dropWhile: dropWhile, 
	    indexOf: indexOf, 
	    "indexOf'": indexOf$prime, 
	    lastIndexOf: lastIndexOf, 
	    "lastIndexOf'": lastIndexOf$prime, 
	    localeCompare: localeCompare, 
	    "null": $$null, 
	    splitAt: splitAt, 
	    stripPrefix: stripPrefix, 
	    stripSuffix: stripSuffix, 
	    takeWhile: takeWhile, 
	    toChar: toChar, 
	    uncons: uncons, 
	    eqPattern: eqPattern, 
	    ordPattern: ordPattern, 
	    newtypePattern: newtypePattern, 
	    showPattern: showPattern, 
	    eqReplacement: eqReplacement, 
	    ordReplacement: ordReplacement, 
	    newtypeReplacement: newtypeReplacement, 
	    showReplacement: showReplacement, 
	    count: $foreign.count, 
	    drop: $foreign.drop, 
	    fromCharArray: $foreign.fromCharArray, 
	    joinWith: $foreign.joinWith, 
	    length: $foreign.length, 
	    replace: $foreign.replace, 
	    replaceAll: $foreign.replaceAll, 
	    singleton: $foreign.singleton, 
	    split: $foreign.split, 
	    take: $foreign.take, 
	    toCharArray: $foreign.toCharArray, 
	    toLower: $foreign.toLower, 
	    toUpper: $foreign.toUpper, 
	    trim: $foreign.trim
	};


/***/ },
/* 91 */
/***/ function(module, exports) {

	"use strict";

	exports._charAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (s) {
	        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
	      };
	    };
	  };
	};

	exports.singleton = function (c) {
	  return c;
	};

	exports._charCodeAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (s) {
	        return i >= 0 && i < s.length ? just(s.charCodeAt(i)) : nothing;
	      };
	    };
	  };
	};

	exports._toChar = function (just) {
	  return function (nothing) {
	    return function (s) {
	      return s.length === 1 ? just(s) : nothing;
	    };
	  };
	};

	exports.fromCharArray = function (a) {
	  return a.join("");
	};

	exports._indexOf = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (s) {
	        var i = s.indexOf(x);
	        return i === -1 ? nothing : just(i);
	      };
	    };
	  };
	};

	exports["_indexOf'"] = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (startAt) {
	        return function (s) {
	          if (startAt < 0 || startAt > s.length) return nothing;
	          var i = s.indexOf(x, startAt);
	          return i === -1 ? nothing : just(i);
	        };
	      };
	    };
	  };
	};

	exports._lastIndexOf = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (s) {
	        var i = s.lastIndexOf(x);
	        return i === -1 ? nothing : just(i);
	      };
	    };
	  };
	};

	exports["_lastIndexOf'"] = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (startAt) {
	        return function (s) {
	          if (startAt < 0 || startAt > s.length) return nothing;
	          var i = s.lastIndexOf(x, startAt);
	          return i === -1 ? nothing : just(i);
	        };
	      };
	    };
	  };
	};

	exports.length = function (s) {
	  return s.length;
	};

	exports._localeCompare = function (lt) {
	  return function (eq) {
	    return function (gt) {
	      return function (s1) {
	        return function (s2) {
	          var result = s1.localeCompare(s2);
	          return result < 0 ? lt : result > 0 ? gt : eq;
	        };
	      };
	    };
	  };
	};

	exports.replace = function (s1) {
	  return function (s2) {
	    return function (s3) {
	      return s3.replace(s1, s2);
	    };
	  };
	};

	exports.replaceAll = function (s1) {
	  return function (s2) {
	    return function (s3) {
	      return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2);
	    };
	  };
	};

	exports.take = function (n) {
	  return function (s) {
	    return s.substr(0, n);
	  };
	};

	exports.drop = function (n) {
	  return function (s) {
	    return s.substring(n);
	  };
	};

	exports.count = function (p) {
	  return function (s) {
	    for (var i = 0; i < s.length && p(s.charAt(i)); i++) {}{}
	    return i;
	  };
	};

	exports.split = function (sep) {
	  return function (s) {
	    return s.split(sep);
	  };
	};

	exports._splitAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (s) {
	        return i >= 0 && i < s.length ? just([s.substring(0, i), s.substring(i)]) : nothing;
	      };
	    };
	  };
	};

	exports.toCharArray = function (s) {
	  return s.split("");
	};

	exports.toLower = function (s) {
	  return s.toLowerCase();
	};

	exports.toUpper = function (s) {
	  return s.toUpperCase();
	};

	exports.trim = function (s) {
	  return s.trim();
	};

	exports.joinWith = function (s) {
	  return function (xs) {
	    return xs.join(s);
	  };
	};

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(93);
	module.exports = {
	    "char": $foreign["char"], 
	    charAt: $foreign.charAt, 
	    charCodeAt: $foreign.charCodeAt
	};


/***/ },
/* 93 */
/***/ function(module, exports) {

	"use strict";

	exports.charCodeAt = function (i) {
	  return function (s) {
	    if (i >= 0 && i < s.length) return s.charCodeAt(i);
	    throw new Error("Data.String.Unsafe.charCodeAt: Invalid index.");
	  };
	};

	exports.charAt = function (i) {
	  return function (s) {
	    if (i >= 0 && i < s.length) return s.charAt(i);
	    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
	  };
	};

	exports.char = function (s) {
	  if (s.length === 1) return s.charAt(0);
	  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
	};

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Alt = __webpack_require__(2);
	var Control_Lazy = __webpack_require__(71);
	var Control_Monad_Except = __webpack_require__(95);
	var Control_Monad_Rec_Class = __webpack_require__(72);
	var Control_Monad_State = __webpack_require__(105);
	var Control_Monad_Trans_Class = __webpack_require__(102);
	var Control_MonadPlus = __webpack_require__(104);
	var Data_Either = __webpack_require__(15);
	var Data_Identity = __webpack_require__(79);
	var Data_Newtype = __webpack_require__(51);
	var Data_Tuple = __webpack_require__(85);
	var Text_Parsing_Parser_Pos = __webpack_require__(107);
	var Data_Show = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Eq = __webpack_require__(31);
	var Data_HeytingAlgebra = __webpack_require__(25);
	var Data_Ord = __webpack_require__(29);
	var Data_Ordering = __webpack_require__(35);
	var Control_Monad_Except_Trans = __webpack_require__(97);
	var Control_Semigroupoid = __webpack_require__(7);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(17);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Control_Monad_State_Class = __webpack_require__(101);
	var Control_Monad_Error_Class = __webpack_require__(96);
	var Control_Monad_State_Trans = __webpack_require__(106);
	var Control_Plus = __webpack_require__(59);
	var Control_Alternative = __webpack_require__(61);
	var Control_MonadZero = __webpack_require__(62);
	var ParseState = (function () {
	    function ParseState(value0, value1, value2) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	    };
	    ParseState.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return new ParseState(value0, value1, value2);
	            };
	        };
	    };
	    return ParseState;
	})();
	var ParseError = (function () {
	    function ParseError(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    ParseError.create = function (value0) {
	        return function (value1) {
	            return new ParseError(value0, value1);
	        };
	    };
	    return ParseError;
	})();
	var ParserT = function (x) {
	    return x;
	};
	var showParseError = new Data_Show.Show(function (v) {
	    return "(ParseError " + (Data_Show.show(Data_Show.showString)(v.value0) + (Data_Show.show(Text_Parsing_Parser_Pos.showPosition)(v.value1) + ")"));
	});
	var parseErrorPosition = function (v) {
	    return v.value1;
	};
	var parseErrorMessage = function (v) {
	    return v.value0;
	};
	var newtypeParserT = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, ParserT);
	var runParserT = function (dictMonad) {
	    return function (s) {
	        return function (p) {
	            var initialState = new ParseState(s, Text_Parsing_Parser_Pos.initialPos, false);
	            return Control_Monad_State_Trans.evalStateT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p)))(initialState);
	        };
	    };
	};
	var runParser = function (s) {
	    return function ($83) {
	        return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(runParserT(Data_Identity.monadIdentity)(s)($83));
	    };
	};
	var monadTransParserT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
	    return function ($84) {
	        return ParserT(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_State_Trans.monadStateT(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonad)($84)));
	    };
	});
	var monadStateParserT = function (dictMonad) {
	    return Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(dictMonad));
	};
	var monadRecParserT = function (dictMonadRec) {
	    return Control_Monad_Except_Trans.monadRecExceptT(Control_Monad_State_Trans.monadRecStateT(dictMonadRec));
	};
	var monadParserT = function (dictMonad) {
	    return Control_Monad_Except_Trans.monadExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
	};
	var monadErrorParserT = function (dictMonad) {
	    return Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
	};
	var lazyParserT = new Control_Lazy.Lazy(function (f) {
	    return Control_Lazy.defer(Control_Monad_State_Trans.lazyStateT)(function ($85) {
	        return Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(f($85)));
	    });
	});
	var functorParserT = function (dictFunctor) {
	    return Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(dictFunctor));
	};
	var eqParseError = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return x.value0 === y.value0 && Data_Eq.eq(Text_Parsing_Parser_Pos.eqPosition)(x.value1)(y.value1);
	    };
	});
	var ordParseError = new Data_Ord.Ord(function () {
	    return eqParseError;
	}, function (x) {
	    return function (y) {
	        var $57 = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
	        if ($57 instanceof Data_Ordering.LT) {
	            return Data_Ordering.LT.value;
	        };
	        if ($57 instanceof Data_Ordering.GT) {
	            return Data_Ordering.GT.value;
	        };
	        return Data_Ord.compare(Text_Parsing_Parser_Pos.ordPosition)(x.value1)(y.value1);
	    };
	});
	var consume = function (dictMonad) {
	    return Control_Monad_State_Class.modify(monadStateParserT(dictMonad))(function (v) {
	        return new ParseState(v.value0, v.value1, true);
	    });
	};
	var bindParserT = function (dictMonad) {
	    return Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
	};
	var fail = function (dictMonad) {
	    return function (message) {
	        return Control_Bind.bind(bindParserT(dictMonad))(Control_Monad_State_Class.gets(monadStateParserT(dictMonad))(function (v) {
	            return v.value1;
	        }))(function (v) {
	            return Control_Monad_Error_Class.throwError(monadErrorParserT(dictMonad))(new ParseError(message, v));
	        });
	    };
	};
	var applyParserT = function (dictMonad) {
	    return Control_Monad_Except_Trans.applyExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
	};
	var applicativeParserT = function (dictMonad) {
	    return Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
	};
	var altParserT = function (dictMonad) {
	    return new Control_Alt.Alt(function () {
	        return functorParserT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
	    }, function (p1) {
	        return function (p2) {
	            return ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p1)))(new ParseState(v.value0, v.value1, false)))(function (v1) {
	                    if (v1.value0 instanceof Data_Either.Left && !v1.value1.value2) {
	                        return Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p2)))(v);
	                    };
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v1.value0, v1.value1));
	                });
	            })));
	        };
	    });
	};
	var plusParserT = function (dictMonad) {
	    return new Control_Plus.Plus(function () {
	        return altParserT(dictMonad);
	    }, fail(dictMonad)("No alternative"));
	};
	var alternativeParserT = function (dictMonad) {
	    return new Control_Alternative.Alternative(function () {
	        return applicativeParserT(dictMonad);
	    }, function () {
	        return plusParserT(dictMonad);
	    });
	};
	var monadZeroParserT = function (dictMonad) {
	    return new Control_MonadZero.MonadZero(function () {
	        return alternativeParserT(dictMonad);
	    }, function () {
	        return monadParserT(dictMonad);
	    });
	};
	var monadPlusParserT = function (dictMonad) {
	    return new Control_MonadPlus.MonadPlus(function () {
	        return monadZeroParserT(dictMonad);
	    });
	};
	module.exports = {
	    ParseState: ParseState, 
	    ParserT: ParserT, 
	    consume: consume, 
	    fail: fail, 
	    parseErrorMessage: parseErrorMessage, 
	    parseErrorPosition: parseErrorPosition, 
	    runParser: runParser, 
	    runParserT: runParserT, 
	    showParseError: showParseError, 
	    eqParseError: eqParseError, 
	    ordParseError: ordParseError, 
	    newtypeParserT: newtypeParserT, 
	    lazyParserT: lazyParserT, 
	    functorParserT: functorParserT, 
	    applyParserT: applyParserT, 
	    applicativeParserT: applicativeParserT, 
	    bindParserT: bindParserT, 
	    monadParserT: monadParserT, 
	    monadRecParserT: monadRecParserT, 
	    monadStateParserT: monadStateParserT, 
	    monadErrorParserT: monadErrorParserT, 
	    altParserT: altParserT, 
	    plusParserT: plusParserT, 
	    alternativeParserT: alternativeParserT, 
	    monadZeroParserT: monadZeroParserT, 
	    monadPlusParserT: monadPlusParserT, 
	    monadTransParserT: monadTransParserT
	};


/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Monad_Error_Class = __webpack_require__(96);
	var Control_Monad_Except_Trans = __webpack_require__(97);
	var Data_Either = __webpack_require__(15);
	var Data_Identity = __webpack_require__(79);
	var Data_Newtype = __webpack_require__(51);
	var Control_Semigroupoid = __webpack_require__(7);
	var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);
	var runExcept = function ($0) {
	    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
	};
	var mapExcept = function (f) {
	    return Control_Monad_Except_Trans.mapExceptT(function ($1) {
	        return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
	    });
	};
	module.exports = {
	    mapExcept: mapExcept, 
	    runExcept: runExcept, 
	    withExcept: withExcept
	};


/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Data_Maybe = __webpack_require__(60);
	var Data_Either = __webpack_require__(15);
	var Data_Function = __webpack_require__(5);
	var Data_Unit = __webpack_require__(8);
	var MonadError = function (__superclass_Control$dotMonad$dotMonad_0, catchError, throwError) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.catchError = catchError;
	    this.throwError = throwError;
	};
	var throwError = function (dict) {
	    return dict.throwError;
	};
	var monadErrorMaybe = new MonadError(function () {
	    return Data_Maybe.monadMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return v1(Data_Unit.unit);
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return new Data_Maybe.Just(v.value0);
	        };
	        throw new Error("Failed pattern match at Control.Monad.Error.Class line 55, column 3 - line 55, column 33: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	}, Data_Function["const"](Data_Maybe.Nothing.value));
	var monadErrorEither = new MonadError(function () {
	    return Data_Either.monadEither;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Data_Either.Left) {
	            return v1(v.value0);
	        };
	        if (v instanceof Data_Either.Right) {
	            return new Data_Either.Right(v.value0);
	        };
	        throw new Error("Failed pattern match at Control.Monad.Error.Class line 50, column 3 - line 50, column 30: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	}, Data_Either.Left.create);
	var catchError = function (dict) {
	    return dict.catchError;
	};
	var catchJust = function (dictMonadError) {
	    return function (p) {
	        return function (act) {
	            return function (handler) {
	                var handle = function (e) {
	                    var $12 = p(e);
	                    if ($12 instanceof Data_Maybe.Nothing) {
	                        return throwError(dictMonadError)(e);
	                    };
	                    if ($12 instanceof Data_Maybe.Just) {
	                        return handler($12.value0);
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Error.Class line 44, column 5 - line 46, column 26: " + [ $12.constructor.name ]);
	                };
	                return catchError(dictMonadError)(act)(handle);
	            };
	        };
	    };
	};
	module.exports = {
	    MonadError: MonadError, 
	    catchError: catchError, 
	    catchJust: catchJust, 
	    throwError: throwError, 
	    monadErrorEither: monadErrorEither, 
	    monadErrorMaybe: monadErrorMaybe
	};


/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Alt = __webpack_require__(2);
	var Control_Alternative = __webpack_require__(61);
	var Control_Monad_Cont_Class = __webpack_require__(98);
	var Control_Monad_Eff_Class = __webpack_require__(99);
	var Control_Monad_Error_Class = __webpack_require__(96);
	var Control_Monad_Reader_Class = __webpack_require__(100);
	var Control_Monad_Rec_Class = __webpack_require__(72);
	var Control_Monad_State_Class = __webpack_require__(101);
	var Control_Monad_Trans_Class = __webpack_require__(102);
	var Control_Monad_Writer_Class = __webpack_require__(103);
	var Control_MonadPlus = __webpack_require__(104);
	var Control_MonadZero = __webpack_require__(62);
	var Control_Plus = __webpack_require__(59);
	var Data_Either = __webpack_require__(15);
	var Data_Monoid = __webpack_require__(47);
	var Data_Newtype = __webpack_require__(51);
	var Data_Tuple = __webpack_require__(85);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var Control_Monad = __webpack_require__(22);
	var Control_Applicative = __webpack_require__(17);
	var Control_Semigroupoid = __webpack_require__(7);
	var Control_Bind = __webpack_require__(20);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Function = __webpack_require__(5);
	var Control_Category = __webpack_require__(6);
	var ExceptT = function (x) {
	    return x;
	};
	var withExceptT = function (dictFunctor) {
	    return function (f) {
	        return function (v) {
	            var mapLeft = function (v1) {
	                return function (v2) {
	                    if (v2 instanceof Data_Either.Right) {
	                        return new Data_Either.Right(v2.value0);
	                    };
	                    if (v2 instanceof Data_Either.Left) {
	                        return new Data_Either.Left(v1(v2.value0));
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 44, column 3 - line 44, column 32: " + [ v1.constructor.name, v2.constructor.name ]);
	                };
	            };
	            return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
	        };
	    };
	};
	var runExceptT = function (v) {
	    return v;
	};
	var newtypeExceptT = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, ExceptT);
	var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
	    return function (m) {
	        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v));
	        });
	    };
	});
	var mapExceptT = function (f) {
	    return function (v) {
	        return f(v);
	    };
	};
	var functorExceptT = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
	    });
	};
	var except = function (dictApplicative) {
	    return function ($87) {
	        return ExceptT(Control_Applicative.pure(dictApplicative)($87));
	    };
	};
	var monadExceptT = function (dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeExceptT(dictMonad);
	    }, function () {
	        return bindExceptT(dictMonad);
	    });
	};
	var bindExceptT = function (dictMonad) {
	    return new Control_Bind.Bind(function () {
	        return applyExceptT(dictMonad);
	    }, function (v) {
	        return function (k) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(Data_Either.either(function ($88) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Left.create($88));
	            })(function (a) {
	                var $56 = k(a);
	                return $56;
	            }));
	        };
	    });
	};
	var applyExceptT = function (dictMonad) {
	    return new Control_Apply.Apply(function () {
	        return functorExceptT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
	    }, Control_Monad.ap(monadExceptT(dictMonad)));
	};
	var applicativeExceptT = function (dictMonad) {
	    return new Control_Applicative.Applicative(function () {
	        return applyExceptT(dictMonad);
	    }, function ($89) {
	        return ExceptT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Right.create($89)));
	    });
	};
	var monadAskExceptT = function (dictMonadAsk) {
	    return new Control_Monad_Reader_Class.MonadAsk(function () {
	        return monadExceptT(dictMonadAsk["__superclass_Control.Monad.Monad_0"]());
	    }, Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadAsk["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
	};
	var monadReaderExceptT = function (dictMonadReader) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadAskExceptT(dictMonadReader["__superclass_Control.Monad.Reader.Class.MonadAsk_0"]());
	    }, function (f) {
	        return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
	    });
	};
	var monadContExceptT = function (dictMonadCont) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadExceptT(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return ExceptT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	            var $57 = f(function (a) {
	                return ExceptT(c(new Data_Either.Right(a)));
	            });
	            return $57;
	        }));
	    });
	};
	var monadEffExceptT = function (dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadExceptT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	    }, function ($90) {
	        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($90));
	    });
	};
	var monadErrorExceptT = function (dictMonad) {
	    return new Control_Monad_Error_Class.MonadError(function () {
	        return monadExceptT(dictMonad);
	    }, function (v) {
	        return function (k) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(Data_Either.either(function (a) {
	                var $60 = k(a);
	                return $60;
	            })(function ($91) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Right.create($91));
	            }));
	        };
	    }, function ($92) {
	        return ExceptT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Left.create($92)));
	    });
	};
	var monadRecExceptT = function (dictMonadRec) {
	    return new Control_Monad_Rec_Class.MonadRec(function () {
	        return monadExceptT(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function ($93) {
	            return ExceptT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
	                return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())((function () {
	                    var $61 = f(a);
	                    return $61;
	                })())(function (m$prime) {
	                    return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
	                        if (m$prime instanceof Data_Either.Left) {
	                            return new Control_Monad_Rec_Class.Done(new Data_Either.Left(m$prime.value0));
	                        };
	                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
	                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
	                        };
	                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
	                            return new Control_Monad_Rec_Class.Done(new Data_Either.Right(m$prime.value0.value0));
	                        };
	                        throw new Error("Failed pattern match at Control.Monad.Except.Trans line 76, column 9 - line 79, column 43: " + [ m$prime.constructor.name ]);
	                    })());
	                });
	            })($93));
	        };
	    });
	};
	var monadStateExceptT = function (dictMonadState) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadExceptT(dictMonadState["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)(f));
	    });
	};
	var monadTellExceptT = function (dictMonadTell) {
	    return new Control_Monad_Writer_Class.MonadTell(function () {
	        return monadExceptT(dictMonadTell["__superclass_Control.Monad.Monad_0"]());
	    }, function ($94) {
	        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadTell["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Writer_Class.tell(dictMonadTell)($94));
	    });
	};
	var monadWriterExceptT = function (dictMonadWriter) {
	    return new Control_Monad_Writer_Class.MonadWriter(function () {
	        return monadTellExceptT(dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]());
	    }, mapExceptT(function (m) {
	        return Control_Bind.bind(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
	            return Control_Applicative.pure(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Functor.map(Data_Either.functorEither)(function (r) {
	                return new Data_Tuple.Tuple(r, v.value1);
	            })(v.value0));
	        });
	    }), mapExceptT(function (m) {
	        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	            return Control_Applicative.pure(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
	                if (v instanceof Data_Either.Left) {
	                    return new Data_Tuple.Tuple(new Data_Either.Left(v.value0), Control_Category.id(Control_Category.categoryFn));
	                };
	                if (v instanceof Data_Either.Right) {
	                    return new Data_Tuple.Tuple(new Data_Either.Right(v.value0.value0), v.value0.value1);
	                };
	                throw new Error("Failed pattern match at Control.Monad.Except.Trans line 136, column 5 - line 138, column 44: " + [ v.constructor.name ]);
	            })());
	        }));
	    }));
	};
	var altExceptT = function (dictSemigroup) {
	    return function (dictMonad) {
	        return new Control_Alt.Alt(function () {
	            return functorExceptT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
	        }, function (v) {
	            return function (v1) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v2) {
	                    if (v2 instanceof Data_Either.Right) {
	                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v2.value0));
	                    };
	                    if (v2 instanceof Data_Either.Left) {
	                        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v1)(function (v3) {
	                            if (v3 instanceof Data_Either.Right) {
	                                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v3.value0));
	                            };
	                            if (v3 instanceof Data_Either.Left) {
	                                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v2.value0)(v3.value0)));
	                            };
	                            throw new Error("Failed pattern match at Control.Monad.Except.Trans line 88, column 9 - line 90, column 49: " + [ v3.constructor.name ]);
	                        });
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 84, column 5 - line 90, column 49: " + [ v2.constructor.name ]);
	                });
	            };
	        });
	    };
	};
	var plusExceptT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_Plus.Plus(function () {
	            return altExceptT(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(dictMonad);
	        }, Control_Monad_Error_Class.throwError(monadErrorExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
	    };
	};
	var alternativeExceptT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_Alternative.Alternative(function () {
	            return applicativeExceptT(dictMonad);
	        }, function () {
	            return plusExceptT(dictMonoid)(dictMonad);
	        });
	    };
	};
	var monadZeroExceptT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_MonadZero.MonadZero(function () {
	            return alternativeExceptT(dictMonoid)(dictMonad);
	        }, function () {
	            return monadExceptT(dictMonad);
	        });
	    };
	};
	var monadPlusExceptT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_MonadPlus.MonadPlus(function () {
	            return monadZeroExceptT(dictMonoid)(dictMonad);
	        });
	    };
	};
	module.exports = {
	    ExceptT: ExceptT, 
	    except: except, 
	    mapExceptT: mapExceptT, 
	    runExceptT: runExceptT, 
	    withExceptT: withExceptT, 
	    newtypeExceptT: newtypeExceptT, 
	    functorExceptT: functorExceptT, 
	    applyExceptT: applyExceptT, 
	    applicativeExceptT: applicativeExceptT, 
	    bindExceptT: bindExceptT, 
	    monadExceptT: monadExceptT, 
	    monadRecExceptT: monadRecExceptT, 
	    altExceptT: altExceptT, 
	    plusExceptT: plusExceptT, 
	    alternativeExceptT: alternativeExceptT, 
	    monadPlusExceptT: monadPlusExceptT, 
	    monadZeroExceptT: monadZeroExceptT, 
	    monadTransExceptT: monadTransExceptT, 
	    monadEffExceptT: monadEffExceptT, 
	    monadContExceptT: monadContExceptT, 
	    monadErrorExceptT: monadErrorExceptT, 
	    monadAskExceptT: monadAskExceptT, 
	    monadReaderExceptT: monadReaderExceptT, 
	    monadStateExceptT: monadStateExceptT, 
	    monadTellExceptT: monadTellExceptT, 
	    monadWriterExceptT: monadWriterExceptT
	};


/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var MonadCont = function (__superclass_Control$dotMonad$dotMonad_0, callCC) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.callCC = callCC;
	};
	var callCC = function (dict) {
	    return dict.callCC;
	};
	module.exports = {
	    MonadCont: MonadCont, 
	    callCC: callCC
	};


/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Control_Category = __webpack_require__(6);
	var Control_Monad = __webpack_require__(22);
	var Control_Monad_Eff = __webpack_require__(73);
	var MonadEff = function (__superclass_Control$dotMonad$dotMonad_0, liftEff) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.liftEff = liftEff;
	};
	var monadEffEff = new MonadEff(function () {
	    return Control_Monad_Eff.monadEff;
	}, Control_Category.id(Control_Category.categoryFn));
	var liftEff = function (dict) {
	    return dict.liftEff;
	};
	module.exports = {
	    MonadEff: MonadEff, 
	    liftEff: liftEff, 
	    monadEffEff: monadEffEff
	};


/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Category = __webpack_require__(6);
	var Control_Semigroupoid = __webpack_require__(7);
	var Control_Monad = __webpack_require__(22);
	var Data_Functor = __webpack_require__(3);
	var MonadAsk = function (__superclass_Control$dotMonad$dotMonad_0, ask) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.ask = ask;
	};
	var MonadReader = function (__superclass_Control$dotMonad$dotReader$dotClass$dotMonadAsk_0, local) {
	    this["__superclass_Control.Monad.Reader.Class.MonadAsk_0"] = __superclass_Control$dotMonad$dotReader$dotClass$dotMonadAsk_0;
	    this.local = local;
	};
	var monadAskFun = new MonadAsk(function () {
	    return Control_Monad.monadFn;
	}, Control_Category.id(Control_Category.categoryFn));
	var monadReaderFun = new MonadReader(function () {
	    return monadAskFun;
	}, Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn));
	var local = function (dict) {
	    return dict.local;
	};
	var ask = function (dict) {
	    return dict.ask;
	};
	var asks = function (dictMonadAsk) {
	    return function (f) {
	        return Data_Functor.map((((dictMonadAsk["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(f)(ask(dictMonadAsk));
	    };
	};
	module.exports = {
	    MonadAsk: MonadAsk, 
	    MonadReader: MonadReader, 
	    ask: ask, 
	    asks: asks, 
	    local: local, 
	    monadAskFun: monadAskFun, 
	    monadReaderFun: monadReaderFun
	};


/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Data_Tuple = __webpack_require__(85);
	var Data_Unit = __webpack_require__(8);
	var MonadState = function (__superclass_Control$dotMonad$dotMonad_0, state) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.state = state;
	};
	var state = function (dict) {
	    return dict.state;
	};
	var put = function (dictMonadState) {
	    return function (s) {
	        return state(dictMonadState)(function (v) {
	            return new Data_Tuple.Tuple(Data_Unit.unit, s);
	        });
	    };
	};
	var modify = function (dictMonadState) {
	    return function (f) {
	        return state(dictMonadState)(function (s) {
	            return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
	        });
	    };
	};
	var gets = function (dictMonadState) {
	    return function (f) {
	        return state(dictMonadState)(function (s) {
	            return new Data_Tuple.Tuple(f(s), s);
	        });
	    };
	};
	var get = function (dictMonadState) {
	    return state(dictMonadState)(function (s) {
	        return new Data_Tuple.Tuple(s, s);
	    });
	};
	module.exports = {
	    MonadState: MonadState, 
	    get: get, 
	    gets: gets, 
	    modify: modify, 
	    put: put, 
	    state: state
	};


/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var MonadTrans = function (lift) {
	    this.lift = lift;
	};
	var lift = function (dict) {
	    return dict.lift;
	};
	module.exports = {
	    MonadTrans: MonadTrans, 
	    lift: lift
	};


/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Data_Tuple = __webpack_require__(85);
	var Control_Bind = __webpack_require__(20);
	var Data_Function = __webpack_require__(5);
	var Control_Applicative = __webpack_require__(17);
	var MonadTell = function (__superclass_Control$dotMonad$dotMonad_0, tell) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.tell = tell;
	};
	var MonadWriter = function (__superclass_Control$dotMonad$dotWriter$dotClass$dotMonadTell_0, listen, pass) {
	    this["__superclass_Control.Monad.Writer.Class.MonadTell_0"] = __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadTell_0;
	    this.listen = listen;
	    this.pass = pass;
	};
	var tell = function (dict) {
	    return dict.tell;
	};
	var pass = function (dict) {
	    return dict.pass;
	};
	var listen = function (dict) {
	    return dict.listen;
	};
	var listens = function (dictMonadWriter) {
	    return function (f) {
	        return function (m) {
	            return Control_Bind.bind(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(listen(dictMonadWriter)(m))(function (v) {
	                return Control_Applicative.pure(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v.value0, f(v.value1)));
	            });
	        };
	    };
	};
	var censor = function (dictMonadWriter) {
	    return function (f) {
	        return function (m) {
	            return pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	                return Control_Applicative.pure(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v, f));
	            }));
	        };
	    };
	};
	module.exports = {
	    MonadTell: MonadTell, 
	    MonadWriter: MonadWriter, 
	    censor: censor, 
	    listen: listen, 
	    listens: listens, 
	    pass: pass, 
	    tell: tell
	};


/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Control_Alt = __webpack_require__(2);
	var Control_Alternative = __webpack_require__(61);
	var Control_Applicative = __webpack_require__(17);
	var Control_Apply = __webpack_require__(18);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Control_MonadZero = __webpack_require__(62);
	var Control_Plus = __webpack_require__(59);
	var Data_Functor = __webpack_require__(3);
	var MonadPlus = function (__superclass_Control$dotMonadZero$dotMonadZero_0) {
	    this["__superclass_Control.MonadZero.MonadZero_0"] = __superclass_Control$dotMonadZero$dotMonadZero_0;
	};
	var monadPlusArray = new MonadPlus(function () {
	    return Control_MonadZero.monadZeroArray;
	});
	module.exports = {
	    MonadPlus: MonadPlus, 
	    monadPlusArray: monadPlusArray
	};


/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Monad_State_Class = __webpack_require__(101);
	var Control_Monad_State_Trans = __webpack_require__(106);
	var Data_Identity = __webpack_require__(79);
	var Data_Newtype = __webpack_require__(51);
	var Data_Tuple = __webpack_require__(85);
	var Control_Semigroupoid = __webpack_require__(7);
	var withState = Control_Monad_State_Trans.withStateT;
	var runState = function (v) {
	    return function ($14) {
	        return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(v($14));
	    };
	};
	var mapState = function (f) {
	    return Control_Monad_State_Trans.mapStateT(function ($15) {
	        return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($15)));
	    });
	};
	var execState = function (v) {
	    return function (s) {
	        var $6 = v(s);
	        return $6.value1;
	    };
	};
	var evalState = function (v) {
	    return function (s) {
	        var $11 = v(s);
	        return $11.value0;
	    };
	};
	module.exports = {
	    evalState: evalState, 
	    execState: execState, 
	    mapState: mapState, 
	    runState: runState, 
	    withState: withState
	};


/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Alt = __webpack_require__(2);
	var Control_Alternative = __webpack_require__(61);
	var Control_Lazy = __webpack_require__(71);
	var Control_Monad_Cont_Class = __webpack_require__(98);
	var Control_Monad_Eff_Class = __webpack_require__(99);
	var Control_Monad_Error_Class = __webpack_require__(96);
	var Control_Monad_Reader_Class = __webpack_require__(100);
	var Control_Monad_Rec_Class = __webpack_require__(72);
	var Control_Monad_State_Class = __webpack_require__(101);
	var Control_Monad_Trans_Class = __webpack_require__(102);
	var Control_Monad_Writer_Class = __webpack_require__(103);
	var Control_MonadPlus = __webpack_require__(104);
	var Control_MonadZero = __webpack_require__(62);
	var Control_Plus = __webpack_require__(59);
	var Data_Newtype = __webpack_require__(51);
	var Data_Tuple = __webpack_require__(85);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var Control_Monad = __webpack_require__(22);
	var Control_Applicative = __webpack_require__(17);
	var Data_Function = __webpack_require__(5);
	var Control_Bind = __webpack_require__(20);
	var Data_Unit = __webpack_require__(8);
	var Control_Semigroupoid = __webpack_require__(7);
	var StateT = function (x) {
	    return x;
	};
	var withStateT = function (f) {
	    return function (v) {
	        return function ($97) {
	            return v(f($97));
	        };
	    };
	};
	var runStateT = function (v) {
	    return v;
	};
	var newtypeStateT = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, StateT);
	var monadTransStateT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
	    return function (m) {
	        return function (s) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v, s));
	            });
	        };
	    };
	});
	var mapStateT = function (f) {
	    return function (v) {
	        return function ($98) {
	            return f(v($98));
	        };
	    };
	};
	var lazyStateT = new Control_Lazy.Lazy(function (f) {
	    return function (s) {
	        var $52 = f(Data_Unit.unit);
	        return $52(s);
	    };
	});
	var functorStateT = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return function (s) {
	                return Data_Functor.map(dictFunctor)(function (v1) {
	                    return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
	                })(v(s));
	            };
	        };
	    });
	};
	var execStateT = function (dictFunctor) {
	    return function (v) {
	        return function (s) {
	            return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v(s));
	        };
	    };
	};
	var evalStateT = function (dictFunctor) {
	    return function (v) {
	        return function (s) {
	            return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
	        };
	    };
	};
	var monadStateT = function (dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeStateT(dictMonad);
	    }, function () {
	        return bindStateT(dictMonad);
	    });
	};
	var bindStateT = function (dictMonad) {
	    return new Control_Bind.Bind(function () {
	        return applyStateT(dictMonad);
	    }, function (v) {
	        return function (f) {
	            return function (s) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(s))(function (v1) {
	                    var $65 = f(v1.value0);
	                    return $65(v1.value1);
	                });
	            };
	        };
	    });
	};
	var applyStateT = function (dictMonad) {
	    return new Control_Apply.Apply(function () {
	        return functorStateT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
	    }, Control_Monad.ap(monadStateT(dictMonad)));
	};
	var applicativeStateT = function (dictMonad) {
	    return new Control_Applicative.Applicative(function () {
	        return applyStateT(dictMonad);
	    }, function (a) {
	        return function (s) {
	            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(a, s));
	        };
	    });
	};
	var monadAskStateT = function (dictMonadAsk) {
	    return new Control_Monad_Reader_Class.MonadAsk(function () {
	        return monadStateT(dictMonadAsk["__superclass_Control.Monad.Monad_0"]());
	    }, Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadAsk["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
	};
	var monadReaderStateT = function (dictMonadReader) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadAskStateT(dictMonadReader["__superclass_Control.Monad.Reader.Class.MonadAsk_0"]());
	    }, function ($99) {
	        return mapStateT(Control_Monad_Reader_Class.local(dictMonadReader)($99));
	    });
	};
	var monadContStateT = function (dictMonadCont) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadStateT(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function (s) {
	            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	                var $68 = f(function (a) {
	                    return function (s$prime) {
	                        return c(new Data_Tuple.Tuple(a, s$prime));
	                    };
	                });
	                return $68(s);
	            });
	        };
	    });
	};
	var monadEffState = function (dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadStateT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	    }, function ($100) {
	        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($100));
	    });
	};
	var monadErrorStateT = function (dictMonadError) {
	    return new Control_Monad_Error_Class.MonadError(function () {
	        return monadStateT(dictMonadError["__superclass_Control.Monad.Monad_0"]());
	    }, function (v) {
	        return function (h) {
	            return function (s) {
	                return Control_Monad_Error_Class.catchError(dictMonadError)(v(s))(function (e) {
	                    var $71 = h(e);
	                    return $71(s);
	                });
	            };
	        };
	    }, function (e) {
	        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)(e));
	    });
	};
	var monadRecStateT = function (dictMonadRec) {
	    return new Control_Monad_Rec_Class.MonadRec(function () {
	        return monadStateT(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function (a) {
	            var f$prime = function (v) {
	                return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())((function () {
	                    var $73 = f(v.value0);
	                    return $73;
	                })()(v.value1))(function (v1) {
	                    return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
	                        if (v1.value0 instanceof Control_Monad_Rec_Class.Loop) {
	                            return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
	                        };
	                        if (v1.value0 instanceof Control_Monad_Rec_Class.Done) {
	                            return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
	                        };
	                        throw new Error("Failed pattern match at Control.Monad.State.Trans line 88, column 11 - line 90, column 40: " + [ v1.value0.constructor.name ]);
	                    })());
	                });
	            };
	            return function (s) {
	                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, s));
	            };
	        };
	    });
	};
	var monadStateStateT = function (dictMonad) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadStateT(dictMonad);
	    }, function (f) {
	        return StateT(function ($101) {
	            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(f($101));
	        });
	    });
	};
	var monadTellStateT = function (dictMonadTell) {
	    return new Control_Monad_Writer_Class.MonadTell(function () {
	        return monadStateT(dictMonadTell["__superclass_Control.Monad.Monad_0"]());
	    }, function ($102) {
	        return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadTell["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Writer_Class.tell(dictMonadTell)($102));
	    });
	};
	var monadWriterStateT = function (dictMonadWriter) {
	    return new Control_Monad_Writer_Class.MonadWriter(function () {
	        return monadTellStateT(dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]());
	    }, function (m) {
	        return function (s) {
	            return Control_Bind.bind(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m(s)))(function (v) {
	                return Control_Applicative.pure(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
	            });
	        };
	    }, function (m) {
	        return function (s) {
	            return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(m(s))(function (v) {
	                return Control_Applicative.pure(((dictMonadWriter["__superclass_Control.Monad.Writer.Class.MonadTell_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
	            }));
	        };
	    });
	};
	var altStateT = function (dictMonad) {
	    return function (dictAlt) {
	        return new Control_Alt.Alt(function () {
	            return functorStateT(dictAlt["__superclass_Data.Functor.Functor_0"]());
	        }, function (v) {
	            return function (v1) {
	                return function (s) {
	                    return Control_Alt.alt(dictAlt)(v(s))(v1(s));
	                };
	            };
	        });
	    };
	};
	var plusStateT = function (dictMonad) {
	    return function (dictPlus) {
	        return new Control_Plus.Plus(function () {
	            return altStateT(dictMonad)(dictPlus["__superclass_Control.Alt.Alt_0"]());
	        }, function (v) {
	            return Control_Plus.empty(dictPlus);
	        });
	    };
	};
	var alternativeStateT = function (dictMonad) {
	    return function (dictAlternative) {
	        return new Control_Alternative.Alternative(function () {
	            return applicativeStateT(dictMonad);
	        }, function () {
	            return plusStateT(dictMonad)(dictAlternative["__superclass_Control.Plus.Plus_1"]());
	        });
	    };
	};
	var monadZeroStateT = function (dictMonadZero) {
	    return new Control_MonadZero.MonadZero(function () {
	        return alternativeStateT(dictMonadZero["__superclass_Control.Monad.Monad_0"]())(dictMonadZero["__superclass_Control.Alternative.Alternative_1"]());
	    }, function () {
	        return monadStateT(dictMonadZero["__superclass_Control.Monad.Monad_0"]());
	    });
	};
	var monadPlusStateT = function (dictMonadPlus) {
	    return new Control_MonadPlus.MonadPlus(function () {
	        return monadZeroStateT(dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]());
	    });
	};
	module.exports = {
	    StateT: StateT, 
	    evalStateT: evalStateT, 
	    execStateT: execStateT, 
	    mapStateT: mapStateT, 
	    runStateT: runStateT, 
	    withStateT: withStateT, 
	    newtypeStateT: newtypeStateT, 
	    functorStateT: functorStateT, 
	    applyStateT: applyStateT, 
	    applicativeStateT: applicativeStateT, 
	    altStateT: altStateT, 
	    plusStateT: plusStateT, 
	    alternativeStateT: alternativeStateT, 
	    bindStateT: bindStateT, 
	    monadStateT: monadStateT, 
	    monadRecStateT: monadRecStateT, 
	    monadZeroStateT: monadZeroStateT, 
	    monadPlusStateT: monadPlusStateT, 
	    monadTransStateT: monadTransStateT, 
	    lazyStateT: lazyStateT, 
	    monadEffState: monadEffState, 
	    monadContStateT: monadContStateT, 
	    monadErrorStateT: monadErrorStateT, 
	    monadAskStateT: monadAskStateT, 
	    monadReaderStateT: monadReaderStateT, 
	    monadStateStateT: monadStateStateT, 
	    monadTellStateT: monadTellStateT, 
	    monadWriterStateT: monadWriterStateT
	};


/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Data_Foldable = __webpack_require__(57);
	var Data_Newtype = __webpack_require__(51);
	var Data_String = __webpack_require__(90);
	var Data_Show = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Eq = __webpack_require__(31);
	var Data_HeytingAlgebra = __webpack_require__(25);
	var Data_Ord = __webpack_require__(29);
	var Data_Ordering = __webpack_require__(35);
	var Data_Semiring = __webpack_require__(38);
	var Data_Ring = __webpack_require__(36);
	var Data_EuclideanRing = __webpack_require__(41);
	var Position = function (x) {
	    return x;
	};
	var updatePosString = function (pos$prime) {
	    return function (str) {
	        var updatePosChar = function (v) {
	            return function (c) {
	                if (c === "\n") {
	                    return {
	                        line: v.line + 1 | 0, 
	                        column: 1
	                    };
	                };
	                if (c === "\r") {
	                    return {
	                        line: v.line + 1 | 0, 
	                        column: 1
	                    };
	                };
	                if (c === "\t") {
	                    return {
	                        line: v.line, 
	                        column: (v.column + 8 | 0) - (v.column - 1) % 8
	                    };
	                };
	                return {
	                    line: v.line, 
	                    column: v.column + 1 | 0
	                };
	            };
	        };
	        return Data_Foldable.foldl(Data_Foldable.foldableArray)(updatePosChar)(pos$prime)(Data_String.split(Data_Newtype.wrap(Data_String.newtypePattern)(""))(str));
	    };
	};
	var showPosition = new Data_Show.Show(function (v) {
	    return "Position { line: " + (Data_Show.show(Data_Show.showInt)(v.line) + (", column: " + (Data_Show.show(Data_Show.showInt)(v.column) + " }")));
	});
	var initialPos = {
	    line: 1, 
	    column: 1
	};
	var eqPosition = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return x.column === y.column && x.line === y.line;
	    };
	});
	var ordPosition = new Data_Ord.Ord(function () {
	    return eqPosition;
	}, function (x) {
	    return function (y) {
	        var $20 = Data_Ord.compare(Data_Ord.ordInt)(x.column)(y.column);
	        if ($20 instanceof Data_Ordering.LT) {
	            return Data_Ordering.LT.value;
	        };
	        if ($20 instanceof Data_Ordering.GT) {
	            return Data_Ordering.GT.value;
	        };
	        return Data_Ord.compare(Data_Ord.ordInt)(x.line)(y.line);
	    };
	});
	module.exports = {
	    Position: Position, 
	    initialPos: initialPos, 
	    updatePosString: updatePosString, 
	    showPosition: showPosition, 
	    eqPosition: eqPosition, 
	    ordPosition: ordPosition
	};


/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Data_String = __webpack_require__(90);
	var Control_Monad_State = __webpack_require__(105);
	var Data_Array = __webpack_require__(69);
	var Data_Foldable = __webpack_require__(57);
	var Data_Maybe = __webpack_require__(60);
	var Data_Newtype = __webpack_require__(51);
	var Text_Parsing_Parser = __webpack_require__(94);
	var Text_Parsing_Parser_Combinators = __webpack_require__(109);
	var Text_Parsing_Parser_Pos = __webpack_require__(107);
	var Prelude = __webpack_require__(16);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad_State_Class = __webpack_require__(101);
	var Control_Applicative = __webpack_require__(17);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Show = __webpack_require__(10);
	var Data_Function = __webpack_require__(5);
	var Data_Eq = __webpack_require__(31);
	var Data_HeytingAlgebra = __webpack_require__(25);
	var Data_Unit = __webpack_require__(8);
	var StringLike = function (drop, indexOf, $$null, uncons) {
	    this.drop = drop;
	    this.indexOf = indexOf;
	    this["null"] = $$null;
	    this.uncons = uncons;
	};
	var uncons = function (dict) {
	    return dict.uncons;
	};
	var stringLikeString = new StringLike(Data_String.drop, Data_String.indexOf, Data_String["null"], Data_String.uncons);
	var $$null = function (dict) {
	    return dict["null"];
	};
	var indexOf = function (dict) {
	    return dict.indexOf;
	};
	var eof = function (dictStringLike) {
	    return function (dictMonad) {
	        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
	            return v.value0;
	        }))(function (v) {
	            return Control_Applicative.unless(Text_Parsing_Parser.applicativeParserT(dictMonad))($$null(dictStringLike)(v))(Text_Parsing_Parser.fail(dictMonad)("Expected EOF"));
	        });
	    };
	};
	var drop = function (dict) {
	    return dict.drop;
	};
	var string = function (dictStringLike) {
	    return function (dictMonad) {
	        return function (str) {
	            return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
	                return v.value0;
	            }))(function (v) {
	                var $39 = indexOf(dictStringLike)(Data_Newtype.wrap(Data_String.newtypePattern)(str))(v);
	                if ($39 instanceof Data_Maybe.Just && $39.value0 === 0) {
	                    return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.modify(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v1) {
	                        return new Text_Parsing_Parser.ParseState(drop(dictStringLike)(Data_String.length(str))(v), Text_Parsing_Parser_Pos.updatePosString(v1.value1)(str), true);
	                    }))(function () {
	                        return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(str);
	                    });
	                };
	                return Text_Parsing_Parser.fail(dictMonad)("Expected " + Data_Show.show(Data_Show.showString)(str));
	            });
	        };
	    };
	};
	var anyChar = function (dictStringLike) {
	    return function (dictMonad) {
	        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
	            return v.value0;
	        }))(function (v) {
	            var $50 = uncons(dictStringLike)(v);
	            if ($50 instanceof Data_Maybe.Nothing) {
	                return Text_Parsing_Parser.fail(dictMonad)("Unexpected EOF");
	            };
	            if ($50 instanceof Data_Maybe.Just) {
	                return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.modify(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v1) {
	                    return new Text_Parsing_Parser.ParseState($50.value0.tail, Text_Parsing_Parser_Pos.updatePosString(v1.value1)(Data_String.singleton($50.value0.head)), true);
	                }))(function () {
	                    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))($50.value0.head);
	                });
	            };
	            throw new Error("Failed pattern match at Text.Parsing.Parser.String line 54, column 3 - line 61, column 16: " + [ $50.constructor.name ]);
	        });
	    };
	};
	var satisfy = function (dictStringLike) {
	    return function (dictMonad) {
	        return function (f) {
	            return Text_Parsing_Parser_Combinators["try"](dictMonad)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(anyChar(dictStringLike)(dictMonad))(function (v) {
	                var $59 = f(v);
	                if ($59) {
	                    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v);
	                };
	                if (!$59) {
	                    return Text_Parsing_Parser.fail(dictMonad)("Character '" + (Data_String.singleton(v) + "' did not satisfy predicate"));
	                };
	                throw new Error("Failed pattern match at Text.Parsing.Parser.String line 67, column 3 - line 70, column 1: " + [ $59.constructor.name ]);
	            }));
	        };
	    };
	};
	var $$char = function (dictStringLike) {
	    return function (dictMonad) {
	        return function (c) {
	            return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(function (v) {
	                return v === c;
	            }))("Expected " + Data_Show.show(Data_Show.showChar)(c));
	        };
	    };
	};
	var noneOf = function (dictStringLike) {
	    return function (dictMonad) {
	        return function (ss) {
	            return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(Data_Function.flip(Data_Foldable.notElem(Data_Foldable.foldableArray)(Data_Eq.eqChar))(ss)))("Expected none of " + Data_Show.show(Data_Show.showArray(Data_Show.showChar))(ss));
	        };
	    };
	};
	var oneOf = function (dictStringLike) {
	    return function (dictMonad) {
	        return function (ss) {
	            return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(satisfy(dictStringLike)(dictMonad)(Data_Function.flip(Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqChar))(ss)))("Expected one of " + Data_Show.show(Data_Show.showArray(Data_Show.showChar))(ss));
	        };
	    };
	};
	var whiteSpace = function (dictStringLike) {
	    return function (dictMonad) {
	        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(satisfy(dictStringLike)(dictMonad)(function (c) {
	            return c === "\n" || (c === "\r" || (c === " " || c === "\t"));
	        })))(function (v) {
	            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_String.fromCharArray(v));
	        });
	    };
	};
	var skipSpaces = function (dictStringLike) {
	    return function (dictMonad) {
	        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(whiteSpace(dictStringLike)(dictMonad))(function () {
	            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Unit.unit);
	        });
	    };
	};
	module.exports = {
	    StringLike: StringLike, 
	    anyChar: anyChar, 
	    "char": $$char, 
	    drop: drop, 
	    eof: eof, 
	    indexOf: indexOf, 
	    noneOf: noneOf, 
	    "null": $$null, 
	    oneOf: oneOf, 
	    satisfy: satisfy, 
	    skipSpaces: skipSpaces, 
	    string: string, 
	    uncons: uncons, 
	    whiteSpace: whiteSpace, 
	    stringLikeString: stringLikeString
	};


/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Monad_Except = __webpack_require__(95);
	var Control_Monad_State = __webpack_require__(105);
	var Control_Plus = __webpack_require__(59);
	var Data_Either = __webpack_require__(15);
	var Data_Foldable = __webpack_require__(57);
	var Data_List = __webpack_require__(110);
	var Data_Maybe = __webpack_require__(60);
	var Data_Newtype = __webpack_require__(51);
	var Data_Tuple = __webpack_require__(85);
	var Text_Parsing_Parser = __webpack_require__(94);
	var Control_Alt = __webpack_require__(2);
	var Data_Semigroup = __webpack_require__(12);
	var Control_Semigroupoid = __webpack_require__(7);
	var Control_Monad_Except_Trans = __webpack_require__(97);
	var Control_Monad_State_Trans = __webpack_require__(106);
	var Control_Bind = __webpack_require__(20);
	var Control_Applicative = __webpack_require__(17);
	var Data_Unit = __webpack_require__(8);
	var Data_List_Types = __webpack_require__(111);
	var Data_Function = __webpack_require__(5);
	var Data_Functor = __webpack_require__(3);
	var Control_Apply = __webpack_require__(18);
	var withErrorMessage = function (dictMonad) {
	    return function (p) {
	        return function (msg) {
	            return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Text_Parsing_Parser.fail(dictMonad)("Expected " + msg));
	        };
	    };
	};
	var $$try = function (dictMonad) {
	    return function (p) {
	        return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(Text_Parsing_Parser.newtypeParserT)(p)))(v))(function (v1) {
	                if (v1.value0 instanceof Data_Either.Left) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v1.value0, new Text_Parsing_Parser.ParseState(v1.value1.value0, v1.value1.value1, v.value2)));
	                };
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v1.value0, v1.value1));
	            });
	        })));
	    };
	};
	var skipMany1 = function (dictMonad) {
	    return function (p) {
	        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
	            return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(skipMany(dictMonad)(p))(function (v1) {
	                return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Unit.unit);
	            });
	        });
	    };
	};
	var skipMany = function (dictMonad) {
	    return function (p) {
	        return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(skipMany1(dictMonad)(p))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Unit.unit));
	    };
	};
	var sepEndBy1 = function (dictMonad) {
	    return function (p) {
	        return function (sep) {
	            return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
	                return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(sep)(function () {
	                    return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(sepEndBy(dictMonad)(p)(sep))(function (v1) {
	                        return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(new Data_List_Types.Cons(v, v1));
	                    });
	                }))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_List.singleton(v)));
	            });
	        };
	    };
	};
	var sepEndBy = function (dictMonad) {
	    return function (p) {
	        return function (sep) {
	            return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(sepEndBy1(dictMonad)(p)(sep))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_List_Types.Nil.value));
	        };
	    };
	};
	var sepBy1 = function (dictMonad) {
	    return function (p) {
	        return function (sep) {
	            return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
	                return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Data_List.many(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(sep)(function () {
	                    return p;
	                })))(function (v1) {
	                    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(new Data_List_Types.Cons(v, v1));
	                });
	            });
	        };
	    };
	};
	var sepBy = function (dictMonad) {
	    return function (p) {
	        return function (sep) {
	            return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(sepBy1(dictMonad)(p)(sep))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_List_Types.Nil.value));
	        };
	    };
	};
	var optional = function (dictMonad) {
	    return function (p) {
	        return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function () {
	            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Unit.unit);
	        }))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Unit.unit));
	    };
	};
	var option = function (dictMonad) {
	    return function (a) {
	        return function (p) {
	            return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
	        };
	    };
	};
	var optionMaybe = function (dictMonad) {
	    return function (p) {
	        return option(dictMonad)(Data_Maybe.Nothing.value)(Data_Functor.map(Text_Parsing_Parser.functorParserT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Data_Maybe.Just.create)(p));
	    };
	};
	var notFollowedBy = function (dictMonad) {
	    return function (p) {
	        return $$try(dictMonad)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(dictMonad))($$try(dictMonad)(p))(Text_Parsing_Parser.fail(dictMonad)("Negated parser succeeded")))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Unit.unit)));
	    };
	};
	var manyTill = function (dictMonad) {
	    return function (p) {
	        return function (end) {
	            var scan = Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(end)(function () {
	                return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_List_Types.Nil.value);
	            }))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
	                return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(scan)(function (v1) {
	                    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(new Data_List_Types.Cons(v, v1));
	                });
	            }));
	            return scan;
	        };
	    };
	};
	var many1Till = function (dictMonad) {
	    return function (p) {
	        return function (end) {
	            return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
	                return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(manyTill(dictMonad)(p)(end))(function (v1) {
	                    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(new Data_List_Types.Cons(v, v1));
	                });
	            });
	        };
	    };
	};
	var lookAhead = function (dictMonad) {
	    return function (p) {
	        return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (s) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(Text_Parsing_Parser.newtypeParserT)(p)))(s))(function (v) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v.value0, s));
	            });
	        })));
	    };
	};
	var endBy1 = function (dictMonad) {
	    return function (p) {
	        return function (sep) {
	            return Data_List.some(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
	                return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(sep)(function () {
	                    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v);
	                });
	            }));
	        };
	    };
	};
	var endBy = function (dictMonad) {
	    return function (p) {
	        return function (sep) {
	            return Data_List.many(Text_Parsing_Parser.alternativeParserT(dictMonad))(Text_Parsing_Parser.lazyParserT)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
	                return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(sep)(function () {
	                    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v);
	                });
	            }));
	        };
	    };
	};
	var choice = function (dictFoldable) {
	    return function (dictMonad) {
	        return Data_Foldable.foldl(dictFoldable)(Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad)))(Control_Plus.empty(Text_Parsing_Parser.plusParserT(dictMonad)));
	    };
	};
	var chainr1$prime = function (dictMonad) {
	    return function (p) {
	        return function (f) {
	            return function (a) {
	                return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(f)(function (v) {
	                    return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(chainr1(dictMonad)(p)(f))(function (v1) {
	                        return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v(a)(v1));
	                    });
	                }))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
	            };
	        };
	    };
	};
	var chainr1 = function (dictMonad) {
	    return function (p) {
	        return function (f) {
	            return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
	                return chainr1$prime(dictMonad)(p)(f)(v);
	            });
	        };
	    };
	};
	var chainr = function (dictMonad) {
	    return function (p) {
	        return function (f) {
	            return function (a) {
	                return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(chainr1(dictMonad)(p)(f))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
	            };
	        };
	    };
	};
	var chainl1$prime = function (dictMonad) {
	    return function (p) {
	        return function (f) {
	            return function (a) {
	                return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(f)(function (v) {
	                    return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v1) {
	                        return chainl1$prime(dictMonad)(p)(f)(v(a)(v1));
	                    });
	                }))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
	            };
	        };
	    };
	};
	var chainl1 = function (dictMonad) {
	    return function (p) {
	        return function (f) {
	            return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
	                return chainl1$prime(dictMonad)(p)(f)(v);
	            });
	        };
	    };
	};
	var chainl = function (dictMonad) {
	    return function (p) {
	        return function (f) {
	            return function (a) {
	                return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(chainl1(dictMonad)(p)(f))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
	            };
	        };
	    };
	};
	var between = function (dictMonad) {
	    return function (open) {
	        return function (close) {
	            return function (p) {
	                return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(open)(function () {
	                    return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
	                        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(close)(function () {
	                            return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v);
	                        });
	                    });
	                });
	            };
	        };
	    };
	};
	var asErrorMessage = function (dictMonad) {
	    return Data_Function.flip(withErrorMessage(dictMonad));
	};
	module.exports = {
	    asErrorMessage: asErrorMessage, 
	    between: between, 
	    chainl: chainl, 
	    chainl1: chainl1, 
	    "chainl1'": chainl1$prime, 
	    chainr: chainr, 
	    chainr1: chainr1, 
	    "chainr1'": chainr1$prime, 
	    choice: choice, 
	    endBy: endBy, 
	    endBy1: endBy1, 
	    lookAhead: lookAhead, 
	    many1Till: many1Till, 
	    manyTill: manyTill, 
	    notFollowedBy: notFollowedBy, 
	    option: option, 
	    optionMaybe: optionMaybe, 
	    optional: optional, 
	    sepBy: sepBy, 
	    sepBy1: sepBy1, 
	    sepEndBy: sepEndBy, 
	    sepEndBy1: sepEndBy1, 
	    skipMany: skipMany, 
	    skipMany1: skipMany1, 
	    "try": $$try, 
	    withErrorMessage: withErrorMessage
	};


/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Alt = __webpack_require__(2);
	var Control_Alternative = __webpack_require__(61);
	var Control_Lazy = __webpack_require__(71);
	var Control_Monad_Rec_Class = __webpack_require__(72);
	var Data_Bifunctor = __webpack_require__(55);
	var Data_Foldable = __webpack_require__(57);
	var Data_List_Types = __webpack_require__(111);
	var Data_Maybe = __webpack_require__(60);
	var Data_NonEmpty = __webpack_require__(84);
	var Data_Traversable = __webpack_require__(67);
	var Data_Tuple = __webpack_require__(85);
	var Data_Unfoldable = __webpack_require__(88);
	var Data_Functor = __webpack_require__(3);
	var Data_Ring = __webpack_require__(36);
	var Data_Eq = __webpack_require__(31);
	var Data_Ordering = __webpack_require__(35);
	var Data_Boolean = __webpack_require__(23);
	var Data_Function = __webpack_require__(5);
	var Control_Semigroupoid = __webpack_require__(7);
	var Data_Ord = __webpack_require__(29);
	var Data_Semiring = __webpack_require__(38);
	var Control_Bind = __webpack_require__(20);
	var Control_Applicative = __webpack_require__(17);
	var Data_Unit = __webpack_require__(8);
	var Control_Apply = __webpack_require__(18);
	var Data_HeytingAlgebra = __webpack_require__(25);
	var Data_Semigroup = __webpack_require__(12);
	var Control_Category = __webpack_require__(6);
	var updateAt = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
	                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));
	            };
	            if (v2 instanceof Data_List_Types.Cons) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
	                    return new Data_List_Types.Cons(v2.value0, v3);
	                })(updateAt(v - 1)(v1)(v2.value1));
	            };
	            return Data_Maybe.Nothing.value;
	        };
	    };
	};
	var unzip = Data_Foldable.foldr(Data_List_Types.foldableList)(function (v) {
	    return function (v1) {
	        return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));
	    };
	})(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));
	var uncons = function (v) {
	    if (v instanceof Data_List_Types.Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Data_List_Types.Cons) {
	        return new Data_Maybe.Just({
	            head: v.value0, 
	            tail: v.value1
	        });
	    };
	    throw new Error("Failed pattern match at Data.List line 257, column 1 - line 257, column 21: " + [ v.constructor.name ]);
	};
	var toUnfoldable = function (dictUnfoldable) {
	    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
	        return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
	            return new Data_Tuple.Tuple(rec.head, rec.tail);
	        })(uncons(xs));
	    });
	};
	var tail = function (v) {
	    if (v instanceof Data_List_Types.Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Data_List_Types.Cons) {
	        return new Data_Maybe.Just(v.value1);
	    };
	    throw new Error("Failed pattern match at Data.List line 238, column 1 - line 238, column 19: " + [ v.constructor.name ]);
	};
	var span = function (v) {
	    return function (v1) {
	        if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
	            var $124 = span(v)(v1.value1);
	            return {
	                init: new Data_List_Types.Cons(v1.value0, $124.init), 
	                rest: $124.rest
	            };
	        };
	        return {
	            init: Data_List_Types.Nil.value, 
	            rest: v1
	        };
	    };
	};
	var singleton = function (a) {
	    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
	};
	var sortBy = function (cmp) {
	    var merge = function (v) {
	        return function (v1) {
	            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
	                if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
	                    return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
	                };
	                if (Data_Boolean.otherwise) {
	                    return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
	                };
	            };
	            if (v instanceof Data_List_Types.Nil) {
	                return v1;
	            };
	            if (v1 instanceof Data_List_Types.Nil) {
	                return v;
	            };
	            throw new Error("Failed pattern match at Data.List line 461, column 3 - line 463, column 41: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	    var mergePairs = function (v) {
	        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
	            return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
	        };
	        return v;
	    };
	    var mergeAll = function (__copy_v) {
	        var v = __copy_v;
	        tco: while (true) {
	            if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
	                return v.value0;
	            };
	            var __tco_v = mergePairs(v);
	            v = __tco_v;
	            continue tco;
	        };
	    };
	    var sequences = function (v) {
	        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
	            if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
	                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
	            };
	            if (Data_Boolean.otherwise) {
	                return ascending(v.value1.value0)(function (v1) {
	                    return new Data_List_Types.Cons(v.value0, v1);
	                })(v.value1.value1);
	            };
	        };
	        return singleton(v);
	    };
	    var descending = function (__copy_a) {
	        return function (__copy_as) {
	            return function (__copy_v) {
	                var a = __copy_a;
	                var as = __copy_as;
	                var v = __copy_v;
	                tco: while (true) {
	                    if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
	                        var __tco_a = v.value0;
	                        var __tco_as = new Data_List_Types.Cons(a, as);
	                        var __tco_v = v.value1;
	                        a = __tco_a;
	                        as = __tco_as;
	                        v = __tco_v;
	                        continue tco;
	                    };
	                    return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
	                };
	            };
	        };
	    };
	    var ascending = function (a) {
	        return function (as) {
	            return function (v) {
	                if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
	                    return ascending(v.value0)(function (ys) {
	                        return as(new Data_List_Types.Cons(a, ys));
	                    })(v.value1);
	                };
	                return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
	            };
	        };
	    };
	    return function ($303) {
	        return mergeAll(sequences($303));
	    };
	};
	var sort = function (dictOrd) {
	    return function (xs) {
	        return sortBy(Data_Ord.compare(dictOrd))(xs);
	    };
	};
	var reverse = (function () {
	    var go = function (__copy_acc) {
	        return function (__copy_v) {
	            var acc = __copy_acc;
	            var v = __copy_v;
	            tco: while (true) {
	                if (v instanceof Data_List_Types.Nil) {
	                    return acc;
	                };
	                if (v instanceof Data_List_Types.Cons) {
	                    var __tco_acc = new Data_List_Types.Cons(v.value0, acc);
	                    var __tco_v = v.value1;
	                    acc = __tco_acc;
	                    v = __tco_v;
	                    continue tco;
	                };
	                throw new Error("Failed pattern match at Data.List line 352, column 1 - line 355, column 36: " + [ acc.constructor.name, v.constructor.name ]);
	            };
	        };
	    };
	    return go(Data_List_Types.Nil.value);
	})();
	var snoc = function (xs) {
	    return function (x) {
	        return reverse(new Data_List_Types.Cons(x, reverse(xs)));
	    };
	};
	var take = (function () {
	    var go = function (__copy_acc) {
	        return function (__copy_v) {
	            return function (__copy_v1) {
	                var acc = __copy_acc;
	                var v = __copy_v;
	                var v1 = __copy_v1;
	                tco: while (true) {
	                    if (v === 0) {
	                        return reverse(acc);
	                    };
	                    if (v1 instanceof Data_List_Types.Nil) {
	                        return reverse(acc);
	                    };
	                    if (v1 instanceof Data_List_Types.Cons) {
	                        var __tco_acc = new Data_List_Types.Cons(v1.value0, acc);
	                        var __tco_v = v - 1;
	                        var __tco_v1 = v1.value1;
	                        acc = __tco_acc;
	                        v = __tco_v;
	                        v1 = __tco_v1;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.List line 479, column 1 - line 483, column 46: " + [ acc.constructor.name, v.constructor.name, v1.constructor.name ]);
	                };
	            };
	        };
	    };
	    return go(Data_List_Types.Nil.value);
	})();
	var takeWhile = function (p) {
	    var go = function (__copy_acc) {
	        return function (__copy_v) {
	            var acc = __copy_acc;
	            var v = __copy_v;
	            tco: while (true) {
	                if (v instanceof Data_List_Types.Cons && p(v.value0)) {
	                    var __tco_acc = new Data_List_Types.Cons(v.value0, acc);
	                    var __tco_v = v.value1;
	                    acc = __tco_acc;
	                    v = __tco_v;
	                    continue tco;
	                };
	                return reverse(acc);
	            };
	        };
	    };
	    return go(Data_List_Types.Nil.value);
	};
	var zipWith = function (f) {
	    return function (xs) {
	        return function (ys) {
	            var go = function (__copy_v) {
	                return function (__copy_v1) {
	                    return function (__copy_acc) {
	                        var v = __copy_v;
	                        var v1 = __copy_v1;
	                        var acc = __copy_acc;
	                        tco: while (true) {
	                            if (v instanceof Data_List_Types.Nil) {
	                                return acc;
	                            };
	                            if (v1 instanceof Data_List_Types.Nil) {
	                                return acc;
	                            };
	                            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
	                                var __tco_v = v.value1;
	                                var __tco_v1 = v1.value1;
	                                var __tco_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
	                                v = __tco_v;
	                                v1 = __tco_v1;
	                                acc = __tco_acc;
	                                continue tco;
	                            };
	                            throw new Error("Failed pattern match at Data.List line 643, column 1 - line 647, column 52: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
	                        };
	                    };
	                };
	            };
	            return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
	        };
	    };
	};
	var zip = zipWith(Data_Tuple.Tuple.create);
	var zipWithA = function (dictApplicative) {
	    return function (f) {
	        return function (xs) {
	            return function (ys) {
	                return Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
	            };
	        };
	    };
	};
	var range = function (start) {
	    return function (end) {
	        if (start === end) {
	            return singleton(start);
	        };
	        if (Data_Boolean.otherwise) {
	            var go = function (__copy_s) {
	                return function (__copy_e) {
	                    return function (__copy_step) {
	                        return function (__copy_rest) {
	                            var s = __copy_s;
	                            var e = __copy_e;
	                            var step = __copy_step;
	                            var rest = __copy_rest;
	                            tco: while (true) {
	                                if (s === e) {
	                                    return new Data_List_Types.Cons(s, rest);
	                                };
	                                if (Data_Boolean.otherwise) {
	                                    var __tco_s = s + step | 0;
	                                    var __tco_e = e;
	                                    var __tco_step = step;
	                                    var __tco_rest = new Data_List_Types.Cons(s, rest);
	                                    s = __tco_s;
	                                    e = __tco_e;
	                                    step = __tco_step;
	                                    rest = __tco_rest;
	                                    continue tco;
	                                };
	                                throw new Error("Failed pattern match at Data.List line 137, column 1 - line 141, column 65: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
	                            };
	                        };
	                    };
	                };
	            };
	            return go(end)(start)((function () {
	                var $184 = start > end;
	                if ($184) {
	                    return 1;
	                };
	                if (!$184) {
	                    return -1;
	                };
	                throw new Error("Failed pattern match at Data.List line 138, column 45 - line 138, column 74: " + [ $184.constructor.name ]);
	            })())(Data_List_Types.Nil.value);
	        };
	        throw new Error("Failed pattern match at Data.List line 137, column 1 - line 141, column 65: " + [ start.constructor.name, end.constructor.name ]);
	    };
	};
	var $$null = function (v) {
	    if (v instanceof Data_List_Types.Nil) {
	        return true;
	    };
	    return false;
	};
	var mapWithIndex = function (f) {
	    return function (lst) {
	        var go = function (__copy_v) {
	            return function (__copy_v1) {
	                return function (__copy_acc) {
	                    var v = __copy_v;
	                    var v1 = __copy_v1;
	                    var acc = __copy_acc;
	                    tco: while (true) {
	                        if (v1 instanceof Data_List_Types.Nil) {
	                            return acc;
	                        };
	                        if (v1 instanceof Data_List_Types.Cons) {
	                            var __tco_v = v + 1 | 0;
	                            var __tco_v1 = v1.value1;
	                            var __tco_acc = new Data_List_Types.Cons(f(v1.value0)(v), acc);
	                            v = __tco_v;
	                            v1 = __tco_v1;
	                            acc = __tco_acc;
	                            continue tco;
	                        };
	                        throw new Error("Failed pattern match at Data.List line 417, column 1 - line 420, column 48: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
	                    };
	                };
	            };
	        };
	        return reverse(go(0)(lst)(Data_List_Types.Nil.value));
	    };
	};
	var mapMaybe = function (f) {
	    var go = function (__copy_acc) {
	        return function (__copy_v) {
	            var acc = __copy_acc;
	            var v = __copy_v;
	            tco: while (true) {
	                if (v instanceof Data_List_Types.Nil) {
	                    return reverse(acc);
	                };
	                if (v instanceof Data_List_Types.Cons) {
	                    var $193 = f(v.value0);
	                    if ($193 instanceof Data_Maybe.Nothing) {
	                        var __tco_acc = acc;
	                        var __tco_v = v.value1;
	                        acc = __tco_acc;
	                        v = __tco_v;
	                        continue tco;
	                    };
	                    if ($193 instanceof Data_Maybe.Just) {
	                        var __tco_acc = new Data_List_Types.Cons($193.value0, acc);
	                        var __tco_v = v.value1;
	                        acc = __tco_acc;
	                        v = __tco_v;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.List line 405, column 5 - line 407, column 32: " + [ $193.constructor.name ]);
	                };
	                throw new Error("Failed pattern match at Data.List line 401, column 1 - line 407, column 32: " + [ acc.constructor.name, v.constructor.name ]);
	            };
	        };
	    };
	    return go(Data_List_Types.Nil.value);
	};
	var manyRec = function (dictMonadRec) {
	    return function (dictAlternative) {
	        return function (p) {
	            var go = function (acc) {
	                return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Alt.alt((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(Data_Functor.map(((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (v) {
	                    return Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v1) {
	                        return new Data_List_Types.Cons(v1, acc);
	                    })(function (v1) {
	                        return reverse(acc);
	                    })(v));
	                });
	            };
	            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
	        };
	    };
	};
	var someRec = function (dictMonadRec) {
	    return function (dictAlternative) {
	        return function (v) {
	            return Control_Apply.apply((dictAlternative["__superclass_Control.Applicative.Applicative_0"]())["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_List_Types.Cons.create)(v))(manyRec(dictMonadRec)(dictAlternative)(v));
	        };
	    };
	};
	var some = function (dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Apply.apply((dictAlternative["__superclass_Control.Applicative.Applicative_0"]())["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
	                return many(dictAlternative)(dictLazy)(v);
	            }));
	        };
	    };
	};
	var many = function (dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Alt.alt((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())(Data_List_Types.Nil.value));
	        };
	    };
	};
	var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
	    return function (v) {
	        return acc + 1 | 0;
	    };
	})(0);
	var last = function (__copy_v) {
	    var v = __copy_v;
	    tco: while (true) {
	        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
	            return new Data_Maybe.Just(v.value0);
	        };
	        if (v instanceof Data_List_Types.Cons) {
	            var __tco_v = v.value1;
	            v = __tco_v;
	            continue tco;
	        };
	        return Data_Maybe.Nothing.value;
	    };
	};
	var insertBy = function (v) {
	    return function (x) {
	        return function (v1) {
	            if (v1 instanceof Data_List_Types.Nil) {
	                return singleton(x);
	            };
	            if (v1 instanceof Data_List_Types.Cons) {
	                var $209 = v(x)(v1.value0);
	                if ($209 instanceof Data_Ordering.GT) {
	                    return new Data_List_Types.Cons(v1.value0, insertBy(v)(x)(v1.value1));
	                };
	                return new Data_List_Types.Cons(x, v1);
	            };
	            throw new Error("Failed pattern match at Data.List line 209, column 1 - line 209, column 31: " + [ v.constructor.name, x.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var insertAt = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v === 0) {
	                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));
	            };
	            if (v2 instanceof Data_List_Types.Cons) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
	                    return new Data_List_Types.Cons(v2.value0, v3);
	                })(insertAt(v - 1)(v1)(v2.value1));
	            };
	            return Data_Maybe.Nothing.value;
	        };
	    };
	};
	var insert = function (dictOrd) {
	    return insertBy(Data_Ord.compare(dictOrd));
	};
	var init = function (v) {
	    if (v instanceof Data_List_Types.Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    var go = function (__copy_v1) {
	        return function (__copy_acc) {
	            var v1 = __copy_v1;
	            var acc = __copy_acc;
	            tco: while (true) {
	                if (v1 instanceof Data_List_Types.Cons && v1.value1 instanceof Data_List_Types.Nil) {
	                    return acc;
	                };
	                if (v1 instanceof Data_List_Types.Cons) {
	                    var __tco_v1 = v1.value1;
	                    var __tco_acc = new Data_List_Types.Cons(v1.value0, acc);
	                    v1 = __tco_v1;
	                    acc = __tco_acc;
	                    continue tco;
	                };
	                return acc;
	            };
	        };
	    };
	    return Data_Maybe.Just.create(reverse(go(v)(Data_List_Types.Nil.value)));
	};
	var index = function (__copy_v) {
	    return function (__copy_v1) {
	        var v = __copy_v;
	        var v1 = __copy_v1;
	        tco: while (true) {
	            if (v instanceof Data_List_Types.Nil) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (v instanceof Data_List_Types.Cons && v1 === 0) {
	                return new Data_Maybe.Just(v.value0);
	            };
	            if (v instanceof Data_List_Types.Cons) {
	                var __tco_v = v.value1;
	                var __tco_v1 = v1 - 1;
	                v = __tco_v;
	                v1 = __tco_v1;
	                continue tco;
	            };
	            throw new Error("Failed pattern match at Data.List line 268, column 1 - line 268, column 22: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var head = function (v) {
	    if (v instanceof Data_List_Types.Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Data_List_Types.Cons) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    throw new Error("Failed pattern match at Data.List line 223, column 1 - line 223, column 19: " + [ v.constructor.name ]);
	};
	var transpose = function (v) {
	    if (v instanceof Data_List_Types.Nil) {
	        return Data_List_Types.Nil.value;
	    };
	    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) {
	        return transpose(v.value1);
	    };
	    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) {
	        return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
	    };
	    throw new Error("Failed pattern match at Data.List line 680, column 1 - line 680, column 20: " + [ v.constructor.name ]);
	};
	var groupBy = function (v) {
	    return function (v1) {
	        if (v1 instanceof Data_List_Types.Nil) {
	            return Data_List_Types.Nil.value;
	        };
	        if (v1 instanceof Data_List_Types.Cons) {
	            var $242 = span(v(v1.value0))(v1.value1);
	            return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, $242.init), groupBy(v)($242.rest));
	        };
	        throw new Error("Failed pattern match at Data.List line 553, column 1 - line 553, column 20: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	};
	var group = function (dictEq) {
	    return groupBy(Data_Eq.eq(dictEq));
	};
	var group$prime = function (dictOrd) {
	    return function ($304) {
	        return group(dictOrd["__superclass_Data.Eq.Eq_0"]())(sort(dictOrd)($304));
	    };
	};
	var fromFoldable = function (dictFoldable) {
	    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
	};
	var foldM = function (dictMonad) {
	    return function (v) {
	        return function (a) {
	            return function (v1) {
	                if (v1 instanceof Data_List_Types.Nil) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(a);
	                };
	                if (v1 instanceof Data_List_Types.Cons) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(a)(v1.value0))(function (a$prime) {
	                        return foldM(dictMonad)(v)(a$prime)(v1.value1);
	                    });
	                };
	                throw new Error("Failed pattern match at Data.List line 691, column 1 - line 691, column 23: " + [ v.constructor.name, a.constructor.name, v1.constructor.name ]);
	            };
	        };
	    };
	};
	var findIndex = function (fn) {
	    var go = function (__copy_v) {
	        return function (__copy_v1) {
	            var v = __copy_v;
	            var v1 = __copy_v1;
	            tco: while (true) {
	                if (v1 instanceof Data_List_Types.Cons) {
	                    if (fn(v1.value0)) {
	                        return new Data_Maybe.Just(v);
	                    };
	                    if (Data_Boolean.otherwise) {
	                        var __tco_v = v + 1 | 0;
	                        var __tco_v1 = v1.value1;
	                        v = __tco_v;
	                        v1 = __tco_v1;
	                        continue tco;
	                    };
	                };
	                if (v1 instanceof Data_List_Types.Nil) {
	                    return Data_Maybe.Nothing.value;
	                };
	                throw new Error("Failed pattern match at Data.List line 288, column 3 - line 289, column 44: " + [ v.constructor.name, v1.constructor.name ]);
	            };
	        };
	    };
	    return go(0);
	};
	var findLastIndex = function (fn) {
	    return function (xs) {
	        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
	            return length(xs) - 1 - v;
	        })(findIndex(fn)(reverse(xs)));
	    };
	};
	var filterM = function (dictMonad) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Data_List_Types.Nil) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_List_Types.Nil.value);
	            };
	            if (v1 instanceof Data_List_Types.Cons) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(v1.value0))(function (v2) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(filterM(dictMonad)(v)(v1.value1))(function (v3) {
	                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())((function () {
	                            if (v2) {
	                                return new Data_List_Types.Cons(v1.value0, v3);
	                            };
	                            if (!v2) {
	                                return v3;
	                            };
	                            throw new Error("Failed pattern match at Data.List line 394, column 3 - line 394, column 34: " + [ v2.constructor.name ]);
	                        })());
	                    });
	                });
	            };
	            throw new Error("Failed pattern match at Data.List line 390, column 1 - line 390, column 25: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var filter = function (p) {
	    var go = function (__copy_acc) {
	        return function (__copy_v) {
	            var acc = __copy_acc;
	            var v = __copy_v;
	            tco: while (true) {
	                if (v instanceof Data_List_Types.Nil) {
	                    return reverse(acc);
	                };
	                if (v instanceof Data_List_Types.Cons) {
	                    if (p(v.value0)) {
	                        var __tco_acc = new Data_List_Types.Cons(v.value0, acc);
	                        var __tco_v = v.value1;
	                        acc = __tco_acc;
	                        v = __tco_v;
	                        continue tco;
	                    };
	                    if (Data_Boolean.otherwise) {
	                        var __tco_acc = acc;
	                        var __tco_v = v.value1;
	                        acc = __tco_acc;
	                        v = __tco_v;
	                        continue tco;
	                    };
	                };
	                throw new Error("Failed pattern match at Data.List line 374, column 1 - line 379, column 28: " + [ acc.constructor.name, v.constructor.name ]);
	            };
	        };
	    };
	    return go(Data_List_Types.Nil.value);
	};
	var intersectBy = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v1 instanceof Data_List_Types.Nil) {
	                return Data_List_Types.Nil.value;
	            };
	            if (v2 instanceof Data_List_Types.Nil) {
	                return Data_List_Types.Nil.value;
	            };
	            return filter(function (x) {
	                return Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(v(x))(v2);
	            })(v1);
	        };
	    };
	};
	var intersect = function (dictEq) {
	    return intersectBy(Data_Eq.eq(dictEq));
	};
	var nubBy = function (v) {
	    return function (v1) {
	        if (v1 instanceof Data_List_Types.Nil) {
	            return Data_List_Types.Nil.value;
	        };
	        if (v1 instanceof Data_List_Types.Cons) {
	            return new Data_List_Types.Cons(v1.value0, nubBy(v)(filter(function (y) {
	                return !v(v1.value0)(y);
	            })(v1.value1)));
	        };
	        throw new Error("Failed pattern match at Data.List line 572, column 1 - line 572, column 22: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	};
	var nub = function (dictEq) {
	    return nubBy(Data_Eq.eq(dictEq));
	};
	var elemLastIndex = function (dictEq) {
	    return function (x) {
	        return findLastIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var elemIndex = function (dictEq) {
	    return function (x) {
	        return findIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var dropWhile = function (p) {
	    var go = function (__copy_v) {
	        var v = __copy_v;
	        tco: while (true) {
	            if (v instanceof Data_List_Types.Cons && p(v.value0)) {
	                var __tco_v = v.value1;
	                v = __tco_v;
	                continue tco;
	            };
	            return v;
	        };
	    };
	    return go;
	};
	var drop = function (__copy_v) {
	    return function (__copy_v1) {
	        var v = __copy_v;
	        var v1 = __copy_v1;
	        tco: while (true) {
	            if (v === 0) {
	                return v1;
	            };
	            if (v1 instanceof Data_List_Types.Nil) {
	                return Data_List_Types.Nil.value;
	            };
	            if (v1 instanceof Data_List_Types.Cons) {
	                var __tco_v = v - 1;
	                var __tco_v1 = v1.value1;
	                v = __tco_v;
	                v1 = __tco_v1;
	                continue tco;
	            };
	            throw new Error("Failed pattern match at Data.List line 498, column 1 - line 498, column 15: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var slice = function (start) {
	    return function (end) {
	        return function (xs) {
	            return take(end - start)(drop(start)(xs));
	        };
	    };
	};
	var deleteBy = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Data_List_Types.Nil) {
	                return Data_List_Types.Nil.value;
	            };
	            if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {
	                return v2.value1;
	            };
	            if (v2 instanceof Data_List_Types.Cons) {
	                return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
	            };
	            throw new Error("Failed pattern match at Data.List line 599, column 1 - line 599, column 23: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	};
	var unionBy = function (eq) {
	    return function (xs) {
	        return function (ys) {
	            return Data_Semigroup.append(Data_List_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
	        };
	    };
	};
	var union = function (dictEq) {
	    return unionBy(Data_Eq.eq(dictEq));
	};
	var deleteAt = function (v) {
	    return function (v1) {
	        if (v === 0 && v1 instanceof Data_List_Types.Cons) {
	            return new Data_Maybe.Just(v1.value1);
	        };
	        if (v1 instanceof Data_List_Types.Cons) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
	                return new Data_List_Types.Cons(v1.value0, v2);
	            })(deleteAt(v - 1)(v1.value1));
	        };
	        return Data_Maybe.Nothing.value;
	    };
	};
	var $$delete = function (dictEq) {
	    return deleteBy(Data_Eq.eq(dictEq));
	};
	var difference = function (dictEq) {
	    return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
	};
	var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindList));
	var concat = function (v) {
	    return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.id(Control_Category.categoryFn));
	};
	var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
	var alterAt = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
	                return Data_Maybe.Just.create((function () {
	                    var $297 = v1(v2.value0);
	                    if ($297 instanceof Data_Maybe.Nothing) {
	                        return v2.value1;
	                    };
	                    if ($297 instanceof Data_Maybe.Just) {
	                        return new Data_List_Types.Cons($297.value0, v2.value1);
	                    };
	                    throw new Error("Failed pattern match at Data.List line 337, column 24 - line 340, column 23: " + [ $297.constructor.name ]);
	                })());
	            };
	            if (v2 instanceof Data_List_Types.Cons) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
	                    return new Data_List_Types.Cons(v2.value0, v3);
	                })(alterAt(v - 1)(v1)(v2.value1));
	            };
	            return Data_Maybe.Nothing.value;
	        };
	    };
	};
	var modifyAt = function (n) {
	    return function (f) {
	        return alterAt(n)(function ($305) {
	            return Data_Maybe.Just.create(f($305));
	        });
	    };
	};
	module.exports = {
	    alterAt: alterAt, 
	    catMaybes: catMaybes, 
	    concat: concat, 
	    concatMap: concatMap, 
	    "delete": $$delete, 
	    deleteAt: deleteAt, 
	    deleteBy: deleteBy, 
	    difference: difference, 
	    drop: drop, 
	    dropWhile: dropWhile, 
	    elemIndex: elemIndex, 
	    elemLastIndex: elemLastIndex, 
	    filter: filter, 
	    filterM: filterM, 
	    findIndex: findIndex, 
	    findLastIndex: findLastIndex, 
	    foldM: foldM, 
	    fromFoldable: fromFoldable, 
	    group: group, 
	    "group'": group$prime, 
	    groupBy: groupBy, 
	    head: head, 
	    index: index, 
	    init: init, 
	    insert: insert, 
	    insertAt: insertAt, 
	    insertBy: insertBy, 
	    intersect: intersect, 
	    intersectBy: intersectBy, 
	    last: last, 
	    length: length, 
	    many: many, 
	    manyRec: manyRec, 
	    mapMaybe: mapMaybe, 
	    mapWithIndex: mapWithIndex, 
	    modifyAt: modifyAt, 
	    nub: nub, 
	    nubBy: nubBy, 
	    "null": $$null, 
	    range: range, 
	    reverse: reverse, 
	    singleton: singleton, 
	    slice: slice, 
	    snoc: snoc, 
	    some: some, 
	    someRec: someRec, 
	    sort: sort, 
	    sortBy: sortBy, 
	    span: span, 
	    tail: tail, 
	    take: take, 
	    takeWhile: takeWhile, 
	    toUnfoldable: toUnfoldable, 
	    transpose: transpose, 
	    uncons: uncons, 
	    union: union, 
	    unionBy: unionBy, 
	    unzip: unzip, 
	    updateAt: updateAt, 
	    zip: zip, 
	    zipWith: zipWith, 
	    zipWithA: zipWithA
	};


/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var Prelude = __webpack_require__(16);
	var Control_Alt = __webpack_require__(2);
	var Control_Alternative = __webpack_require__(61);
	var Control_Apply = __webpack_require__(18);
	var Control_Comonad = __webpack_require__(49);
	var Control_Extend = __webpack_require__(45);
	var Control_MonadPlus = __webpack_require__(104);
	var Control_MonadZero = __webpack_require__(62);
	var Control_Plus = __webpack_require__(59);
	var Data_Foldable = __webpack_require__(57);
	var Data_Generic = __webpack_require__(112);
	var Data_Maybe = __webpack_require__(60);
	var Data_Monoid = __webpack_require__(47);
	var Data_Newtype = __webpack_require__(51);
	var Data_NonEmpty = __webpack_require__(84);
	var Data_Traversable = __webpack_require__(67);
	var Data_Tuple = __webpack_require__(85);
	var Data_Unfoldable = __webpack_require__(88);
	var Data_Unit = __webpack_require__(8);
	var Data_Show = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Functor = __webpack_require__(3);
	var Data_Eq = __webpack_require__(31);
	var Data_Function = __webpack_require__(5);
	var Data_HeytingAlgebra = __webpack_require__(25);
	var Data_Ord = __webpack_require__(29);
	var Data_Ordering = __webpack_require__(35);
	var Control_Semigroupoid = __webpack_require__(7);
	var Control_Applicative = __webpack_require__(17);
	var Control_Category = __webpack_require__(6);
	var Control_Bind = __webpack_require__(20);
	var Control_Monad = __webpack_require__(22);
	var Nil = (function () {
	    function Nil() {

	    };
	    Nil.value = new Nil();
	    return Nil;
	})();
	var Cons = (function () {
	    function Cons(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Cons.create = function (value0) {
	        return function (value1) {
	            return new Cons(value0, value1);
	        };
	    };
	    return Cons;
	})();
	var NonEmptyList = function (x) {
	    return x;
	};
	var toList = function (v) {
	    return new Cons(v.value0, v.value1);
	};
	var semigroupList = new Data_Semigroup.Semigroup(function (v) {
	    return function (ys) {
	        if (v instanceof Nil) {
	            return ys;
	        };
	        if (v instanceof Cons) {
	            return new Cons(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(ys));
	        };
	        throw new Error("Failed pattern match at Data.List.Types line 53, column 3 - line 53, column 21: " + [ v.constructor.name, ys.constructor.name ]);
	    };
	});
	var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
	    return function (as$prime) {
	        return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
	    };
	});
	var newtypeNonEmptyList = new Data_Newtype.Newtype(function (n) {
	    return n;
	}, NonEmptyList);
	var monoidList = new Data_Monoid.Monoid(function () {
	    return semigroupList;
	}, Nil.value);
	var genericList = function (dictGeneric) {
	    return new Data_Generic.Generic(function (v) {
	        if (v instanceof Data_Generic.SProd && (v.value0 === "Data.List.Types.Nil" && v.value1.length === 0)) {
	            return new Data_Maybe.Just(Nil.value);
	        };
	        if (v instanceof Data_Generic.SProd && (v.value0 === "Data.List.Types.Cons" && v.value1.length === 2)) {
	            return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Cons.create))(Data_Generic.fromSpine(dictGeneric)(v.value1[0](Data_Unit.unit))))(Data_Generic.fromSpine(genericList(dictGeneric))(v.value1[1](Data_Unit.unit)));
	        };
	        return Data_Maybe.Nothing.value;
	    }, function ($dollarq) {
	        return new Data_Generic.SigProd("Data.List.Types.List", [ {
	            sigConstructor: "Data.List.Types.Nil", 
	            sigValues: [  ]
	        }, {
	            sigConstructor: "Data.List.Types.Cons", 
	            sigValues: [ function ($dollarq1) {
	                return Data_Generic.toSignature(dictGeneric)(Data_Generic.anyProxy);
	            }, function ($dollarq1) {
	                return Data_Generic.toSignature(genericList(dictGeneric))(Data_Generic.anyProxy);
	            } ]
	        } ]);
	    }, function (v) {
	        if (v instanceof Nil) {
	            return new Data_Generic.SProd("Data.List.Types.Nil", [  ]);
	        };
	        if (v instanceof Cons) {
	            return new Data_Generic.SProd("Data.List.Types.Cons", [ function ($dollarq) {
	                return Data_Generic.toSpine(dictGeneric)(v.value0);
	            }, function ($dollarq) {
	                return Data_Generic.toSpine(genericList(dictGeneric))(v.value1);
	            } ]);
	        };
	        throw new Error("Failed pattern match: " + [ v.constructor.name ]);
	    });
	};
	var genericEmptyList = function (dictGeneric) {
	    return Data_Generic.genericNonEmpty(genericList(dictGeneric))(dictGeneric);
	};
	var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return Data_Foldable.foldl(foldableList)(function (acc) {
	            return function ($133) {
	                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(acc)(f($133));
	            };
	        })(Data_Monoid.mempty(dictMonoid));
	    };
	}, function (f) {
	    var go = function (__copy_b) {
	        return function (__copy_v) {
	            var b = __copy_b;
	            var v = __copy_v;
	            tco: while (true) {
	                if (v instanceof Nil) {
	                    return b;
	                };
	                if (v instanceof Cons) {
	                    var __tco_b = f(b)(v.value0);
	                    var __tco_v = v.value1;
	                    b = __tco_b;
	                    v = __tco_v;
	                    continue tco;
	                };
	                throw new Error("Failed pattern match at Data.List.Types line 67, column 3 - line 70, column 34: " + [ b.constructor.name, v.constructor.name ]);
	            };
	        };
	    };
	    return go;
	}, function (f) {
	    return function (b) {
	        return function (as) {
	            var rev = function (__copy_acc) {
	                return function (__copy_v) {
	                    var acc = __copy_acc;
	                    var v = __copy_v;
	                    tco: while (true) {
	                        if (v instanceof Nil) {
	                            return acc;
	                        };
	                        if (v instanceof Cons) {
	                            var __tco_acc = new Cons(v.value0, acc);
	                            var __tco_v = v.value1;
	                            acc = __tco_acc;
	                            v = __tco_v;
	                            continue tco;
	                        };
	                        throw new Error("Failed pattern match at Data.List.Types line 63, column 3 - line 66, column 40: " + [ acc.constructor.name, v.constructor.name ]);
	                    };
	                };
	            };
	            return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev(Nil.value)(as));
	        };
	    };
	});
	var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
	var functorList = new Data_Functor.Functor(function (f) {
	    return Data_Foldable.foldr(foldableList)(function (x) {
	        return function (acc) {
	            return new Cons(f(x), acc);
	        };
	    })(Nil.value);
	});
	var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
	var showList = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        if (v instanceof Nil) {
	            return "Nil";
	        };
	        return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
	    });
	};
	var showNonEmptyList = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
	    });
	};
	var traversableList = new Data_Traversable.Traversable(function () {
	    return foldableList;
	}, function () {
	    return functorList;
	}, function (dictApplicative) {
	    return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
	}, function (dictApplicative) {
	    return function (f) {
	        return function ($134) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value))(Data_Foldable.foldl(foldableList)(function (acc) {
	                return function ($135) {
	                    return Control_Apply.lift2(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Function.flip(Cons.create))(acc)(f($135));
	                };
	            })(Control_Applicative.pure(dictApplicative)(Nil.value))($134));
	        };
	    };
	});
	var traversableNonEmptyList = Data_NonEmpty.traversableNonEmpty(traversableList);
	var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
	    return function (b) {
	        var go = function (__copy_source) {
	            return function (__copy_memo) {
	                var source = __copy_source;
	                var memo = __copy_memo;
	                tco: while (true) {
	                    var $75 = f(source);
	                    if ($75 instanceof Data_Maybe.Nothing) {
	                        return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
	                    };
	                    if ($75 instanceof Data_Maybe.Just) {
	                        var __tco_memo = new Cons($75.value0.value0, memo);
	                        source = $75.value0.value1;
	                        memo = __tco_memo;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.List.Types line 76, column 24 - line 78, column 54: " + [ $75.constructor.name ]);
	                };
	            };
	        };
	        return go(b)(Nil.value);
	    };
	});
	var extendNonEmptyList = new Control_Extend.Extend(function () {
	    return functorNonEmptyList;
	}, function (f) {
	    return function (v) {
	        var go = function (a) {
	            return function (v1) {
	                return {
	                    val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val), 
	                    acc: new Cons(a, v1.acc)
	                };
	            };
	        };
	        return new Data_NonEmpty.NonEmpty(f(v), (Data_Foldable.foldr(foldableList)(go)({
	            val: Nil.value, 
	            acc: Nil.value
	        })(v.value1)).val);
	    };
	});
	var extendList = new Control_Extend.Extend(function () {
	    return functorList;
	}, function (f) {
	    return function (v) {
	        if (v instanceof Nil) {
	            return Nil.value;
	        };
	        if (v instanceof Cons) {
	            var go = function (a$prime) {
	                return function (v1) {
	                    var acc$prime = new Cons(a$prime, v1.acc);
	                    return {
	                        val: new Cons(f(acc$prime), v1.val), 
	                        acc: acc$prime
	                    };
	                };
	            };
	            return new Cons(f(v), (Data_Foldable.foldr(foldableList)(go)({
	                val: Nil.value, 
	                acc: Nil.value
	            })(v.value1)).val);
	        };
	        throw new Error("Failed pattern match at Data.List.Types line 110, column 3 - line 110, column 21: " + [ f.constructor.name, v.constructor.name ]);
	    };
	});
	var eqList = function (dictEq) {
	    return new Data_Eq.Eq(function (xs) {
	        return function (ys) {
	            var go = function (__copy_v) {
	                return function (__copy_v1) {
	                    return function (__copy_v2) {
	                        var v = __copy_v;
	                        var v1 = __copy_v1;
	                        var v2 = __copy_v2;
	                        tco: while (true) {
	                            if (!v2) {
	                                return false;
	                            };
	                            if (v instanceof Nil && v1 instanceof Nil) {
	                                return v2;
	                            };
	                            if (v instanceof Cons && v1 instanceof Cons) {
	                                var __tco_v = v.value1;
	                                var __tco_v1 = v1.value1;
	                                var __tco_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
	                                v = __tco_v;
	                                v1 = __tco_v1;
	                                v2 = __tco_v2;
	                                continue tco;
	                            };
	                            return false;
	                        };
	                    };
	                };
	            };
	            return go(xs)(ys)(true);
	        };
	    });
	};
	var eqNonEmptyList = function (dictEq) {
	    return Data_NonEmpty.eqNonEmpty(dictEq)(eqList(dictEq));
	};
	var ordList = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqList(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (xs) {
	        return function (ys) {
	            var go = function (__copy_v) {
	                return function (__copy_v1) {
	                    var v = __copy_v;
	                    var v1 = __copy_v1;
	                    tco: while (true) {
	                        if (v instanceof Nil && v1 instanceof Nil) {
	                            return Data_Ordering.EQ.value;
	                        };
	                        if (v instanceof Nil) {
	                            return Data_Ordering.LT.value;
	                        };
	                        if (v1 instanceof Nil) {
	                            return Data_Ordering.GT.value;
	                        };
	                        if (v instanceof Cons && v1 instanceof Cons) {
	                            var $104 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
	                            if ($104 instanceof Data_Ordering.EQ) {
	                                var __tco_v = v.value1;
	                                var __tco_v1 = v1.value1;
	                                v = __tco_v;
	                                v1 = __tco_v1;
	                                continue tco;
	                            };
	                            return $104;
	                        };
	                        throw new Error("Failed pattern match at Data.List.Types line 42, column 3 - line 50, column 23: " + [ v.constructor.name, v1.constructor.name ]);
	                    };
	                };
	            };
	            return go(xs)(ys);
	        };
	    });
	};
	var ordNonEmptyList = function (dictOrd) {
	    return Data_NonEmpty.ordNonEmpty(dictOrd)(ordList(dictOrd));
	};
	var comonadNonEmptyList = new Control_Comonad.Comonad(function () {
	    return extendNonEmptyList;
	}, function (v) {
	    return v.value0;
	});
	var applyList = new Control_Apply.Apply(function () {
	    return functorList;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Nil) {
	            return Nil.value;
	        };
	        if (v instanceof Cons) {
	            return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
	        };
	        throw new Error("Failed pattern match at Data.List.Types line 85, column 3 - line 85, column 20: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var applyNonEmptyList = new Control_Apply.Apply(function () {
	    return functorNonEmptyList;
	}, function (v) {
	    return function (v1) {
	        return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
	    };
	});
	var bindList = new Control_Bind.Bind(function () {
	    return applyList;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Nil) {
	            return Nil.value;
	        };
	        if (v instanceof Cons) {
	            return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
	        };
	        throw new Error("Failed pattern match at Data.List.Types line 92, column 3 - line 92, column 19: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var bindNonEmptyList = new Control_Bind.Bind(function () {
	    return applyNonEmptyList;
	}, function (v) {
	    return function (f) {
	        var $128 = f(v.value0);
	        return new Data_NonEmpty.NonEmpty($128.value0, Data_Semigroup.append(semigroupList)($128.value1)(Control_Bind.bind(bindList)(v.value1)(function ($136) {
	            return toList(f($136));
	        })));
	    };
	});
	var applicativeList = new Control_Applicative.Applicative(function () {
	    return applyList;
	}, function (a) {
	    return new Cons(a, Nil.value);
	});
	var monadList = new Control_Monad.Monad(function () {
	    return applicativeList;
	}, function () {
	    return bindList;
	});
	var altNonEmptyList = new Control_Alt.Alt(function () {
	    return functorNonEmptyList;
	}, Data_Semigroup.append(semigroupNonEmptyList));
	var altList = new Control_Alt.Alt(function () {
	    return functorList;
	}, Data_Semigroup.append(semigroupList));
	var plusList = new Control_Plus.Plus(function () {
	    return altList;
	}, Nil.value);
	var alternativeList = new Control_Alternative.Alternative(function () {
	    return applicativeList;
	}, function () {
	    return plusList;
	});
	var monadZeroList = new Control_MonadZero.MonadZero(function () {
	    return alternativeList;
	}, function () {
	    return monadList;
	});
	var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
	    return monadZeroList;
	});
	var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
	    return applyNonEmptyList;
	}, function ($137) {
	    return NonEmptyList(Data_NonEmpty.singleton(plusList)($137));
	});
	var monadNonEmptyList = new Control_Monad.Monad(function () {
	    return applicativeNonEmptyList;
	}, function () {
	    return bindNonEmptyList;
	});
	module.exports = {
	    Nil: Nil, 
	    Cons: Cons, 
	    NonEmptyList: NonEmptyList, 
	    toList: toList, 
	    genericList: genericList, 
	    showList: showList, 
	    eqList: eqList, 
	    ordList: ordList, 
	    semigroupList: semigroupList, 
	    monoidList: monoidList, 
	    functorList: functorList, 
	    foldableList: foldableList, 
	    unfoldableList: unfoldableList, 
	    traversableList: traversableList, 
	    applyList: applyList, 
	    applicativeList: applicativeList, 
	    bindList: bindList, 
	    monadList: monadList, 
	    altList: altList, 
	    plusList: plusList, 
	    alternativeList: alternativeList, 
	    monadZeroList: monadZeroList, 
	    monadPlusList: monadPlusList, 
	    extendList: extendList, 
	    newtypeNonEmptyList: newtypeNonEmptyList, 
	    eqNonEmptyList: eqNonEmptyList, 
	    ordNonEmptyList: ordNonEmptyList, 
	    genericEmptyList: genericEmptyList, 
	    showNonEmptyList: showNonEmptyList, 
	    functorNonEmptyList: functorNonEmptyList, 
	    applyNonEmptyList: applyNonEmptyList, 
	    applicativeNonEmptyList: applicativeNonEmptyList, 
	    bindNonEmptyList: bindNonEmptyList, 
	    monadNonEmptyList: monadNonEmptyList, 
	    altNonEmptyList: altNonEmptyList, 
	    extendNonEmptyList: extendNonEmptyList, 
	    comonadNonEmptyList: comonadNonEmptyList, 
	    semigroupNonEmptyList: semigroupNonEmptyList, 
	    foldableNonEmptyList: foldableNonEmptyList, 
	    traversableNonEmptyList: traversableNonEmptyList
	};


/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.10.2
	"use strict";
	var $foreign = __webpack_require__(113);
	var Prelude = __webpack_require__(16);
	var Data_Array = __webpack_require__(69);
	var Data_Either = __webpack_require__(15);
	var Data_Foldable = __webpack_require__(57);
	var Data_Identity = __webpack_require__(79);
	var Data_Maybe = __webpack_require__(60);
	var Data_NonEmpty = __webpack_require__(84);
	var Data_String = __webpack_require__(90);
	var Data_Traversable = __webpack_require__(67);
	var Data_Tuple = __webpack_require__(85);
	var Type_Proxy = __webpack_require__(114);
	var Control_Semigroupoid = __webpack_require__(7);
	var Data_Functor = __webpack_require__(3);
	var Data_Unit = __webpack_require__(8);
	var Control_Apply = __webpack_require__(18);
	var Control_Applicative = __webpack_require__(17);
	var Data_Ordering = __webpack_require__(35);
	var Data_Eq = __webpack_require__(31);
	var Data_HeytingAlgebra = __webpack_require__(25);
	var Data_Ord = __webpack_require__(29);
	var Data_Function = __webpack_require__(5);
	var Data_Show = __webpack_require__(10);
	var Data_Semigroup = __webpack_require__(12);
	var Data_Monoid = __webpack_require__(47);
	var Data_Ring = __webpack_require__(36);
	var Data_Boolean = __webpack_require__(23);
	var SProd = (function () {
	    function SProd(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    SProd.create = function (value0) {
	        return function (value1) {
	            return new SProd(value0, value1);
	        };
	    };
	    return SProd;
	})();
	var SRecord = (function () {
	    function SRecord(value0) {
	        this.value0 = value0;
	    };
	    SRecord.create = function (value0) {
	        return new SRecord(value0);
	    };
	    return SRecord;
	})();
	var SNumber = (function () {
	    function SNumber(value0) {
	        this.value0 = value0;
	    };
	    SNumber.create = function (value0) {
	        return new SNumber(value0);
	    };
	    return SNumber;
	})();
	var SBoolean = (function () {
	    function SBoolean(value0) {
	        this.value0 = value0;
	    };
	    SBoolean.create = function (value0) {
	        return new SBoolean(value0);
	    };
	    return SBoolean;
	})();
	var SInt = (function () {
	    function SInt(value0) {
	        this.value0 = value0;
	    };
	    SInt.create = function (value0) {
	        return new SInt(value0);
	    };
	    return SInt;
	})();
	var SString = (function () {
	    function SString(value0) {
	        this.value0 = value0;
	    };
	    SString.create = function (value0) {
	        return new SString(value0);
	    };
	    return SString;
	})();
	var SChar = (function () {
	    function SChar(value0) {
	        this.value0 = value0;
	    };
	    SChar.create = function (value0) {
	        return new SChar(value0);
	    };
	    return SChar;
	})();
	var SArray = (function () {
	    function SArray(value0) {
	        this.value0 = value0;
	    };
	    SArray.create = function (value0) {
	        return new SArray(value0);
	    };
	    return SArray;
	})();
	var SUnit = (function () {
	    function SUnit() {

	    };
	    SUnit.value = new SUnit();
	    return SUnit;
	})();
	var SigProd = (function () {
	    function SigProd(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    SigProd.create = function (value0) {
	        return function (value1) {
	            return new SigProd(value0, value1);
	        };
	    };
	    return SigProd;
	})();
	var SigRecord = (function () {
	    function SigRecord(value0) {
	        this.value0 = value0;
	    };
	    SigRecord.create = function (value0) {
	        return new SigRecord(value0);
	    };
	    return SigRecord;
	})();
	var SigNumber = (function () {
	    function SigNumber() {

	    };
	    SigNumber.value = new SigNumber();
	    return SigNumber;
	})();
	var SigBoolean = (function () {
	    function SigBoolean() {

	    };
	    SigBoolean.value = new SigBoolean();
	    return SigBoolean;
	})();
	var SigInt = (function () {
	    function SigInt() {

	    };
	    SigInt.value = new SigInt();
	    return SigInt;
	})();
	var SigString = (function () {
	    function SigString() {

	    };
	    SigString.value = new SigString();
	    return SigString;
	})();
	var SigChar = (function () {
	    function SigChar() {

	    };
	    SigChar.value = new SigChar();
	    return SigChar;
	})();
	var SigArray = (function () {
	    function SigArray(value0) {
	        this.value0 = value0;
	    };
	    SigArray.create = function (value0) {
	        return new SigArray(value0);
	    };
	    return SigArray;
	})();
	var SigUnit = (function () {
	    function SigUnit() {

	    };
	    SigUnit.value = new SigUnit();
	    return SigUnit;
	})();
	var Generic = function (fromSpine, toSignature, toSpine) {
	    this.fromSpine = fromSpine;
	    this.toSignature = toSignature;
	    this.toSpine = toSpine;
	};
	var toSpine = function (dict) {
	    return dict.toSpine;
	};
	var toSignature = function (dict) {
	    return dict.toSignature;
	};
	var showArray = function (f) {
	    return function (xs) {
	        return "[ " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(Data_Functor.map(Data_Functor.functorArray)(f)(xs)) + " ]");
	    };
	};
	var orderingToInt = function (v) {
	    if (v instanceof Data_Ordering.EQ) {
	        return 0;
	    };
	    if (v instanceof Data_Ordering.LT) {
	        return 1;
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return -1;
	    };
	    throw new Error("Failed pattern match at Data.Generic line 467, column 17 - line 470, column 10: " + [ v.constructor.name ]);
	};
	var genericUnit = new Generic(function (v) {
	    if (v instanceof SUnit) {
	        return new Data_Maybe.Just(Data_Unit.unit);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigUnit.value;
	}, function (v) {
	    return SUnit.value;
	});
	var genericString = new Generic(function (v) {
	    if (v instanceof SString) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigString.value;
	}, SString.create);
	var genericOrdering = new Generic(function (v) {
	    if (v instanceof SProd && (v.value0 === "Data.Ordering.LT" && v.value1.length === 0)) {
	        return new Data_Maybe.Just(Data_Ordering.LT.value);
	    };
	    if (v instanceof SProd && (v.value0 === "Data.Ordering.EQ" && v.value1.length === 0)) {
	        return new Data_Maybe.Just(Data_Ordering.EQ.value);
	    };
	    if (v instanceof SProd && (v.value0 === "Data.Ordering.GT" && v.value1.length === 0)) {
	        return new Data_Maybe.Just(Data_Ordering.GT.value);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return new SigProd("Data.Ordering.Ordering", [ {
	        sigConstructor: "Data.Ordering.LT", 
	        sigValues: [  ]
	    }, {
	        sigConstructor: "Data.Ordering.EQ", 
	        sigValues: [  ]
	    }, {
	        sigConstructor: "Data.Ordering.GT", 
	        sigValues: [  ]
	    } ]);
	}, function (v) {
	    if (v instanceof Data_Ordering.LT) {
	        return new SProd("Data.Ordering.LT", [  ]);
	    };
	    if (v instanceof Data_Ordering.EQ) {
	        return new SProd("Data.Ordering.EQ", [  ]);
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return new SProd("Data.Ordering.GT", [  ]);
	    };
	    throw new Error("Failed pattern match at Data.Generic line 168, column 13 - line 171, column 38: " + [ v.constructor.name ]);
	});
	var genericNumber = new Generic(function (v) {
	    if (v instanceof SNumber) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigNumber.value;
	}, SNumber.create);
	var genericInt = new Generic(function (v) {
	    if (v instanceof SInt) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigInt.value;
	}, SInt.create);
	var genericChar = new Generic(function (v) {
	    if (v instanceof SChar) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigChar.value;
	}, SChar.create);
	var genericBool = new Generic(function (v) {
	    if (v instanceof SBoolean) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigBoolean.value;
	}, SBoolean.create);
	var fromSpine = function (dict) {
	    return dict.fromSpine;
	};
	var force = function (f) {
	    return f(Data_Unit.unit);
	};
	var genericArray = function (dictGeneric) {
	    return new Generic(function (v) {
	        if (v instanceof SArray) {
	            return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(function ($272) {
	                return fromSpine(dictGeneric)(force($272));
	            })(v.value0);
	        };
	        return Data_Maybe.Nothing.value;
	    }, function (x) {
	        var lowerProxy = function (v) {
	            return (Type_Proxy["Proxy"]).value;
	        };
	        return new SigArray(function (v) {
	            return toSignature(dictGeneric)(lowerProxy(x));
	        });
	    }, function ($273) {
	        return SArray.create(Data_Functor.map(Data_Functor.functorArray)(function (x) {
	            return function (v) {
	                return toSpine(dictGeneric)(x);
	            };
	        })($273));
	    });
	};
	var genericEither = function (dictGeneric) {
	    return function (dictGeneric1) {
	        return new Generic(function (v) {
	            if (v instanceof SProd && (v.value0 === "Data.Either.Left" && v.value1.length === 1)) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(fromSpine(dictGeneric)(force(v.value1[0])));
	            };
	            if (v instanceof SProd && (v.value0 === "Data.Either.Right" && v.value1.length === 1)) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(fromSpine(dictGeneric1)(force(v.value1[0])));
	            };
	            return Data_Maybe.Nothing.value;
	        }, function (x) {
	            var rproxy = function (v) {
	                return (Type_Proxy["Proxy"]).value;
	            };
	            var lproxy = function (v) {
	                return (Type_Proxy["Proxy"]).value;
	            };
	            return new SigProd("Data.Either.Either", [ {
	                sigConstructor: "Data.Either.Left", 
	                sigValues: [ function (v) {
	                    return toSignature(dictGeneric)(lproxy(x));
	                } ]
	            }, {
	                sigConstructor: "Data.Either.Right", 
	                sigValues: [ function (v) {
	                    return toSignature(dictGeneric1)(rproxy(x));
	                } ]
	            } ]);
	        }, function (v) {
	            if (v instanceof Data_Either.Left) {
	                return new SProd("Data.Either.Left", [ function (v1) {
	                    return toSpine(dictGeneric)(v.value0);
	                } ]);
	            };
	            if (v instanceof Data_Either.Right) {
	                return new SProd("Data.Either.Right", [ function (v1) {
	                    return toSpine(dictGeneric1)(v.value0);
	                } ]);
	            };
	            throw new Error("Failed pattern match at Data.Generic line 131, column 3 - line 131, column 64: " + [ v.constructor.name ]);
	        });
	    };
	};
	var genericIdentity = function (dictGeneric) {
	    return new Generic(function (v) {
	        if (v instanceof SProd && (v.value0 === "Data.Identity.Identity" && v.value1.length === 1)) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Identity.Identity)(fromSpine(dictGeneric)(force(v.value1[0])));
	        };
	        return Data_Maybe.Nothing.value;
	    }, function (x) {
	        var iproxy = function (v) {
	            return (Type_Proxy["Proxy"]).value;
	        };
	        return new SigProd("Data.Identity.Identity", [ {
	            sigConstructor: "Data.Identity.Identity", 
	            sigValues: [ function (v) {
	                return toSignature(dictGeneric)(iproxy(x));
	            } ]
	        } ]);
	    }, function (v) {
	        return new SProd("Data.Identity.Identity", [ function (v1) {
	            return toSpine(dictGeneric)(v);
	        } ]);
	    });
	};
	var genericMaybe = function (dictGeneric) {
	    return new Generic(function (v) {
	        if (v instanceof SProd && (v.value0 === "Data.Maybe.Just" && v.value1.length === 1)) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(fromSpine(dictGeneric)(force(v.value1[0])));
	        };
	        if (v instanceof SProd && (v.value0 === "Data.Maybe.Nothing" && v.value1.length === 0)) {
	            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
	        };
	        return Data_Maybe.Nothing.value;
	    }, function (x) {
	        var mbProxy = function (v) {
	            return (Type_Proxy["Proxy"]).value;
	        };
	        return new SigProd("Data.Maybe.Maybe", [ {
	            sigConstructor: "Data.Maybe.Just", 
	            sigValues: [ function (v) {
	                return toSignature(dictGeneric)(mbProxy(x));
	            } ]
	        }, {
	            sigConstructor: "Data.Maybe.Nothing", 
	            sigValues: [  ]
	        } ]);
	    }, function (v) {
	        if (v instanceof Data_Maybe.Just) {
	            return new SProd("Data.Maybe.Just", [ function (v1) {
	                return toSpine(dictGeneric)(v.value0);
	            } ]);
	        };
	        if (v instanceof Data_Maybe.Nothing) {
	            return new SProd("Data.Maybe.Nothing", [  ]);
	        };
	        throw new Error("Failed pattern match at Data.Generic line 111, column 3 - line 111, column 63: " + [ v.constructor.name ]);
	    });
	};
	var genericNonEmpty = function (dictGeneric) {
	    return function (dictGeneric1) {
	        return new Generic(function (v) {
	            if (v instanceof SProd && (v.value0 === "Data.NonEmpty.NonEmpty" && v.value1.length === 2)) {
	                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_NonEmpty.NonEmpty.create)(fromSpine(dictGeneric1)(force(v.value1[0]))))(fromSpine(dictGeneric)(force(v.value1[1])));
	            };
	            return Data_Maybe.Nothing.value;
	        }, function (x) {
	            var tailProxy = function (v) {
	                return (Type_Proxy["Proxy"]).value;
	            };
	            var headProxy = function (v) {
	                return (Type_Proxy["Proxy"]).value;
	            };
	            return new SigProd("Data.NonEmpty.NonEmpty", [ {
	                sigConstructor: "Data.NonEmpty.NonEmpty", 
	                sigValues: [ function (v) {
	                    return toSignature(dictGeneric1)(headProxy(x));
	                }, function (v) {
	                    return toSignature(dictGeneric)(tailProxy(x));
	                } ]
	            } ]);
	        }, function (v) {
	            return new SProd("Data.NonEmpty.NonEmpty", [ function (v1) {
	                return toSpine(dictGeneric1)(v.value0);
	            }, function (v1) {
	                return toSpine(dictGeneric)(v.value1);
	            } ]);
	        });
	    };
	};
	var genericShowPrec = function (v) {
	    return function (v1) {
	        if (v1 instanceof SProd) {
	            if (Data_Array["null"](v1.value1)) {
	                return v1.value0;
	            };
	            if (Data_Boolean.otherwise) {
	                var showParen = function (v2) {
	                    return function (x) {
	                        if (!v2) {
	                            return x;
	                        };
	                        if (v2) {
	                            return "(" + (x + ")");
	                        };
	                        throw new Error("Failed pattern match at Data.Generic line 396, column 7 - line 396, column 28: " + [ v2.constructor.name, x.constructor.name ]);
	                    };
	                };
	                return showParen(v > 10)(v1.value0 + (" " + Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
	                    return genericShowPrec(11)(force(x));
	                })(v1.value1))));
	            };
	        };
	        if (v1 instanceof SRecord) {
	            var showLabelPart = function (x) {
	                return x.recLabel + (": " + genericShowPrec(0)(force(x.recValue)));
	            };
	            return "{" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(showLabelPart)(v1.value0)) + "}");
	        };
	        if (v1 instanceof SBoolean) {
	            return Data_Show.show(Data_Show.showBoolean)(v1.value0);
	        };
	        if (v1 instanceof SInt) {
	            return Data_Show.show(Data_Show.showInt)(v1.value0);
	        };
	        if (v1 instanceof SNumber) {
	            return Data_Show.show(Data_Show.showNumber)(v1.value0);
	        };
	        if (v1 instanceof SString) {
	            return Data_Show.show(Data_Show.showString)(v1.value0);
	        };
	        if (v1 instanceof SChar) {
	            return Data_Show.show(Data_Show.showChar)(v1.value0);
	        };
	        if (v1 instanceof SArray) {
	            return "[" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
	                return genericShowPrec(0)(force(x));
	            })(v1.value0)) + "]");
	        };
	        if (v1 instanceof SUnit) {
	            return "unit";
	        };
	        throw new Error("Failed pattern match at Data.Generic line 390, column 1 - line 398, column 1: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	};
	var gShow = function (dictGeneric) {
	    return function ($274) {
	        return genericShowPrec(0)(toSpine(dictGeneric)($274));
	    };
	};
	var genericTuple = function (dictGeneric) {
	    return function (dictGeneric1) {
	        return new Generic(function (v) {
	            if (v instanceof SProd && (v.value0 === "Data.Tuple.Tuple" && v.value1.length === 2)) {
	                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(fromSpine(dictGeneric)(force(v.value1[0]))))(fromSpine(dictGeneric1)(force(v.value1[1])));
	            };
	            return Data_Maybe.Nothing.value;
	        }, function (x) {
	            var sndProxy = function (v) {
	                return (Type_Proxy["Proxy"]).value;
	            };
	            var fstProxy = function (v) {
	                return (Type_Proxy["Proxy"]).value;
	            };
	            return new SigProd("Data.Tuple.Tuple", [ {
	                sigConstructor: "Data.Tuple.Tuple", 
	                sigValues: [ function (v) {
	                    return toSignature(dictGeneric)(fstProxy(x));
	                }, function (v) {
	                    return toSignature(dictGeneric1)(sndProxy(x));
	                } ]
	            } ]);
	        }, function (v) {
	            return new SProd("Data.Tuple.Tuple", [ function (v1) {
	                return toSpine(dictGeneric)(v.value0);
	            }, function (v1) {
	                return toSpine(dictGeneric1)(v.value1);
	            } ]);
	        });
	    };
	};
	var isValidSpine = function (v) {
	    return function (v1) {
	        if (v instanceof SigBoolean && v1 instanceof SBoolean) {
	            return true;
	        };
	        if (v instanceof SigNumber && v1 instanceof SNumber) {
	            return true;
	        };
	        if (v instanceof SigInt && v1 instanceof SInt) {
	            return true;
	        };
	        if (v instanceof SigString && v1 instanceof SString) {
	            return true;
	        };
	        if (v instanceof SigChar && v1 instanceof SChar) {
	            return true;
	        };
	        if (v instanceof SigArray && v1 instanceof SArray) {
	            return Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function ($275) {
	                return isValidSpine(force(v.value0))(force($275));
	            })(v1.value0);
	        };
	        if (v instanceof SigProd && v1 instanceof SProd) {
	            var $182 = Data_Foldable.find(Data_Foldable.foldableArray)(function (alt) {
	                return alt.sigConstructor === v1.value0;
	            })(v.value1);
	            if ($182 instanceof Data_Maybe.Nothing) {
	                return false;
	            };
	            if ($182 instanceof Data_Maybe.Just) {
	                return Data_Foldable.and(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Array.zipWith(function (sig) {
	                    return function (spine) {
	                        return isValidSpine(force(sig))(force(spine));
	                    };
	                })($182.value0.sigValues)(v1.value1));
	            };
	            throw new Error("Failed pattern match at Data.Generic line 367, column 3 - line 373, column 15: " + [ $182.constructor.name ]);
	        };
	        if (v instanceof SigRecord && v1 instanceof SRecord) {
	            return Data_Foldable.and(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Array.zipWith(function (sig) {
	                return function (val) {
	                    return isValidSpine(force(sig.recValue))(force(val.recValue));
	                };
	            })(Data_Array.sortBy(function (a) {
	                return function (b) {
	                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
	                };
	            })(v.value0))(Data_Array.sortBy(function (a) {
	                return function (b) {
	                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
	                };
	            })(v1.value0)));
	        };
	        if (v instanceof SigUnit && v1 instanceof SUnit) {
	            return true;
	        };
	        return false;
	    };
	};
	var showSignature = function (sig) {
	    var needsParen = function (s) {
	        if (s instanceof SigProd) {
	            return true;
	        };
	        if (s instanceof SigRecord) {
	            return true;
	        };
	        if (s instanceof SigNumber) {
	            return false;
	        };
	        if (s instanceof SigBoolean) {
	            return false;
	        };
	        if (s instanceof SigInt) {
	            return false;
	        };
	        if (s instanceof SigString) {
	            return false;
	        };
	        if (s instanceof SigChar) {
	            return false;
	        };
	        if (s instanceof SigArray) {
	            return true;
	        };
	        if (s instanceof SigUnit) {
	            return false;
	        };
	        throw new Error("Failed pattern match at Data.Generic line 333, column 18 - line 342, column 21: " + [ s.constructor.name ]);
	    };
	    var paren = function (s) {
	        if (needsParen(s)) {
	            return "(" + (showSignature(s) + ")");
	        };
	        if (Data_Boolean.otherwise) {
	            return showSignature(s);
	        };
	        throw new Error("Failed pattern match at Data.Generic line 315, column 1 - line 342, column 21: " + [ s.constructor.name ]);
	    };
	    return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)((function () {
	        if (sig instanceof SigProd) {
	            return [ "SigProd ", Data_Show.show(Data_Show.showString)(sig.value0), " ", showArray(showDataConstructor)(sig.value1) ];
	        };
	        if (sig instanceof SigRecord) {
	            return [ "SigRecord ", showArray(showLabel)(sig.value0) ];
	        };
	        if (sig instanceof SigNumber) {
	            return [ "SigNumber" ];
	        };
	        if (sig instanceof SigBoolean) {
	            return [ "SigBoolean" ];
	        };
	        if (sig instanceof SigInt) {
	            return [ "SigInt" ];
	        };
	        if (sig instanceof SigString) {
	            return [ "SigString" ];
	        };
	        if (sig instanceof SigChar) {
	            return [ "SigChar" ];
	        };
	        if (sig instanceof SigArray) {
	            return [ "SigArray ", paren(force(sig.value0)) ];
	        };
	        if (sig instanceof SigUnit) {
	            return [ "SigUnit" ];
	        };
	        throw new Error("Failed pattern match at Data.Generic line 316, column 3 - line 326, column 27: " + [ sig.constructor.name ]);
	    })());
	};
	var showLabel = function (l) {
	    return "{ recLabel: " + (Data_Show.show(Data_Show.showString)(l.recLabel) + (", recValue: " + (showSignature(force(l.recValue)) + " }")));
	};
	var showDataConstructor = function (dc) {
	    return "{ sigConstructor: " + (Data_Show.show(Data_Show.showString)(dc.sigConstructor) + (", sigValues: " + (showArray(function ($276) {
	        return showSignature(force($276));
	    })(dc.sigValues) + "}")));
	};
	var showGenericSignature = new Data_Show.Show(showSignature);
	var eqThunk = function (dictEq) {
	    return function (x) {
	        return function (y) {
	            return Data_Eq.eq(dictEq)(force(x))(force(y));
	        };
	    };
	};
	var eqRecordSigs = function (dictEq) {
	    return function (arr1) {
	        return function (arr2) {
	            var labelCompare = function (r1) {
	                return function (r2) {
	                    return Data_Ord.compare(Data_Ord.ordString)(r1.recLabel)(r2.recLabel);
	                };
	            };
	            var sorted1 = Data_Array.sortBy(labelCompare)(arr1);
	            var sorted2 = Data_Array.sortBy(labelCompare)(arr2);
	            var doCmp = function (x) {
	                return function (y) {
	                    return x.recLabel === y.recLabel && Data_Eq.eq(dictEq)(force(x.recValue))(force(y.recValue));
	                };
	            };
	            return Data_Array.length(arr1) === Data_Array.length(arr2) && $foreign.zipAll(doCmp)(sorted1)(sorted2);
	        };
	    };
	};
	var eqGenericSpine = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        if (v instanceof SProd && v1 instanceof SProd) {
	            return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value1)(v1.value1));
	        };
	        if (v instanceof SRecord && v1 instanceof SRecord) {
	            return eqRecordSigs(eqGenericSpine)(v.value0)(v1.value0);
	        };
	        if (v instanceof SNumber && v1 instanceof SNumber) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SBoolean && v1 instanceof SBoolean) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SInt && v1 instanceof SInt) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SString && v1 instanceof SString) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SChar && v1 instanceof SChar) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SArray && v1 instanceof SArray) {
	            return Data_Array.length(v.value0) === Data_Array.length(v1.value0) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value0)(v1.value0);
	        };
	        if (v instanceof SUnit && v1 instanceof SUnit) {
	            return true;
	        };
	        return false;
	    };
	});
	var gEq = function (dictGeneric) {
	    return function (x) {
	        return function (y) {
	            return Data_Eq.eq(eqGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
	        };
	    };
	};
	var eqGenericSignature = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        if (v instanceof SigProd && v1 instanceof SigProd) {
	            return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqDataConstructor)(v.value1)(v1.value1));
	        };
	        if (v instanceof SigRecord && v1 instanceof SigRecord) {
	            return eqRecordSigs(eqGenericSignature)(v.value0)(v1.value0);
	        };
	        if (v instanceof SigNumber && v1 instanceof SigNumber) {
	            return true;
	        };
	        if (v instanceof SigBoolean && v1 instanceof SigBoolean) {
	            return true;
	        };
	        if (v instanceof SigInt && v1 instanceof SigInt) {
	            return true;
	        };
	        if (v instanceof SigString && v1 instanceof SigString) {
	            return true;
	        };
	        if (v instanceof SigChar && v1 instanceof SigChar) {
	            return true;
	        };
	        if (v instanceof SigArray && v1 instanceof SigArray) {
	            return eqThunk(eqGenericSignature)(v.value0)(v1.value0);
	        };
	        if (v instanceof SigUnit && v1 instanceof SigUnit) {
	            return true;
	        };
	        return false;
	    };
	});
	var eqDataConstructor = function (p1) {
	    return function (p2) {
	        return p1.sigConstructor === p2.sigConstructor && $foreign.zipAll(eqThunk(eqGenericSignature))(p1.sigValues)(p2.sigValues);
	    };
	};
	var compareThunk = function (dictOrd) {
	    return function (x) {
	        return function (y) {
	            return orderingToInt(Data_Ord.compare(dictOrd)(force(x))(force(y)));
	        };
	    };
	};
	var ordGenericSpine = new Data_Ord.Ord(function () {
	    return eqGenericSpine;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof SProd && v1 instanceof SProd) {
	            var $234 = Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
	            if ($234 instanceof Data_Ordering.EQ) {
	                return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value1)(v1.value1));
	            };
	            return $234;
	        };
	        if (v instanceof SProd) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SProd) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SRecord && v1 instanceof SRecord) {
	            var go = function (x) {
	                return function (y) {
	                    var $243 = Data_Ord.compare(Data_Ord.ordString)(x.recLabel)(y.recLabel);
	                    if ($243 instanceof Data_Ordering.EQ) {
	                        return orderingToInt(Data_Ord.compare(ordGenericSpine)(force(x.recValue))(force(y.recValue)));
	                    };
	                    return orderingToInt($243);
	                };
	            };
	            return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(go)(v.value0)(v1.value0));
	        };
	        if (v instanceof SRecord) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SRecord) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SInt && v1 instanceof SInt) {
	            return Data_Ord.compare(Data_Ord.ordInt)(v.value0)(v1.value0);
	        };
	        if (v instanceof SInt) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SInt) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SBoolean && v1 instanceof SBoolean) {
	            return Data_Ord.compare(Data_Ord.ordBoolean)(v.value0)(v1.value0);
	        };
	        if (v instanceof SBoolean) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SBoolean) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SNumber && v1 instanceof SNumber) {
	            return Data_Ord.compare(Data_Ord.ordNumber)(v.value0)(v1.value0);
	        };
	        if (v instanceof SNumber) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SNumber) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SString && v1 instanceof SString) {
	            return Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
	        };
	        if (v instanceof SString) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SString) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SChar && v1 instanceof SChar) {
	            return Data_Ord.compare(Data_Ord.ordChar)(v.value0)(v1.value0);
	        };
	        if (v instanceof SChar) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SChar) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SArray && v1 instanceof SArray) {
	            return Data_Ord.compare(Data_Ord.ordInt)(0)($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value0)(v1.value0));
	        };
	        if (v instanceof SArray) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SArray) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SUnit && v1 instanceof SUnit) {
	            return Data_Ordering.EQ.value;
	        };
	        throw new Error("Failed pattern match at Data.Generic line 234, column 3 - line 237, column 15: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var gCompare = function (dictGeneric) {
	    return function (x) {
	        return function (y) {
	            return Data_Ord.compare(ordGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
	        };
	    };
	};
	module.exports = {
	    SigProd: SigProd, 
	    SigRecord: SigRecord, 
	    SigNumber: SigNumber, 
	    SigBoolean: SigBoolean, 
	    SigInt: SigInt, 
	    SigString: SigString, 
	    SigChar: SigChar, 
	    SigArray: SigArray, 
	    SigUnit: SigUnit, 
	    SProd: SProd, 
	    SRecord: SRecord, 
	    SNumber: SNumber, 
	    SBoolean: SBoolean, 
	    SInt: SInt, 
	    SString: SString, 
	    SChar: SChar, 
	    SArray: SArray, 
	    SUnit: SUnit, 
	    Generic: Generic, 
	    fromSpine: fromSpine, 
	    gCompare: gCompare, 
	    gEq: gEq, 
	    gShow: gShow, 
	    isValidSpine: isValidSpine, 
	    showDataConstructor: showDataConstructor, 
	    showSignature: showSignature, 
	    toSignature: toSignature, 
	    toSpine: toSpine, 
	    genericNumber: genericNumber, 
	    genericInt: genericInt, 
	    genericString: genericString, 
	    genericChar: genericChar, 
	    genericBool: genericBool, 
	    genericArray: genericArray, 
	    genericUnit: genericUnit, 
	    genericTuple: genericTuple, 
	    genericMaybe: genericMaybe, 
	    genericEither: genericEither, 
	    genericIdentity: genericIdentity, 
	    genericOrdering: genericOrdering, 
	    genericNonEmpty: genericNonEmpty, 
	    eqGenericSpine: eqGenericSpine, 
	    ordGenericSpine: ordGenericSpine, 
	    eqGenericSignature: eqGenericSignature, 
	    showGenericSignature: showGenericSignature
	};


/***/ },
/* 113 */
/***/ function(module, exports) {

	"use strict";

	// module Data.Generic

	exports.zipAll = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var l = xs.length < ys.length ? xs.length : ys.length;
	      for (var i = 0; i < l; i++) {
	        if (!f(xs[i])(ys[i])) {
	          return false;
	        }
	      }
	      return true;
	    };
	  };
	};

	exports.zipCompare = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var i = 0;
	      var xlen = xs.length;
	      var ylen = ys.length;
	      while (i < xlen && i < ylen) {
	        var o = f(xs[i])(ys[i]);
	        if (o !== 0) {
	          return o;
	        }
	        i++;
	      }
	      if (xlen === ylen) {
	        return 0;
	      } else if (xlen > ylen) {
	        return -1;
	      } else {
	        return 1;
	      }
	    };
	  };
	};

/***/ },
/* 114 */
/***/ function(module, exports) {

	// Generated by psc version 0.10.2
	"use strict";
	var Proxy3 = (function () {
	    function Proxy3() {

	    };
	    Proxy3.value = new Proxy3();
	    return Proxy3;
	})();
	var Proxy2 = (function () {
	    function Proxy2() {

	    };
	    Proxy2.value = new Proxy2();
	    return Proxy2;
	})();
	var $$Proxy = (function () {
	    function $$Proxy() {

	    };
	    $$Proxy.value = new $$Proxy();
	    return $$Proxy;
	})();
	module.exports = {
	    "Proxy": $$Proxy, 
	    Proxy2: Proxy2, 
	    Proxy3: Proxy3
	};


/***/ }
/******/ ]);